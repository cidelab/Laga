### YamlMime:ManagedReference
items:
- uid: LagaRhino.Shoebox
  commentId: T:LagaRhino.Shoebox
  id: Shoebox
  parent: LagaRhino
  children:
  - LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double)
  - LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - LagaRhino.Shoebox.Heigth
  - LagaRhino.Shoebox.Length
  - LagaRhino.Shoebox.ShoeBox
  - LagaRhino.Shoebox.Width
  langs:
  - csharp
  - vb
  name: Shoebox
  nameWithType: Shoebox
  fullName: LagaRhino.Shoebox
  type: Class
  source:
    id: Shoebox
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 12
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nShoebox\n"
  example: []
  syntax:
    content: 'public class Shoebox : Brep, IDisposable, ISerializable'
    content.vb: >-
      Public Class Shoebox
          Inherits Brep
          Implements IDisposable, ISerializable
  inheritance:
  - System.Object
  - Rhino.Runtime.CommonObject
  - Rhino.Geometry.GeometryBase
  - Rhino.Geometry.Brep
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
  - Rhino.Geometry.Brep.IsBox
  - Rhino.Geometry.Brep.IsBox(System.Double)
  - Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
  - Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  - Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
  - Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
  - Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
  - Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
  - Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
  - Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
  - Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
  - Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
  - Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
  - Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
  - Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
  - Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
  - Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
  - Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
  - Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  - Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  - Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
  - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
  - Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
  - Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  - Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  - Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  - Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
  - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
  - Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
  - Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
  - Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
  - Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
  - Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
  - Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
  - Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  - Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  - Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  - Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
  - Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
  - Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
  - Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
  - Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
  - Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  - Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  - Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
  - Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  - Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  - Rhino.Geometry.Brep.RemoveFins
  - Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
  - Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
  - Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
  - Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
  - Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
  - Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  - Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  - Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  - Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  - Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  - Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  - Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
  - Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  - Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
  - Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
  - Rhino.Geometry.Brep.DestroyRegionTopology
  - Rhino.Geometry.Brep.GetRegions
  - Rhino.Geometry.Brep.Duplicate
  - Rhino.Geometry.Brep.DuplicateBrep
  - Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
  - Rhino.Geometry.Brep.DuplicateEdgeCurves
  - Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
  - Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
  - Rhino.Geometry.Brep.GetConnectedComponents
  - Rhino.Geometry.Brep.GetWireframe(System.Int32)
  - Rhino.Geometry.Brep.DuplicateVertices
  - Rhino.Geometry.Brep.Flip
  - Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
  - Rhino.Geometry.Brep.IsValidTopology(System.String@)
  - Rhino.Geometry.Brep.IsValidGeometry(System.String@)
  - Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
  - Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
  - Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
  - Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
  - Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
  - Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
  - Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
  - Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
  - Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
  - Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
  - Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
  - Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  - Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  - Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
  - Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
  - Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
  - Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
  - Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
  - Rhino.Geometry.Brep.GetArea
  - Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
  - Rhino.Geometry.Brep.GetVolume
  - Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
  - Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
  - Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
  - Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
  - Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
  - Rhino.Geometry.Brep.SetVertices
  - Rhino.Geometry.Brep.SetTrimIsoFlags
  - Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
  - Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
  - Rhino.Geometry.Brep.MakeValidForV2
  - Rhino.Geometry.Brep.Compact
  - Rhino.Geometry.Brep.Repair(System.Double)
  - Rhino.Geometry.Brep.RemoveHoles(System.Double)
  - Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
  - Rhino.Geometry.Brep.CullUnusedFaces
  - Rhino.Geometry.Brep.CullUnusedLoops
  - Rhino.Geometry.Brep.CullUnusedTrims
  - Rhino.Geometry.Brep.CullUnusedEdges
  - Rhino.Geometry.Brep.CullUnusedVertices
  - Rhino.Geometry.Brep.CullUnused3dCurves
  - Rhino.Geometry.Brep.CullUnused2dCurves
  - Rhino.Geometry.Brep.CullUnusedSurfaces
  - Rhino.Geometry.Brep.Standardize
  - Rhino.Geometry.Brep.Vertices
  - Rhino.Geometry.Brep.Surfaces
  - Rhino.Geometry.Brep.Edges
  - Rhino.Geometry.Brep.Trims
  - Rhino.Geometry.Brep.Loops
  - Rhino.Geometry.Brep.Faces
  - Rhino.Geometry.Brep.Curves2D
  - Rhino.Geometry.Brep.Curves3D
  - Rhino.Geometry.Brep.IsSolid
  - Rhino.Geometry.Brep.SolidOrientation
  - Rhino.Geometry.Brep.IsManifold
  - Rhino.Geometry.Brep.IsSurface
  - Rhino.Geometry.Brep.HasRegionTopology
  - Rhino.Geometry.GeometryBase.OnSwitchToNonConst
  - Rhino.Geometry.GeometryBase.DuplicateShallow
  - Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
  - Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
  - Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
  - Rhino.Geometry.GeometryBase.Scale(System.Double)
  - Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
  - Rhino.Geometry.GeometryBase.MemoryEstimate
  - Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
  - Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
  - Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
  - Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
  - Rhino.Geometry.GeometryBase.MakeDeformable
  - Rhino.Geometry.GeometryBase.ComponentIndex
  - Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
  - Rhino.Geometry.GeometryBase.GetUserString(System.String)
  - Rhino.Geometry.GeometryBase.GetUserStrings
  - Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
  - Rhino.Geometry.GeometryBase.NonConstOperation
  - Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  - Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  - Rhino.Geometry.GeometryBase.IsDocumentControlled
  - Rhino.Geometry.GeometryBase.ObjectType
  - Rhino.Geometry.GeometryBase.IsDeformable
  - Rhino.Geometry.GeometryBase.HasBrepForm
  - Rhino.Geometry.GeometryBase.UserStringCount
  - Rhino.Runtime.CommonObject.EnsurePrivateCopy
  - Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
  - Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
  - Rhino.Runtime.CommonObject.Dispose
  - Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
  - Rhino.Runtime.CommonObject.FromJSON(System.String)
  - Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
  - Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
  - Rhino.Runtime.CommonObject.PerformCorruptionTesting
  - Rhino.Runtime.CommonObject.IsValid
  - Rhino.Runtime.CommonObject.Disposed
  - Rhino.Runtime.CommonObject.HasUserData
  - Rhino.Runtime.CommonObject.UserData
  - Rhino.Runtime.CommonObject.UserDictionary
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LagaRhino.Shoebox.ShoeBox
  commentId: P:LagaRhino.Shoebox.ShoeBox
  id: ShoeBox
  parent: LagaRhino.Shoebox
  langs:
  - csharp
  - vb
  name: ShoeBox
  nameWithType: Shoebox.ShoeBox
  fullName: LagaRhino.Shoebox.ShoeBox
  type: Property
  source:
    id: ShoeBox
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 23
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nGet the ShoeBox geometry.\n"
  example: []
  syntax:
    content: public Brep ShoeBox { get; }
    parameters: []
    return:
      type: Rhino.Geometry.Brep
    content.vb: Public ReadOnly Property ShoeBox As Brep
  overload: LagaRhino.Shoebox.ShoeBox*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LagaRhino.Shoebox.Length
  commentId: P:LagaRhino.Shoebox.Length
  id: Length
  parent: LagaRhino.Shoebox
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Shoebox.Length
  fullName: LagaRhino.Shoebox.Length
  type: Property
  source:
    id: Length
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 31
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nLength Shoebox Property\n"
  example: []
  syntax:
    content: public double Length { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Length As Double
  overload: LagaRhino.Shoebox.Length*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LagaRhino.Shoebox.Width
  commentId: P:LagaRhino.Shoebox.Width
  id: Width
  parent: LagaRhino.Shoebox
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Shoebox.Width
  fullName: LagaRhino.Shoebox.Width
  type: Property
  source:
    id: Width
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 46
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nWidth Shoebox property\n"
  example: []
  syntax:
    content: public double Width { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Width As Double
  overload: LagaRhino.Shoebox.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LagaRhino.Shoebox.Heigth
  commentId: P:LagaRhino.Shoebox.Heigth
  id: Heigth
  parent: LagaRhino.Shoebox
  langs:
  - csharp
  - vb
  name: Heigth
  nameWithType: Shoebox.Heigth
  fullName: LagaRhino.Shoebox.Heigth
  type: Property
  source:
    id: Heigth
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 62
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nHeight Shoebox property\n"
  example: []
  syntax:
    content: public double Heigth { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Heigth As Double
  overload: LagaRhino.Shoebox.Heigth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double)
  commentId: M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double)
  id: '#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double)'
  parent: LagaRhino.Shoebox
  langs:
  - csharp
  - vb
  name: Shoebox(Point3d, Double, Double, Double)
  nameWithType: Shoebox.Shoebox(Point3d, Double, Double, Double)
  fullName: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 75
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nShoebox by length, width and height\n"
  example: []
  syntax:
    content: public Shoebox(Point3d point, double length, double width, double height)
    parameters:
    - id: point
      type: Rhino.Geometry.Point3d
      description: Base point location
    - id: length
      type: System.Double
      description: Length
    - id: width
      type: System.Double
      description: Width
    - id: height
      type: System.Double
      description: Height
    content.vb: Public Sub New(point As Point3d, length As Double, width As Double, height As Double)
  overload: LagaRhino.Shoebox.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: LagaRhino.Shoebox
  langs:
  - csharp
  - vb
  name: Shoebox(Point3d, Double, Double, Double, Double, Double, Double)
  nameWithType: Shoebox.Shoebox(Point3d, Double, Double, Double, Double, Double, Double)
  fullName: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\delab\Documents\GitHub\Laga\LagaRhino\Shoebox.cs
    startLine: 102
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nShoebox with the free Z top points\n"
  example: []
  syntax:
    content: public Shoebox(Point3d point, double length, double width, double eHeight, double fHeight, double gHeight, double hHeight)
    parameters:
    - id: point
      type: Rhino.Geometry.Point3d
      description: Base point location
    - id: length
      type: System.Double
      description: Length
    - id: width
      type: System.Double
      description: Width
    - id: eHeight
      type: System.Double
      description: Z parameter for e point
    - id: fHeight
      type: System.Double
      description: Z parameter for f point
    - id: gHeight
      type: System.Double
      description: Z parameter for g point
    - id: hHeight
      type: System.Double
      description: Z parameter for h point
    content.vb: Public Sub New(point As Point3d, length As Double, width As Double, eHeight As Double, fHeight As Double, gHeight As Double, hHeight As Double)
  overload: LagaRhino.Shoebox.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: LagaRhino
  commentId: N:LagaRhino
  name: LagaRhino
  nameWithType: LagaRhino
  fullName: LagaRhino
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Rhino.Runtime.CommonObject
  commentId: T:Rhino.Runtime.CommonObject
  parent: Rhino.Runtime
  isExternal: true
  name: CommonObject
  nameWithType: CommonObject
  fullName: Rhino.Runtime.CommonObject
- uid: Rhino.Geometry.GeometryBase
  commentId: T:Rhino.Geometry.GeometryBase
  parent: Rhino.Geometry
  isExternal: true
  name: GeometryBase
  nameWithType: GeometryBase
  fullName: Rhino.Geometry.GeometryBase
- uid: Rhino.Geometry.Brep
  commentId: T:Rhino.Geometry.Brep
  parent: Rhino.Geometry
  isExternal: true
  name: Brep
  nameWithType: Brep
  fullName: Rhino.Geometry.Brep
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
  commentId: M:Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: TryConvertBrep(GeometryBase)
  nameWithType: Brep.TryConvertBrep(GeometryBase)
  fullName: Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
    name: TryConvertBrep
    nameWithType: Brep.TryConvertBrep
    fullName: Rhino.Geometry.Brep.TryConvertBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
    name: TryConvertBrep
    nameWithType: Brep.TryConvertBrep
    fullName: Rhino.Geometry.Brep.TryConvertBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsBox
  commentId: M:Rhino.Geometry.Brep.IsBox
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsBox()
  nameWithType: Brep.IsBox()
  fullName: Rhino.Geometry.Brep.IsBox()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsBox
    name: IsBox
    nameWithType: Brep.IsBox
    fullName: Rhino.Geometry.Brep.IsBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsBox
    name: IsBox
    nameWithType: Brep.IsBox
    fullName: Rhino.Geometry.Brep.IsBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsBox(System.Double)
  commentId: M:Rhino.Geometry.Brep.IsBox(System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsBox(Double)
  nameWithType: Brep.IsBox(Double)
  fullName: Rhino.Geometry.Brep.IsBox(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsBox(System.Double)
    name: IsBox
    nameWithType: Brep.IsBox
    fullName: Rhino.Geometry.Brep.IsBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsBox(System.Double)
    name: IsBox
    nameWithType: Brep.IsBox
    fullName: Rhino.Geometry.Brep.IsBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: ChangeSeam(BrepFace, Int32, Double, Double)
  nameWithType: Brep.ChangeSeam(BrepFace, Int32, Double, Double)
  fullName: Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace, System.Int32, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
    name: ChangeSeam
    nameWithType: Brep.ChangeSeam
    fullName: Rhino.Geometry.Brep.ChangeSeam
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
    name: ChangeSeam
    nameWithType: Brep.ChangeSeam
    fullName: Rhino.Geometry.Brep.ChangeSeam
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  commentId: M:Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CopyTrimCurves(BrepFace, Surface, Double)
  nameWithType: Brep.CopyTrimCurves(BrepFace, Surface, Double)
  fullName: Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace, Rhino.Geometry.Surface, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
    name: CopyTrimCurves
    nameWithType: Brep.CopyTrimCurves
    fullName: Rhino.Geometry.Brep.CopyTrimCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
    name: CopyTrimCurves
    nameWithType: Brep.CopyTrimCurves
    fullName: Rhino.Geometry.Brep.CopyTrimCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBaseballSphere(Point3d, Double, Double)
  nameWithType: Brep.CreateBaseballSphere(Point3d, Double, Double)
  fullName: Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
    name: CreateBaseballSphere
    nameWithType: Brep.CreateBaseballSphere
    fullName: Rhino.Geometry.Brep.CreateBaseballSphere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
    name: CreateBaseballSphere
    nameWithType: Brep.CreateBaseballSphere
    fullName: Rhino.Geometry.Brep.CreateBaseballSphere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
  commentId: M:Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateDevelopableLoft(Curve, Curve, Boolean, Boolean, Int32)
  nameWithType: Brep.CreateDevelopableLoft(Curve, Curve, Boolean, Boolean, Int32)
  fullName: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Boolean, System.Boolean, System.Int32)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
    name: CreateDevelopableLoft
    nameWithType: Brep.CreateDevelopableLoft
    fullName: Rhino.Geometry.Brep.CreateDevelopableLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
    name: CreateDevelopableLoft
    nameWithType: Brep.CreateDevelopableLoft
    fullName: Rhino.Geometry.Brep.CreateDevelopableLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
  commentId: M:Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateDevelopableLoft(NurbsCurve, NurbsCurve, IEnumerable<Point2d>)
  nameWithType: Brep.CreateDevelopableLoft(NurbsCurve, NurbsCurve, IEnumerable<Point2d>)
  fullName: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve, Rhino.Geometry.NurbsCurve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Point2d>)
  nameWithType.vb: Brep.CreateDevelopableLoft(NurbsCurve, NurbsCurve, IEnumerable(Of Point2d))
  fullName.vb: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve, Rhino.Geometry.NurbsCurve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Point2d))
  name.vb: CreateDevelopableLoft(NurbsCurve, NurbsCurve, IEnumerable(Of Point2d))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
    name: CreateDevelopableLoft
    nameWithType: Brep.CreateDevelopableLoft
    fullName: Rhino.Geometry.Brep.CreateDevelopableLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: Rhino.Geometry.NurbsCurve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: Rhino.Geometry.NurbsCurve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
    name: CreateDevelopableLoft
    nameWithType: Brep.CreateDevelopableLoft
    fullName: Rhino.Geometry.Brep.CreateDevelopableLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: Rhino.Geometry.NurbsCurve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: Rhino.Geometry.NurbsCurve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromMesh(Mesh, Boolean)
  nameWithType: Brep.CreateFromMesh(Mesh, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
    name: CreateFromMesh
    nameWithType: Brep.CreateFromMesh
    fullName: Rhino.Geometry.Brep.CreateFromMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
    name: CreateFromMesh
    nameWithType: Brep.CreateFromMesh
    fullName: Rhino.Geometry.Brep.CreateFromMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Mesh
    name: Mesh
    nameWithType: Mesh
    fullName: Rhino.Geometry.Mesh
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
  commentId: M:Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromBox(BoundingBox)
  nameWithType: Brep.CreateFromBox(BoundingBox)
  fullName: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
    name: CreateFromBox
    nameWithType: Brep.CreateFromBox
    fullName: Rhino.Geometry.Brep.CreateFromBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BoundingBox
    name: BoundingBox
    nameWithType: BoundingBox
    fullName: Rhino.Geometry.BoundingBox
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
    name: CreateFromBox
    nameWithType: Brep.CreateFromBox
    fullName: Rhino.Geometry.Brep.CreateFromBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BoundingBox
    name: BoundingBox
    nameWithType: BoundingBox
    fullName: Rhino.Geometry.BoundingBox
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
  commentId: M:Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromBox(Box)
  nameWithType: Brep.CreateFromBox(Box)
  fullName: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
    name: CreateFromBox
    nameWithType: Brep.CreateFromBox
    fullName: Rhino.Geometry.Brep.CreateFromBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Box
    name: Box
    nameWithType: Box
    fullName: Rhino.Geometry.Box
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
    name: CreateFromBox
    nameWithType: Brep.CreateFromBox
    fullName: Rhino.Geometry.Brep.CreateFromBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Box
    name: Box
    nameWithType: Box
    fullName: Rhino.Geometry.Box
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
  commentId: M:Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromBox(IEnumerable<Point3d>)
  nameWithType: Brep.CreateFromBox(IEnumerable<Point3d>)
  fullName: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable<Rhino.Geometry.Point3d>)
  nameWithType.vb: Brep.CreateFromBox(IEnumerable(Of Point3d))
  fullName.vb: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Point3d))
  name.vb: CreateFromBox(IEnumerable(Of Point3d))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
    name: CreateFromBox
    nameWithType: Brep.CreateFromBox
    fullName: Rhino.Geometry.Brep.CreateFromBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
    name: CreateFromBox
    nameWithType: Brep.CreateFromBox
    fullName: Rhino.Geometry.Brep.CreateFromBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromCylinder(Cylinder, Boolean, Boolean)
  nameWithType: Brep.CreateFromCylinder(Cylinder, Boolean, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
    name: CreateFromCylinder
    nameWithType: Brep.CreateFromCylinder
    fullName: Rhino.Geometry.Brep.CreateFromCylinder
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Cylinder
    name: Cylinder
    nameWithType: Cylinder
    fullName: Rhino.Geometry.Cylinder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
    name: CreateFromCylinder
    nameWithType: Brep.CreateFromCylinder
    fullName: Rhino.Geometry.Brep.CreateFromCylinder
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Cylinder
    name: Cylinder
    nameWithType: Cylinder
    fullName: Rhino.Geometry.Cylinder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
  commentId: M:Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSphere(Sphere)
  nameWithType: Brep.CreateFromSphere(Sphere)
  fullName: Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
    name: CreateFromSphere
    nameWithType: Brep.CreateFromSphere
    fullName: Rhino.Geometry.Brep.CreateFromSphere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Sphere
    name: Sphere
    nameWithType: Sphere
    fullName: Rhino.Geometry.Sphere
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
    name: CreateFromSphere
    nameWithType: Brep.CreateFromSphere
    fullName: Rhino.Geometry.Brep.CreateFromSphere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Sphere
    name: Sphere
    nameWithType: Sphere
    fullName: Rhino.Geometry.Sphere
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
  commentId: M:Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateQuadSphere(Sphere)
  nameWithType: Brep.CreateQuadSphere(Sphere)
  fullName: Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
    name: CreateQuadSphere
    nameWithType: Brep.CreateQuadSphere
    fullName: Rhino.Geometry.Brep.CreateQuadSphere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Sphere
    name: Sphere
    nameWithType: Sphere
    fullName: Rhino.Geometry.Sphere
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
    name: CreateQuadSphere
    nameWithType: Brep.CreateQuadSphere
    fullName: Rhino.Geometry.Brep.CreateQuadSphere
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Sphere
    name: Sphere
    nameWithType: Sphere
    fullName: Rhino.Geometry.Sphere
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromCone(Cone, Boolean)
  nameWithType: Brep.CreateFromCone(Cone, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
    name: CreateFromCone
    nameWithType: Brep.CreateFromCone
    fullName: Rhino.Geometry.Brep.CreateFromCone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Cone
    name: Cone
    nameWithType: Cone
    fullName: Rhino.Geometry.Cone
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
    name: CreateFromCone
    nameWithType: Brep.CreateFromCone
    fullName: Rhino.Geometry.Brep.CreateFromCone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Cone
    name: Cone
    nameWithType: Cone
    fullName: Rhino.Geometry.Cone
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromRevSurface(RevSurface, Boolean, Boolean)
  nameWithType: Brep.CreateFromRevSurface(RevSurface, Boolean, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
    name: CreateFromRevSurface
    nameWithType: Brep.CreateFromRevSurface
    fullName: Rhino.Geometry.Brep.CreateFromRevSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.RevSurface
    name: RevSurface
    nameWithType: RevSurface
    fullName: Rhino.Geometry.RevSurface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
    name: CreateFromRevSurface
    nameWithType: Brep.CreateFromRevSurface
    fullName: Rhino.Geometry.Brep.CreateFromRevSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.RevSurface
    name: RevSurface
    nameWithType: RevSurface
    fullName: Rhino.Geometry.RevSurface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
  commentId: M:Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSurface(Surface)
  nameWithType: Brep.CreateFromSurface(Surface)
  fullName: Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
    name: CreateFromSurface
    nameWithType: Brep.CreateFromSurface
    fullName: Rhino.Geometry.Brep.CreateFromSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
    name: CreateFromSurface
    nameWithType: Brep.CreateFromSurface
    fullName: Rhino.Geometry.Brep.CreateFromSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
  commentId: M:Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateTrimmedPlane(Plane, Curve)
  nameWithType: Brep.CreateTrimmedPlane(Plane, Curve)
  fullName: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane, Rhino.Geometry.Curve)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
    name: CreateTrimmedPlane
    nameWithType: Brep.CreateTrimmedPlane
    fullName: Rhino.Geometry.Brep.CreateTrimmedPlane
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
    name: CreateTrimmedPlane
    nameWithType: Brep.CreateTrimmedPlane
    fullName: Rhino.Geometry.Brep.CreateTrimmedPlane
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  commentId: M:Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateTrimmedPlane(Plane, IEnumerable<Curve>)
  nameWithType: Brep.CreateTrimmedPlane(Plane, IEnumerable<Curve>)
  fullName: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>)
  nameWithType.vb: Brep.CreateTrimmedPlane(Plane, IEnumerable(Of Curve))
  fullName.vb: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve))
  name.vb: CreateTrimmedPlane(Plane, IEnumerable(Of Curve))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    name: CreateTrimmedPlane
    nameWithType: Brep.CreateTrimmedPlane
    fullName: Rhino.Geometry.Brep.CreateTrimmedPlane
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    name: CreateTrimmedPlane
    nameWithType: Brep.CreateTrimmedPlane
    fullName: Rhino.Geometry.Brep.CreateTrimmedPlane
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarBreps(IEnumerable<Curve>)
  nameWithType: Brep.CreatePlanarBreps(IEnumerable<Curve>)
  fullName: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>)
  nameWithType.vb: Brep.CreatePlanarBreps(IEnumerable(Of Curve))
  fullName.vb: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve))
  name.vb: CreatePlanarBreps(IEnumerable(Of Curve))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarBreps(IEnumerable<Curve>, Double)
  nameWithType: Brep.CreatePlanarBreps(IEnumerable<Curve>, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, System.Double)
  nameWithType.vb: Brep.CreatePlanarBreps(IEnumerable(Of Curve), Double)
  fullName.vb: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), System.Double)
  name.vb: CreatePlanarBreps(IEnumerable(Of Curve), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarBreps(Curve)
  nameWithType: Brep.CreatePlanarBreps(Curve)
  fullName: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarBreps(Curve, Double)
  nameWithType: Brep.CreatePlanarBreps(Curve, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
  commentId: M:Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateTrimmedSurface(BrepFace, Surface)
  nameWithType: Brep.CreateTrimmedSurface(BrepFace, Surface)
  fullName: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Surface)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
    name: CreateTrimmedSurface
    nameWithType: Brep.CreateTrimmedSurface
    fullName: Rhino.Geometry.Brep.CreateTrimmedSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
    name: CreateTrimmedSurface
    nameWithType: Brep.CreateTrimmedSurface
    fullName: Rhino.Geometry.Brep.CreateTrimmedSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateTrimmedSurface(BrepFace, Surface, Double)
  nameWithType: Brep.CreateTrimmedSurface(BrepFace, Surface, Double)
  fullName: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Surface, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
    name: CreateTrimmedSurface
    nameWithType: Brep.CreateTrimmedSurface
    fullName: Rhino.Geometry.Brep.CreateTrimmedSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
    name: CreateTrimmedSurface
    nameWithType: Brep.CreateTrimmedSurface
    fullName: Rhino.Geometry.Brep.CreateTrimmedSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromCornerPoints(Point3d, Point3d, Point3d, Double)
  nameWithType: Brep.CreateFromCornerPoints(Point3d, Point3d, Point3d, Double)
  fullName: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    name: CreateFromCornerPoints
    nameWithType: Brep.CreateFromCornerPoints
    fullName: Rhino.Geometry.Brep.CreateFromCornerPoints
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    name: CreateFromCornerPoints
    nameWithType: Brep.CreateFromCornerPoints
    fullName: Rhino.Geometry.Brep.CreateFromCornerPoints
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromCornerPoints(Point3d, Point3d, Point3d, Point3d, Double)
  nameWithType: Brep.CreateFromCornerPoints(Point3d, Point3d, Point3d, Point3d, Double)
  fullName: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    name: CreateFromCornerPoints
    nameWithType: Brep.CreateFromCornerPoints
    fullName: Rhino.Geometry.Brep.CreateFromCornerPoints
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    name: CreateFromCornerPoints
    nameWithType: Brep.CreateFromCornerPoints
    fullName: Rhino.Geometry.Brep.CreateFromCornerPoints
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  commentId: M:Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateEdgeSurface(IEnumerable<Curve>)
  nameWithType: Brep.CreateEdgeSurface(IEnumerable<Curve>)
  fullName: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>)
  nameWithType.vb: Brep.CreateEdgeSurface(IEnumerable(Of Curve))
  fullName.vb: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve))
  name.vb: CreateEdgeSurface(IEnumerable(Of Curve))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    name: CreateEdgeSurface
    nameWithType: Brep.CreateEdgeSurface
    fullName: Rhino.Geometry.Brep.CreateEdgeSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    name: CreateEdgeSurface
    nameWithType: Brep.CreateEdgeSurface
    fullName: Rhino.Geometry.Brep.CreateEdgeSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarBreps(CurveList)
  nameWithType: Brep.CreatePlanarBreps(CurveList)
  fullName: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Collections.CurveList
    name: CurveList
    nameWithType: CurveList
    fullName: Rhino.Collections.CurveList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Collections.CurveList
    name: CurveList
    nameWithType: CurveList
    fullName: Rhino.Collections.CurveList
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarBreps(CurveList, Double)
  nameWithType: Brep.CreatePlanarBreps(CurveList, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Collections.CurveList
    name: CurveList
    nameWithType: CurveList
    fullName: Rhino.Collections.CurveList
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
    name: CreatePlanarBreps
    nameWithType: Brep.CreatePlanarBreps
    fullName: Rhino.Geometry.Brep.CreatePlanarBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Collections.CurveList
    name: CurveList
    nameWithType: CurveList
    fullName: Rhino.Collections.CurveList
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromOffsetFace(BrepFace, Double, Double, Boolean, Boolean)
  nameWithType: Brep.CreateFromOffsetFace(BrepFace, Double, Double, Boolean, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace, System.Double, System.Double, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
    name: CreateFromOffsetFace
    nameWithType: Brep.CreateFromOffsetFace
    fullName: Rhino.Geometry.Brep.CreateFromOffsetFace
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
    name: CreateFromOffsetFace
    nameWithType: Brep.CreateFromOffsetFace
    fullName: Rhino.Geometry.Brep.CreateFromOffsetFace
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateSolid(IEnumerable<Brep>, Double)
  nameWithType: Brep.CreateSolid(IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.CreateSolid(IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: CreateSolid(IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateSolid
    nameWithType: Brep.CreateSolid
    fullName: Rhino.Geometry.Brep.CreateSolid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateSolid
    nameWithType: Brep.CreateSolid
    fullName: Rhino.Geometry.Brep.CreateSolid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MergeSurfaces(Surface, Surface, Double, Double)
  nameWithType: Brep.MergeSurfaces(Surface, Surface, Double, Double)
  fullName: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface, Rhino.Geometry.Surface, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
    name: MergeSurfaces
    nameWithType: Brep.MergeSurfaces
    fullName: Rhino.Geometry.Brep.MergeSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
    name: MergeSurfaces
    nameWithType: Brep.MergeSurfaces
    fullName: Rhino.Geometry.Brep.MergeSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MergeSurfaces(Brep, Brep, Double, Double)
  nameWithType: Brep.MergeSurfaces(Brep, Brep, Double, Double)
  fullName: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
    name: MergeSurfaces
    nameWithType: Brep.MergeSurfaces
    fullName: Rhino.Geometry.Brep.MergeSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
    name: MergeSurfaces
    nameWithType: Brep.MergeSurfaces
    fullName: Rhino.Geometry.Brep.MergeSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MergeSurfaces(Brep, Brep, Double, Double, Point2d, Point2d, Double, Boolean)
  nameWithType: Brep.MergeSurfaces(Brep, Brep, Double, Double, Point2d, Point2d, Double, Boolean)
  fullName: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double, System.Double, Rhino.Geometry.Point2d, Rhino.Geometry.Point2d, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
    name: MergeSurfaces
    nameWithType: Brep.MergeSurfaces
    fullName: Rhino.Geometry.Brep.MergeSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
    name: MergeSurfaces
    nameWithType: Brep.MergeSurfaces
    fullName: Rhino.Geometry.Brep.MergeSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePatch(IEnumerable<GeometryBase>, Surface, Double)
  nameWithType: Brep.CreatePatch(IEnumerable<GeometryBase>, Surface, Double)
  fullName: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable<Rhino.Geometry.GeometryBase>, Rhino.Geometry.Surface, System.Double)
  nameWithType.vb: Brep.CreatePatch(IEnumerable(Of GeometryBase), Surface, Double)
  fullName.vb: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.GeometryBase), Rhino.Geometry.Surface, System.Double)
  name.vb: CreatePatch(IEnumerable(Of GeometryBase), Surface, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
    name: CreatePatch
    nameWithType: Brep.CreatePatch
    fullName: Rhino.Geometry.Brep.CreatePatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
    name: CreatePatch
    nameWithType: Brep.CreatePatch
    fullName: Rhino.Geometry.Brep.CreatePatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePatch(IEnumerable<GeometryBase>, Int32, Int32, Double)
  nameWithType: Brep.CreatePatch(IEnumerable<GeometryBase>, Int32, Int32, Double)
  fullName: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable<Rhino.Geometry.GeometryBase>, System.Int32, System.Int32, System.Double)
  nameWithType.vb: Brep.CreatePatch(IEnumerable(Of GeometryBase), Int32, Int32, Double)
  fullName.vb: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.GeometryBase), System.Int32, System.Int32, System.Double)
  name.vb: CreatePatch(IEnumerable(Of GeometryBase), Int32, Int32, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
    name: CreatePatch
    nameWithType: Brep.CreatePatch
    fullName: Rhino.Geometry.Brep.CreatePatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
    name: CreatePatch
    nameWithType: Brep.CreatePatch
    fullName: Rhino.Geometry.Brep.CreatePatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePatch(IEnumerable<GeometryBase>, Surface, Int32, Int32, Boolean, Boolean, Double, Double, Double, Boolean[], Double)
  nameWithType: Brep.CreatePatch(IEnumerable<GeometryBase>, Surface, Int32, Int32, Boolean, Boolean, Double, Double, Double, Boolean[], Double)
  fullName: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable<Rhino.Geometry.GeometryBase>, Rhino.Geometry.Surface, System.Int32, System.Int32, System.Boolean, System.Boolean, System.Double, System.Double, System.Double, System.Boolean[], System.Double)
  nameWithType.vb: Brep.CreatePatch(IEnumerable(Of GeometryBase), Surface, Int32, Int32, Boolean, Boolean, Double, Double, Double, Boolean(), Double)
  fullName.vb: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.GeometryBase), Rhino.Geometry.Surface, System.Int32, System.Int32, System.Boolean, System.Boolean, System.Double, System.Double, System.Double, System.Boolean(), System.Double)
  name.vb: CreatePatch(IEnumerable(Of GeometryBase), Surface, Int32, Int32, Boolean, Boolean, Double, Double, Double, Boolean(), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
    name: CreatePatch
    nameWithType: Brep.CreatePatch
    fullName: Rhino.Geometry.Brep.CreatePatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
    name: CreatePatch
    nameWithType: Brep.CreatePatch
    fullName: Rhino.Geometry.Brep.CreatePatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePipe(Curve, Double, Boolean, PipeCapMode, Boolean, Double, Double)
  nameWithType: Brep.CreatePipe(Curve, Double, Boolean, PipeCapMode, Boolean, Double, Double)
  fullName: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve, System.Double, System.Boolean, Rhino.Geometry.PipeCapMode, System.Boolean, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreatePipe
    nameWithType: Brep.CreatePipe
    fullName: Rhino.Geometry.Brep.CreatePipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreatePipe
    nameWithType: Brep.CreatePipe
    fullName: Rhino.Geometry.Brep.CreatePipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePipe(Curve, IEnumerable<Double>, IEnumerable<Double>, Boolean, PipeCapMode, Boolean, Double, Double)
  nameWithType: Brep.CreatePipe(Curve, IEnumerable<Double>, IEnumerable<Double>, Boolean, PipeCapMode, Boolean, Double, Double)
  fullName: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<System.Double>, System.Collections.Generic.IEnumerable<System.Double>, System.Boolean, Rhino.Geometry.PipeCapMode, System.Boolean, System.Double, System.Double)
  nameWithType.vb: Brep.CreatePipe(Curve, IEnumerable(Of Double), IEnumerable(Of Double), Boolean, PipeCapMode, Boolean, Double, Double)
  fullName.vb: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of System.Double), System.Collections.Generic.IEnumerable(Of System.Double), System.Boolean, Rhino.Geometry.PipeCapMode, System.Boolean, System.Double, System.Double)
  name.vb: CreatePipe(Curve, IEnumerable(Of Double), IEnumerable(Of Double), Boolean, PipeCapMode, Boolean, Double, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreatePipe
    nameWithType: Brep.CreatePipe
    fullName: Rhino.Geometry.Brep.CreatePipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreatePipe
    nameWithType: Brep.CreatePipe
    fullName: Rhino.Geometry.Brep.CreatePipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateThickPipe(Curve, Double, Double, Boolean, PipeCapMode, Boolean, Double, Double)
  nameWithType: Brep.CreateThickPipe(Curve, Double, Double, Boolean, PipeCapMode, Boolean, Double, Double)
  fullName: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve, System.Double, System.Double, System.Boolean, Rhino.Geometry.PipeCapMode, System.Boolean, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreateThickPipe
    nameWithType: Brep.CreateThickPipe
    fullName: Rhino.Geometry.Brep.CreateThickPipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreateThickPipe
    nameWithType: Brep.CreateThickPipe
    fullName: Rhino.Geometry.Brep.CreateThickPipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateThickPipe(Curve, IEnumerable<Double>, IEnumerable<Double>, IEnumerable<Double>, Boolean, PipeCapMode, Boolean, Double, Double)
  nameWithType: Brep.CreateThickPipe(Curve, IEnumerable<Double>, IEnumerable<Double>, IEnumerable<Double>, Boolean, PipeCapMode, Boolean, Double, Double)
  fullName: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<System.Double>, System.Collections.Generic.IEnumerable<System.Double>, System.Collections.Generic.IEnumerable<System.Double>, System.Boolean, Rhino.Geometry.PipeCapMode, System.Boolean, System.Double, System.Double)
  nameWithType.vb: Brep.CreateThickPipe(Curve, IEnumerable(Of Double), IEnumerable(Of Double), IEnumerable(Of Double), Boolean, PipeCapMode, Boolean, Double, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of System.Double), System.Collections.Generic.IEnumerable(Of System.Double), System.Collections.Generic.IEnumerable(Of System.Double), System.Boolean, Rhino.Geometry.PipeCapMode, System.Boolean, System.Double, System.Double)
  name.vb: CreateThickPipe(Curve, IEnumerable(Of Double), IEnumerable(Of Double), IEnumerable(Of Double), Boolean, PipeCapMode, Boolean, Double, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreateThickPipe
    nameWithType: Brep.CreateThickPipe
    fullName: Rhino.Geometry.Brep.CreateThickPipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    name: CreateThickPipe
    nameWithType: Brep.CreateThickPipe
    fullName: Rhino.Geometry.Brep.CreateThickPipe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.PipeCapMode
    name: PipeCapMode
    nameWithType: PipeCapMode
    fullName: Rhino.Geometry.PipeCapMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweep(Curve, Curve, Boolean, Double)
  nameWithType: Brep.CreateFromSweep(Curve, Curve, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Boolean, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweep(Curve, IEnumerable<Curve>, Boolean, Double)
  nameWithType: Brep.CreateFromSweep(Curve, IEnumerable<Curve>, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, System.Boolean, System.Double)
  nameWithType.vb: Brep.CreateFromSweep(Curve, IEnumerable(Of Curve), Boolean, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), System.Boolean, System.Double)
  name.vb: CreateFromSweep(Curve, IEnumerable(Of Curve), Boolean, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweep(Curve, IEnumerable<Curve>, Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  nameWithType: Brep.CreateFromSweep(Curve, IEnumerable<Curve>, Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.SweepFrame, Rhino.Geometry.Vector3d, System.Boolean, Rhino.Geometry.SweepBlend, Rhino.Geometry.SweepMiter, System.Double, Rhino.Geometry.SweepRebuild, System.Int32, System.Double)
  nameWithType.vb: Brep.CreateFromSweep(Curve, IEnumerable(Of Curve), Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.SweepFrame, Rhino.Geometry.Vector3d, System.Boolean, Rhino.Geometry.SweepBlend, Rhino.Geometry.SweepMiter, System.Double, Rhino.Geometry.SweepRebuild, System.Int32, System.Double)
  name.vb: CreateFromSweep(Curve, IEnumerable(Of Curve), Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepFrame
    name: SweepFrame
    nameWithType: SweepFrame
    fullName: Rhino.Geometry.SweepFrame
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepBlend
    name: SweepBlend
    nameWithType: SweepBlend
    fullName: Rhino.Geometry.SweepBlend
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepMiter
    name: SweepMiter
    nameWithType: SweepMiter
    fullName: Rhino.Geometry.SweepMiter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepRebuild
    name: SweepRebuild
    nameWithType: SweepRebuild
    fullName: Rhino.Geometry.SweepRebuild
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepFrame
    name: SweepFrame
    nameWithType: SweepFrame
    fullName: Rhino.Geometry.SweepFrame
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepBlend
    name: SweepBlend
    nameWithType: SweepBlend
    fullName: Rhino.Geometry.SweepBlend
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepMiter
    name: SweepMiter
    nameWithType: SweepMiter
    fullName: Rhino.Geometry.SweepMiter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepRebuild
    name: SweepRebuild
    nameWithType: SweepRebuild
    fullName: Rhino.Geometry.SweepRebuild
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweepSegmented(Curve, Curve, Boolean, Double)
  nameWithType: Brep.CreateFromSweepSegmented(Curve, Curve, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Boolean, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    name: CreateFromSweepSegmented
    nameWithType: Brep.CreateFromSweepSegmented
    fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    name: CreateFromSweepSegmented
    nameWithType: Brep.CreateFromSweepSegmented
    fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweepSegmented(Curve, IEnumerable<Curve>, Boolean, Double)
  nameWithType: Brep.CreateFromSweepSegmented(Curve, IEnumerable<Curve>, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, System.Boolean, System.Double)
  nameWithType.vb: Brep.CreateFromSweepSegmented(Curve, IEnumerable(Of Curve), Boolean, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), System.Boolean, System.Double)
  name.vb: CreateFromSweepSegmented(Curve, IEnumerable(Of Curve), Boolean, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    name: CreateFromSweepSegmented
    nameWithType: Brep.CreateFromSweepSegmented
    fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    name: CreateFromSweepSegmented
    nameWithType: Brep.CreateFromSweepSegmented
    fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweepSegmented(Curve, IEnumerable<Curve>, Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  nameWithType: Brep.CreateFromSweepSegmented(Curve, IEnumerable<Curve>, Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.SweepFrame, Rhino.Geometry.Vector3d, System.Boolean, Rhino.Geometry.SweepBlend, Rhino.Geometry.SweepMiter, System.Double, Rhino.Geometry.SweepRebuild, System.Int32, System.Double)
  nameWithType.vb: Brep.CreateFromSweepSegmented(Curve, IEnumerable(Of Curve), Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.SweepFrame, Rhino.Geometry.Vector3d, System.Boolean, Rhino.Geometry.SweepBlend, Rhino.Geometry.SweepMiter, System.Double, Rhino.Geometry.SweepRebuild, System.Int32, System.Double)
  name.vb: CreateFromSweepSegmented(Curve, IEnumerable(Of Curve), Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
    name: CreateFromSweepSegmented
    nameWithType: Brep.CreateFromSweepSegmented
    fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepFrame
    name: SweepFrame
    nameWithType: SweepFrame
    fullName: Rhino.Geometry.SweepFrame
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepBlend
    name: SweepBlend
    nameWithType: SweepBlend
    fullName: Rhino.Geometry.SweepBlend
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepMiter
    name: SweepMiter
    nameWithType: SweepMiter
    fullName: Rhino.Geometry.SweepMiter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepRebuild
    name: SweepRebuild
    nameWithType: SweepRebuild
    fullName: Rhino.Geometry.SweepRebuild
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
    name: CreateFromSweepSegmented
    nameWithType: Brep.CreateFromSweepSegmented
    fullName: Rhino.Geometry.Brep.CreateFromSweepSegmented
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepFrame
    name: SweepFrame
    nameWithType: SweepFrame
    fullName: Rhino.Geometry.SweepFrame
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepBlend
    name: SweepBlend
    nameWithType: SweepBlend
    fullName: Rhino.Geometry.SweepBlend
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepMiter
    name: SweepMiter
    nameWithType: SweepMiter
    fullName: Rhino.Geometry.SweepMiter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepRebuild
    name: SweepRebuild
    nameWithType: SweepRebuild
    fullName: Rhino.Geometry.SweepRebuild
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweep(Curve, Curve, Curve, Boolean, Double)
  nameWithType: Brep.CreateFromSweep(Curve, Curve, Curve, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Boolean, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweep(Curve, Curve, IEnumerable<Curve>, Boolean, Double)
  nameWithType: Brep.CreateFromSweep(Curve, Curve, IEnumerable<Curve>, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, System.Boolean, System.Double)
  nameWithType.vb: Brep.CreateFromSweep(Curve, Curve, IEnumerable(Of Curve), Boolean, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), System.Boolean, System.Double)
  name.vb: CreateFromSweep(Curve, Curve, IEnumerable(Of Curve), Boolean, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweep(Curve, Curve, IEnumerable<Curve>, Point3d, Point3d, Boolean, Double, SweepRebuild, Int32, Double, Boolean)
  nameWithType: Brep.CreateFromSweep(Curve, Curve, IEnumerable<Curve>, Point3d, Point3d, Boolean, Double, SweepRebuild, Int32, Double, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Boolean, System.Double, Rhino.Geometry.SweepRebuild, System.Int32, System.Double, System.Boolean)
  nameWithType.vb: Brep.CreateFromSweep(Curve, Curve, IEnumerable(Of Curve), Point3d, Point3d, Boolean, Double, SweepRebuild, Int32, Double, Boolean)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Boolean, System.Double, Rhino.Geometry.SweepRebuild, System.Int32, System.Double, System.Boolean)
  name.vb: CreateFromSweep(Curve, Curve, IEnumerable(Of Curve), Point3d, Point3d, Boolean, Double, SweepRebuild, Int32, Double, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepRebuild
    name: SweepRebuild
    nameWithType: SweepRebuild
    fullName: Rhino.Geometry.SweepRebuild
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
    name: CreateFromSweep
    nameWithType: Brep.CreateFromSweep
    fullName: Rhino.Geometry.Brep.CreateFromSweep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.SweepRebuild
    name: SweepRebuild
    nameWithType: SweepRebuild
    fullName: Rhino.Geometry.SweepRebuild
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromSweepInParts(Curve, Curve, IEnumerable<Curve>, IEnumerable<Point2d>, Boolean, Double)
  nameWithType: Brep.CreateFromSweepInParts(Curve, Curve, IEnumerable<Curve>, IEnumerable<Point2d>, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, System.Collections.Generic.IEnumerable<Rhino.Geometry.Point2d>, System.Boolean, System.Double)
  nameWithType.vb: Brep.CreateFromSweepInParts(Curve, Curve, IEnumerable(Of Curve), IEnumerable(Of Point2d), Boolean, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve, Rhino.Geometry.Curve, System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Point2d), System.Boolean, System.Double)
  name.vb: CreateFromSweepInParts(Curve, Curve, IEnumerable(Of Curve), IEnumerable(Of Point2d), Boolean, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
    name: CreateFromSweepInParts
    nameWithType: Brep.CreateFromSweepInParts
    fullName: Rhino.Geometry.Brep.CreateFromSweepInParts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
    name: CreateFromSweepInParts
    nameWithType: Brep.CreateFromSweepInParts
    fullName: Rhino.Geometry.Brep.CreateFromSweepInParts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromTaperedExtrude(Curve, Double, Vector3d, Point3d, Double, ExtrudeCornerType, Double, Double)
  nameWithType: Brep.CreateFromTaperedExtrude(Curve, Double, Vector3d, Point3d, Double, ExtrudeCornerType, Double, Double)
  fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve, System.Double, Rhino.Geometry.Vector3d, Rhino.Geometry.Point3d, System.Double, Rhino.Geometry.ExtrudeCornerType, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
    name: CreateFromTaperedExtrude
    nameWithType: Brep.CreateFromTaperedExtrude
    fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.ExtrudeCornerType
    name: ExtrudeCornerType
    nameWithType: ExtrudeCornerType
    fullName: Rhino.Geometry.ExtrudeCornerType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
    name: CreateFromTaperedExtrude
    nameWithType: Brep.CreateFromTaperedExtrude
    fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.ExtrudeCornerType
    name: ExtrudeCornerType
    nameWithType: ExtrudeCornerType
    fullName: Rhino.Geometry.ExtrudeCornerType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
  commentId: M:Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromTaperedExtrude(Curve, Double, Vector3d, Point3d, Double, ExtrudeCornerType)
  nameWithType: Brep.CreateFromTaperedExtrude(Curve, Double, Vector3d, Point3d, Double, ExtrudeCornerType)
  fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve, System.Double, Rhino.Geometry.Vector3d, Rhino.Geometry.Point3d, System.Double, Rhino.Geometry.ExtrudeCornerType)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
    name: CreateFromTaperedExtrude
    nameWithType: Brep.CreateFromTaperedExtrude
    fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.ExtrudeCornerType
    name: ExtrudeCornerType
    nameWithType: ExtrudeCornerType
    fullName: Rhino.Geometry.ExtrudeCornerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
    name: CreateFromTaperedExtrude
    nameWithType: Brep.CreateFromTaperedExtrude
    fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.ExtrudeCornerType
    name: ExtrudeCornerType
    nameWithType: ExtrudeCornerType
    fullName: Rhino.Geometry.ExtrudeCornerType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromTaperedExtrudeWithRef(Curve, Vector3d, Double, Double, Plane, Double)
  nameWithType: Brep.CreateFromTaperedExtrudeWithRef(Curve, Vector3d, Double, Double, Plane, Double)
  fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve, Rhino.Geometry.Vector3d, System.Double, System.Double, Rhino.Geometry.Plane, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
    name: CreateFromTaperedExtrudeWithRef
    nameWithType: Brep.CreateFromTaperedExtrudeWithRef
    fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
    name: CreateFromTaperedExtrudeWithRef
    nameWithType: Brep.CreateFromTaperedExtrudeWithRef
    fullName: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
  commentId: M:Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBlendSurface(BrepFace, BrepEdge, Interval, Boolean, BlendContinuity, BrepFace, BrepEdge, Interval, Boolean, BlendContinuity)
  nameWithType: Brep.CreateBlendSurface(BrepFace, BrepEdge, Interval, Boolean, BlendContinuity, BrepFace, BrepEdge, Interval, Boolean, BlendContinuity)
  fullName: Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.BrepEdge, Rhino.Geometry.Interval, System.Boolean, Rhino.Geometry.BlendContinuity, Rhino.Geometry.BrepFace, Rhino.Geometry.BrepEdge, Rhino.Geometry.Interval, System.Boolean, Rhino.Geometry.BlendContinuity)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
    name: CreateBlendSurface
    nameWithType: Brep.CreateBlendSurface
    fullName: Rhino.Geometry.Brep.CreateBlendSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Interval
    name: Interval
    nameWithType: Interval
    fullName: Rhino.Geometry.Interval
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Interval
    name: Interval
    nameWithType: Interval
    fullName: Rhino.Geometry.Interval
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
    name: CreateBlendSurface
    nameWithType: Brep.CreateBlendSurface
    fullName: Rhino.Geometry.Brep.CreateBlendSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Interval
    name: Interval
    nameWithType: Interval
    fullName: Rhino.Geometry.Interval
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Interval
    name: Interval
    nameWithType: Interval
    fullName: Rhino.Geometry.Interval
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
  commentId: M:Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBlendShape(BrepFace, BrepEdge, Double, Boolean, BlendContinuity, BrepFace, BrepEdge, Double, Boolean, BlendContinuity)
  nameWithType: Brep.CreateBlendShape(BrepFace, BrepEdge, Double, Boolean, BlendContinuity, BrepFace, BrepEdge, Double, Boolean, BlendContinuity)
  fullName: Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace, Rhino.Geometry.BrepEdge, System.Double, System.Boolean, Rhino.Geometry.BlendContinuity, Rhino.Geometry.BrepFace, Rhino.Geometry.BrepEdge, System.Double, System.Boolean, Rhino.Geometry.BlendContinuity)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
    name: CreateBlendShape
    nameWithType: Brep.CreateBlendShape
    fullName: Rhino.Geometry.Brep.CreateBlendShape
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
    name: CreateBlendShape
    nameWithType: Brep.CreateBlendShape
    fullName: Rhino.Geometry.Brep.CreateBlendShape
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepEdge
    name: BrepEdge
    nameWithType: BrepEdge
    fullName: Rhino.Geometry.BrepEdge
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendContinuity
    name: BlendContinuity
    nameWithType: BlendContinuity
    fullName: Rhino.Geometry.BlendContinuity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Double)
  nameWithType: Brep.CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, System.Boolean, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
    name: CreateFilletSurface
    nameWithType: Brep.CreateFilletSurface
    fullName: Rhino.Geometry.Brep.CreateFilletSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
    name: CreateFilletSurface
    nameWithType: Brep.CreateFilletSurface
    fullName: Rhino.Geometry.Brep.CreateFilletSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  commentId: M:Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep[], Brep[])
  nameWithType: Brep.CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep[], Brep[])
  fullName: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep[], Rhino.Geometry.Brep[])
  nameWithType.vb: Brep.CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep(), Brep())
  fullName.vb: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep(), Rhino.Geometry.Brep())
  name.vb: CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep(), Brep())
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateFilletSurface
    nameWithType: Brep.CreateFilletSurface
    fullName: Rhino.Geometry.Brep.CreateFilletSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateFilletSurface
    nameWithType: Brep.CreateFilletSurface
    fullName: Rhino.Geometry.Brep.CreateFilletSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Double)
  nameWithType: Brep.CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, System.Boolean, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
    name: CreateChamferSurface
    nameWithType: Brep.CreateChamferSurface
    fullName: Rhino.Geometry.Brep.CreateChamferSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
    name: CreateChamferSurface
    nameWithType: Brep.CreateChamferSurface
    fullName: Rhino.Geometry.Brep.CreateChamferSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  commentId: M:Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep[], Brep[])
  nameWithType: Brep.CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep[], Brep[])
  fullName: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep[], Rhino.Geometry.Brep[])
  nameWithType.vb: Brep.CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep(), Brep())
  fullName.vb: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, Rhino.Geometry.BrepFace, Rhino.Geometry.Point2d, System.Double, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep(), Rhino.Geometry.Brep())
  name.vb: CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Boolean, Double, Brep(), Brep())
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateChamferSurface
    nameWithType: Brep.CreateChamferSurface
    fullName: Rhino.Geometry.Brep.CreateChamferSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateChamferSurface
    nameWithType: Brep.CreateChamferSurface
    fullName: Rhino.Geometry.Brep.CreateChamferSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point2d
    name: Point2d
    nameWithType: Point2d
    fullName: Rhino.Geometry.Point2d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFilletEdges(Brep, IEnumerable<Int32>, IEnumerable<Double>, IEnumerable<Double>, BlendType, RailType, Double)
  nameWithType: Brep.CreateFilletEdges(Brep, IEnumerable<Int32>, IEnumerable<Double>, IEnumerable<Double>, BlendType, RailType, Double)
  fullName: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep, System.Collections.Generic.IEnumerable<System.Int32>, System.Collections.Generic.IEnumerable<System.Double>, System.Collections.Generic.IEnumerable<System.Double>, Rhino.Geometry.BlendType, Rhino.Geometry.RailType, System.Double)
  nameWithType.vb: Brep.CreateFilletEdges(Brep, IEnumerable(Of Int32), IEnumerable(Of Double), IEnumerable(Of Double), BlendType, RailType, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep, System.Collections.Generic.IEnumerable(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.Double), System.Collections.Generic.IEnumerable(Of System.Double), Rhino.Geometry.BlendType, Rhino.Geometry.RailType, System.Double)
  name.vb: CreateFilletEdges(Brep, IEnumerable(Of Int32), IEnumerable(Of Double), IEnumerable(Of Double), BlendType, RailType, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
    name: CreateFilletEdges
    nameWithType: Brep.CreateFilletEdges
    fullName: Rhino.Geometry.Brep.CreateFilletEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendType
    name: BlendType
    nameWithType: BlendType
    fullName: Rhino.Geometry.BlendType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.RailType
    name: RailType
    nameWithType: RailType
    fullName: Rhino.Geometry.RailType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
    name: CreateFilletEdges
    nameWithType: Brep.CreateFilletEdges
    fullName: Rhino.Geometry.Brep.CreateFilletEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BlendType
    name: BlendType
    nameWithType: BlendType
    fullName: Rhino.Geometry.BlendType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.RailType
    name: RailType
    nameWithType: RailType
    fullName: Rhino.Geometry.RailType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  commentId: M:Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateOffsetBrep(Brep, Double, Boolean, Boolean, Double, Brep[], Brep[])
  nameWithType: Brep.CreateOffsetBrep(Brep, Double, Boolean, Boolean, Double, Brep[], Brep[])
  fullName: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep, System.Double, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep[], Rhino.Geometry.Brep[])
  nameWithType.vb: Brep.CreateOffsetBrep(Brep, Double, Boolean, Boolean, Double, Brep(), Brep())
  fullName.vb: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep, System.Double, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep(), Rhino.Geometry.Brep())
  name.vb: CreateOffsetBrep(Brep, Double, Boolean, Boolean, Double, Brep(), Brep())
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateOffsetBrep
    nameWithType: Brep.CreateOffsetBrep
    fullName: Rhino.Geometry.Brep.CreateOffsetBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateOffsetBrep
    nameWithType: Brep.CreateOffsetBrep
    fullName: Rhino.Geometry.Brep.CreateOffsetBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  commentId: M:Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateOffsetBrep(Brep, Double, Boolean, Boolean, Boolean, Double, Brep[], Brep[])
  nameWithType: Brep.CreateOffsetBrep(Brep, Double, Boolean, Boolean, Boolean, Double, Brep[], Brep[])
  fullName: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep, System.Double, System.Boolean, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep[], Rhino.Geometry.Brep[])
  nameWithType.vb: Brep.CreateOffsetBrep(Brep, Double, Boolean, Boolean, Boolean, Double, Brep(), Brep())
  fullName.vb: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep, System.Double, System.Boolean, System.Boolean, System.Boolean, System.Double, Rhino.Geometry.Brep(), Rhino.Geometry.Brep())
  name.vb: CreateOffsetBrep(Brep, Double, Boolean, Boolean, Boolean, Double, Brep(), Brep())
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateOffsetBrep
    nameWithType: Brep.CreateOffsetBrep
    fullName: Rhino.Geometry.Brep.CreateOffsetBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    name: CreateOffsetBrep
    nameWithType: Brep.CreateOffsetBrep
    fullName: Rhino.Geometry.Brep.CreateOffsetBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.RemoveFins
  commentId: M:Rhino.Geometry.Brep.RemoveFins
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: RemoveFins()
  nameWithType: Brep.RemoveFins()
  fullName: Rhino.Geometry.Brep.RemoveFins()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.RemoveFins
    name: RemoveFins
    nameWithType: Brep.RemoveFins
    fullName: Rhino.Geometry.Brep.RemoveFins
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.RemoveFins
    name: RemoveFins
    nameWithType: Brep.RemoveFins
    fullName: Rhino.Geometry.Brep.RemoveFins
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromJoinedEdges(Brep, Int32, Brep, Int32, Double)
  nameWithType: Brep.CreateFromJoinedEdges(Brep, Int32, Brep, Int32, Double)
  fullName: Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep, System.Int32, Rhino.Geometry.Brep, System.Int32, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
    name: CreateFromJoinedEdges
    nameWithType: Brep.CreateFromJoinedEdges
    fullName: Rhino.Geometry.Brep.CreateFromJoinedEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
    name: CreateFromJoinedEdges
    nameWithType: Brep.CreateFromJoinedEdges
    fullName: Rhino.Geometry.Brep.CreateFromJoinedEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromLoft(IEnumerable<Curve>, Point3d, Point3d, LoftType, Boolean)
  nameWithType: Brep.CreateFromLoft(IEnumerable<Curve>, Point3d, Point3d, LoftType, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.LoftType, System.Boolean)
  nameWithType.vb: Brep.CreateFromLoft(IEnumerable(Of Curve), Point3d, Point3d, LoftType, Boolean)
  fullName.vb: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.LoftType, System.Boolean)
  name.vb: CreateFromLoft(IEnumerable(Of Curve), Point3d, Point3d, LoftType, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
    name: CreateFromLoft
    nameWithType: Brep.CreateFromLoft
    fullName: Rhino.Geometry.Brep.CreateFromLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
    name: CreateFromLoft
    nameWithType: Brep.CreateFromLoft
    fullName: Rhino.Geometry.Brep.CreateFromLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
  commentId: M:Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromLoftRebuild(IEnumerable<Curve>, Point3d, Point3d, LoftType, Boolean, Int32)
  nameWithType: Brep.CreateFromLoftRebuild(IEnumerable<Curve>, Point3d, Point3d, LoftType, Boolean, Int32)
  fullName: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.LoftType, System.Boolean, System.Int32)
  nameWithType.vb: Brep.CreateFromLoftRebuild(IEnumerable(Of Curve), Point3d, Point3d, LoftType, Boolean, Int32)
  fullName.vb: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.LoftType, System.Boolean, System.Int32)
  name.vb: CreateFromLoftRebuild(IEnumerable(Of Curve), Point3d, Point3d, LoftType, Boolean, Int32)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
    name: CreateFromLoftRebuild
    nameWithType: Brep.CreateFromLoftRebuild
    fullName: Rhino.Geometry.Brep.CreateFromLoftRebuild
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
    name: CreateFromLoftRebuild
    nameWithType: Brep.CreateFromLoftRebuild
    fullName: Rhino.Geometry.Brep.CreateFromLoftRebuild
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromLoftRefit(IEnumerable<Curve>, Point3d, Point3d, LoftType, Boolean, Double)
  nameWithType: Brep.CreateFromLoftRefit(IEnumerable<Curve>, Point3d, Point3d, LoftType, Boolean, Double)
  fullName: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.LoftType, System.Boolean, System.Double)
  nameWithType.vb: Brep.CreateFromLoftRefit(IEnumerable(Of Curve), Point3d, Point3d, LoftType, Boolean, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.LoftType, System.Boolean, System.Double)
  name.vb: CreateFromLoftRefit(IEnumerable(Of Curve), Point3d, Point3d, LoftType, Boolean, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
    name: CreateFromLoftRefit
    nameWithType: Brep.CreateFromLoftRefit
    fullName: Rhino.Geometry.Brep.CreateFromLoftRefit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
    name: CreateFromLoftRefit
    nameWithType: Brep.CreateFromLoftRefit
    fullName: Rhino.Geometry.Brep.CreateFromLoftRefit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateFromLoft(IEnumerable<Curve>, Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)
  nameWithType: Brep.CreateFromLoft(IEnumerable<Curve>, Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)
  fullName: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Boolean, System.Boolean, Rhino.Geometry.BrepTrim, Rhino.Geometry.BrepTrim, Rhino.Geometry.LoftType, System.Boolean)
  nameWithType.vb: Brep.CreateFromLoft(IEnumerable(Of Curve), Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)
  fullName.vb: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Boolean, System.Boolean, Rhino.Geometry.BrepTrim, Rhino.Geometry.BrepTrim, Rhino.Geometry.LoftType, System.Boolean)
  name.vb: CreateFromLoft(IEnumerable(Of Curve), Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
    name: CreateFromLoft
    nameWithType: Brep.CreateFromLoft
    fullName: Rhino.Geometry.Brep.CreateFromLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepTrim
    name: BrepTrim
    nameWithType: BrepTrim
    fullName: Rhino.Geometry.BrepTrim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepTrim
    name: BrepTrim
    nameWithType: BrepTrim
    fullName: Rhino.Geometry.BrepTrim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
    name: CreateFromLoft
    nameWithType: Brep.CreateFromLoft
    fullName: Rhino.Geometry.Brep.CreateFromLoft
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepTrim
    name: BrepTrim
    nameWithType: BrepTrim
    fullName: Rhino.Geometry.BrepTrim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.BrepTrim
    name: BrepTrim
    nameWithType: BrepTrim
    fullName: Rhino.Geometry.BrepTrim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.LoftType
    name: LoftType
    nameWithType: LoftType
    fullName: Rhino.Geometry.LoftType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarUnion(IEnumerable<Brep>, Plane, Double)
  nameWithType: Brep.CreatePlanarUnion(IEnumerable<Brep>, Plane, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, Rhino.Geometry.Plane, System.Double)
  nameWithType.vb: Brep.CreatePlanarUnion(IEnumerable(Of Brep), Plane, Double)
  fullName.vb: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), Rhino.Geometry.Plane, System.Double)
  name.vb: CreatePlanarUnion(IEnumerable(Of Brep), Plane, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarUnion
    nameWithType: Brep.CreatePlanarUnion
    fullName: Rhino.Geometry.Brep.CreatePlanarUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarUnion
    nameWithType: Brep.CreatePlanarUnion
    fullName: Rhino.Geometry.Brep.CreatePlanarUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarUnion(Brep, Brep, Plane, Double)
  nameWithType: Brep.CreatePlanarUnion(Brep, Brep, Plane, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep, Rhino.Geometry.Brep, Rhino.Geometry.Plane, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarUnion
    nameWithType: Brep.CreatePlanarUnion
    fullName: Rhino.Geometry.Brep.CreatePlanarUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarUnion
    nameWithType: Brep.CreatePlanarUnion
    fullName: Rhino.Geometry.Brep.CreatePlanarUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarDifference(Brep, Brep, Plane, Double)
  nameWithType: Brep.CreatePlanarDifference(Brep, Brep, Plane, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep, Rhino.Geometry.Brep, Rhino.Geometry.Plane, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarDifference
    nameWithType: Brep.CreatePlanarDifference
    fullName: Rhino.Geometry.Brep.CreatePlanarDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarDifference
    nameWithType: Brep.CreatePlanarDifference
    fullName: Rhino.Geometry.Brep.CreatePlanarDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreatePlanarIntersection(Brep, Brep, Plane, Double)
  nameWithType: Brep.CreatePlanarIntersection(Brep, Brep, Plane, Double)
  fullName: Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep, Rhino.Geometry.Brep, Rhino.Geometry.Plane, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarIntersection
    nameWithType: Brep.CreatePlanarIntersection
    fullName: Rhino.Geometry.Brep.CreatePlanarIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    name: CreatePlanarIntersection
    nameWithType: Brep.CreatePlanarIntersection
    fullName: Rhino.Geometry.Brep.CreatePlanarIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanUnion(IEnumerable<Brep>, Double)
  nameWithType: Brep.CreateBooleanUnion(IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.CreateBooleanUnion(IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: CreateBooleanUnion(IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanUnion
    nameWithType: Brep.CreateBooleanUnion
    fullName: Rhino.Geometry.Brep.CreateBooleanUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanUnion
    nameWithType: Brep.CreateBooleanUnion
    fullName: Rhino.Geometry.Brep.CreateBooleanUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanUnion(IEnumerable<Brep>, Double, Boolean)
  nameWithType: Brep.CreateBooleanUnion(IEnumerable<Brep>, Double, Boolean)
  fullName: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double, System.Boolean)
  nameWithType.vb: Brep.CreateBooleanUnion(IEnumerable(Of Brep), Double, Boolean)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double, System.Boolean)
  name.vb: CreateBooleanUnion(IEnumerable(Of Brep), Double, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    name: CreateBooleanUnion
    nameWithType: Brep.CreateBooleanUnion
    fullName: Rhino.Geometry.Brep.CreateBooleanUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    name: CreateBooleanUnion
    nameWithType: Brep.CreateBooleanUnion
    fullName: Rhino.Geometry.Brep.CreateBooleanUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanIntersection(IEnumerable<Brep>, IEnumerable<Brep>, Double)
  nameWithType: Brep.CreateBooleanIntersection(IEnumerable<Brep>, IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.CreateBooleanIntersection(IEnumerable(Of Brep), IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: CreateBooleanIntersection(IEnumerable(Of Brep), IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanIntersection(IEnumerable<Brep>, IEnumerable<Brep>, Double, Boolean)
  nameWithType: Brep.CreateBooleanIntersection(IEnumerable<Brep>, IEnumerable<Brep>, Double, Boolean)
  fullName: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double, System.Boolean)
  nameWithType.vb: Brep.CreateBooleanIntersection(IEnumerable(Of Brep), IEnumerable(Of Brep), Double, Boolean)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double, System.Boolean)
  name.vb: CreateBooleanIntersection(IEnumerable(Of Brep), IEnumerable(Of Brep), Double, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanIntersection(Brep, Brep, Double)
  nameWithType: Brep.CreateBooleanIntersection(Brep, Brep, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanIntersection(Brep, Brep, Double, Boolean)
  nameWithType: Brep.CreateBooleanIntersection(Brep, Brep, Double, Boolean)
  fullName: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
    name: CreateBooleanIntersection
    nameWithType: Brep.CreateBooleanIntersection
    fullName: Rhino.Geometry.Brep.CreateBooleanIntersection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanDifference(IEnumerable<Brep>, IEnumerable<Brep>, Double)
  nameWithType: Brep.CreateBooleanDifference(IEnumerable<Brep>, IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.CreateBooleanDifference(IEnumerable(Of Brep), IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: CreateBooleanDifference(IEnumerable(Of Brep), IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanDifference(IEnumerable<Brep>, IEnumerable<Brep>, Double, Boolean)
  nameWithType: Brep.CreateBooleanDifference(IEnumerable<Brep>, IEnumerable<Brep>, Double, Boolean)
  fullName: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double, System.Boolean)
  nameWithType.vb: Brep.CreateBooleanDifference(IEnumerable(Of Brep), IEnumerable(Of Brep), Double, Boolean)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double, System.Boolean)
  name.vb: CreateBooleanDifference(IEnumerable(Of Brep), IEnumerable(Of Brep), Double, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanDifference(Brep, Brep, Double)
  nameWithType: Brep.CreateBooleanDifference(Brep, Brep, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanDifference(Brep, Brep, Double, Boolean)
  nameWithType: Brep.CreateBooleanDifference(Brep, Brep, Double, Boolean)
  fullName: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
    name: CreateBooleanDifference
    nameWithType: Brep.CreateBooleanDifference
    fullName: Rhino.Geometry.Brep.CreateBooleanDifference
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanSplit(Brep, Brep, Double)
  nameWithType: Brep.CreateBooleanSplit(Brep, Brep, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep, Rhino.Geometry.Brep, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    name: CreateBooleanSplit
    nameWithType: Brep.CreateBooleanSplit
    fullName: Rhino.Geometry.Brep.CreateBooleanSplit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    name: CreateBooleanSplit
    nameWithType: Brep.CreateBooleanSplit
    fullName: Rhino.Geometry.Brep.CreateBooleanSplit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateBooleanSplit(IEnumerable<Brep>, IEnumerable<Brep>, Double)
  nameWithType: Brep.CreateBooleanSplit(IEnumerable<Brep>, IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.CreateBooleanSplit(IEnumerable(Of Brep), IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: CreateBooleanSplit(IEnumerable(Of Brep), IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanSplit
    nameWithType: Brep.CreateBooleanSplit
    fullName: Rhino.Geometry.Brep.CreateBooleanSplit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: CreateBooleanSplit
    nameWithType: Brep.CreateBooleanSplit
    fullName: Rhino.Geometry.Brep.CreateBooleanSplit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateShell(Brep, IEnumerable<Int32>, Double, Double)
  nameWithType: Brep.CreateShell(Brep, IEnumerable<Int32>, Double, Double)
  fullName: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep, System.Collections.Generic.IEnumerable<System.Int32>, System.Double, System.Double)
  nameWithType.vb: Brep.CreateShell(Brep, IEnumerable(Of Int32), Double, Double)
  fullName.vb: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep, System.Collections.Generic.IEnumerable(Of System.Int32), System.Double, System.Double)
  name.vb: CreateShell(Brep, IEnumerable(Of Int32), Double, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
    name: CreateShell
    nameWithType: Brep.CreateShell
    fullName: Rhino.Geometry.Brep.CreateShell
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
    name: CreateShell
    nameWithType: Brep.CreateShell
    fullName: Rhino.Geometry.Brep.CreateShell
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: JoinBreps(IEnumerable<Brep>, Double)
  nameWithType: Brep.JoinBreps(IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.JoinBreps(IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: JoinBreps(IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: JoinBreps
    nameWithType: Brep.JoinBreps
    fullName: Rhino.Geometry.Brep.JoinBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: JoinBreps
    nameWithType: Brep.JoinBreps
    fullName: Rhino.Geometry.Brep.JoinBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MergeBreps(IEnumerable<Brep>, Double)
  nameWithType: Brep.MergeBreps(IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.MergeBreps(IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: MergeBreps(IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: MergeBreps
    nameWithType: Brep.MergeBreps
    fullName: Rhino.Geometry.Brep.MergeBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: MergeBreps
    nameWithType: Brep.MergeBreps
    fullName: Rhino.Geometry.Brep.MergeBreps
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  commentId: M:Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateContourCurves(Brep, Point3d, Point3d, Double)
  nameWithType: Brep.CreateContourCurves(Brep, Point3d, Point3d, Double)
  fullName: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep, Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    name: CreateContourCurves
    nameWithType: Brep.CreateContourCurves
    fullName: Rhino.Geometry.Brep.CreateContourCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    name: CreateContourCurves
    nameWithType: Brep.CreateContourCurves
    fullName: Rhino.Geometry.Brep.CreateContourCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
  commentId: M:Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateContourCurves(Brep, Plane)
  nameWithType: Brep.CreateContourCurves(Brep, Plane)
  fullName: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep, Rhino.Geometry.Plane)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
    name: CreateContourCurves
    nameWithType: Brep.CreateContourCurves
    fullName: Rhino.Geometry.Brep.CreateContourCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
    name: CreateContourCurves
    nameWithType: Brep.CreateContourCurves
    fullName: Rhino.Geometry.Brep.CreateContourCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
  commentId: M:Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CreateCurvatureAnalysisMesh(Brep, CurvatureAnalysisSettingsState)
  nameWithType: Brep.CreateCurvatureAnalysisMesh(Brep, CurvatureAnalysisSettingsState)
  fullName: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep, Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
    name: CreateCurvatureAnalysisMesh
    nameWithType: Brep.CreateCurvatureAnalysisMesh
    fullName: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
    name: CurvatureAnalysisSettingsState
    nameWithType: CurvatureAnalysisSettingsState
    fullName: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
    name: CreateCurvatureAnalysisMesh
    nameWithType: Brep.CreateCurvatureAnalysisMesh
    fullName: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
    name: CurvatureAnalysisSettingsState
    nameWithType: CurvatureAnalysisSettingsState
    fullName: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DestroyRegionTopology
  commentId: M:Rhino.Geometry.Brep.DestroyRegionTopology
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DestroyRegionTopology()
  nameWithType: Brep.DestroyRegionTopology()
  fullName: Rhino.Geometry.Brep.DestroyRegionTopology()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DestroyRegionTopology
    name: DestroyRegionTopology
    nameWithType: Brep.DestroyRegionTopology
    fullName: Rhino.Geometry.Brep.DestroyRegionTopology
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DestroyRegionTopology
    name: DestroyRegionTopology
    nameWithType: Brep.DestroyRegionTopology
    fullName: Rhino.Geometry.Brep.DestroyRegionTopology
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetRegions
  commentId: M:Rhino.Geometry.Brep.GetRegions
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetRegions()
  nameWithType: Brep.GetRegions()
  fullName: Rhino.Geometry.Brep.GetRegions()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetRegions
    name: GetRegions
    nameWithType: Brep.GetRegions
    fullName: Rhino.Geometry.Brep.GetRegions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetRegions
    name: GetRegions
    nameWithType: Brep.GetRegions
    fullName: Rhino.Geometry.Brep.GetRegions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Duplicate
  commentId: M:Rhino.Geometry.Brep.Duplicate
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Duplicate()
  nameWithType: Brep.Duplicate()
  fullName: Rhino.Geometry.Brep.Duplicate()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Duplicate
    name: Duplicate
    nameWithType: Brep.Duplicate
    fullName: Rhino.Geometry.Brep.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Duplicate
    name: Duplicate
    nameWithType: Brep.Duplicate
    fullName: Rhino.Geometry.Brep.Duplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DuplicateBrep
  commentId: M:Rhino.Geometry.Brep.DuplicateBrep
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DuplicateBrep()
  nameWithType: Brep.DuplicateBrep()
  fullName: Rhino.Geometry.Brep.DuplicateBrep()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DuplicateBrep
    name: DuplicateBrep
    nameWithType: Brep.DuplicateBrep
    fullName: Rhino.Geometry.Brep.DuplicateBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DuplicateBrep
    name: DuplicateBrep
    nameWithType: Brep.DuplicateBrep
    fullName: Rhino.Geometry.Brep.DuplicateBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DuplicateSubBrep(IEnumerable<Int32>)
  nameWithType: Brep.DuplicateSubBrep(IEnumerable<Int32>)
  fullName: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable<System.Int32>)
  nameWithType.vb: Brep.DuplicateSubBrep(IEnumerable(Of Int32))
  fullName.vb: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: DuplicateSubBrep(IEnumerable(Of Int32))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
    name: DuplicateSubBrep
    nameWithType: Brep.DuplicateSubBrep
    fullName: Rhino.Geometry.Brep.DuplicateSubBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
    name: DuplicateSubBrep
    nameWithType: Brep.DuplicateSubBrep
    fullName: Rhino.Geometry.Brep.DuplicateSubBrep
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DuplicateEdgeCurves
  commentId: M:Rhino.Geometry.Brep.DuplicateEdgeCurves
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DuplicateEdgeCurves()
  nameWithType: Brep.DuplicateEdgeCurves()
  fullName: Rhino.Geometry.Brep.DuplicateEdgeCurves()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DuplicateEdgeCurves
    name: DuplicateEdgeCurves
    nameWithType: Brep.DuplicateEdgeCurves
    fullName: Rhino.Geometry.Brep.DuplicateEdgeCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DuplicateEdgeCurves
    name: DuplicateEdgeCurves
    nameWithType: Brep.DuplicateEdgeCurves
    fullName: Rhino.Geometry.Brep.DuplicateEdgeCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
  commentId: M:Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DuplicateEdgeCurves(Boolean)
  nameWithType: Brep.DuplicateEdgeCurves(Boolean)
  fullName: Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
    name: DuplicateEdgeCurves
    nameWithType: Brep.DuplicateEdgeCurves
    fullName: Rhino.Geometry.Brep.DuplicateEdgeCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
    name: DuplicateEdgeCurves
    nameWithType: Brep.DuplicateEdgeCurves
    fullName: Rhino.Geometry.Brep.DuplicateEdgeCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DuplicateNakedEdgeCurves(Boolean, Boolean)
  nameWithType: Brep.DuplicateNakedEdgeCurves(Boolean, Boolean)
  fullName: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
    name: DuplicateNakedEdgeCurves
    nameWithType: Brep.DuplicateNakedEdgeCurves
    fullName: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
    name: DuplicateNakedEdgeCurves
    nameWithType: Brep.DuplicateNakedEdgeCurves
    fullName: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetConnectedComponents
  commentId: M:Rhino.Geometry.Brep.GetConnectedComponents
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetConnectedComponents()
  nameWithType: Brep.GetConnectedComponents()
  fullName: Rhino.Geometry.Brep.GetConnectedComponents()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetConnectedComponents
    name: GetConnectedComponents
    nameWithType: Brep.GetConnectedComponents
    fullName: Rhino.Geometry.Brep.GetConnectedComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetConnectedComponents
    name: GetConnectedComponents
    nameWithType: Brep.GetConnectedComponents
    fullName: Rhino.Geometry.Brep.GetConnectedComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetWireframe(System.Int32)
  commentId: M:Rhino.Geometry.Brep.GetWireframe(System.Int32)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetWireframe(Int32)
  nameWithType: Brep.GetWireframe(Int32)
  fullName: Rhino.Geometry.Brep.GetWireframe(System.Int32)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetWireframe(System.Int32)
    name: GetWireframe
    nameWithType: Brep.GetWireframe
    fullName: Rhino.Geometry.Brep.GetWireframe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetWireframe(System.Int32)
    name: GetWireframe
    nameWithType: Brep.GetWireframe
    fullName: Rhino.Geometry.Brep.GetWireframe
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.DuplicateVertices
  commentId: M:Rhino.Geometry.Brep.DuplicateVertices
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: DuplicateVertices()
  nameWithType: Brep.DuplicateVertices()
  fullName: Rhino.Geometry.Brep.DuplicateVertices()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.DuplicateVertices
    name: DuplicateVertices
    nameWithType: Brep.DuplicateVertices
    fullName: Rhino.Geometry.Brep.DuplicateVertices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.DuplicateVertices
    name: DuplicateVertices
    nameWithType: Brep.DuplicateVertices
    fullName: Rhino.Geometry.Brep.DuplicateVertices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Flip
  commentId: M:Rhino.Geometry.Brep.Flip
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Flip()
  nameWithType: Brep.Flip()
  fullName: Rhino.Geometry.Brep.Flip()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Flip
    name: Flip
    nameWithType: Brep.Flip
    fullName: Rhino.Geometry.Brep.Flip
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Flip
    name: Flip
    nameWithType: Brep.Flip
    fullName: Rhino.Geometry.Brep.Flip
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
  commentId: M:Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsDuplicate(Brep, Double)
  nameWithType: Brep.IsDuplicate(Brep, Double)
  fullName: Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
    name: IsDuplicate
    nameWithType: Brep.IsDuplicate
    fullName: Rhino.Geometry.Brep.IsDuplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
    name: IsDuplicate
    nameWithType: Brep.IsDuplicate
    fullName: Rhino.Geometry.Brep.IsDuplicate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsValidTopology(System.String@)
  commentId: M:Rhino.Geometry.Brep.IsValidTopology(System.String@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsValidTopology(String)
  nameWithType: Brep.IsValidTopology(String)
  fullName: Rhino.Geometry.Brep.IsValidTopology(System.String)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsValidTopology(System.String@)
    name: IsValidTopology
    nameWithType: Brep.IsValidTopology
    fullName: Rhino.Geometry.Brep.IsValidTopology
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsValidTopology(System.String@)
    name: IsValidTopology
    nameWithType: Brep.IsValidTopology
    fullName: Rhino.Geometry.Brep.IsValidTopology
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsValidGeometry(System.String@)
  commentId: M:Rhino.Geometry.Brep.IsValidGeometry(System.String@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsValidGeometry(String)
  nameWithType: Brep.IsValidGeometry(String)
  fullName: Rhino.Geometry.Brep.IsValidGeometry(System.String)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsValidGeometry(System.String@)
    name: IsValidGeometry
    nameWithType: Brep.IsValidGeometry
    fullName: Rhino.Geometry.Brep.IsValidGeometry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsValidGeometry(System.String@)
    name: IsValidGeometry
    nameWithType: Brep.IsValidGeometry
    fullName: Rhino.Geometry.Brep.IsValidGeometry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
  commentId: M:Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsValidTolerancesAndFlags(String)
  nameWithType: Brep.IsValidTolerancesAndFlags(String)
  fullName: Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
    name: IsValidTolerancesAndFlags
    nameWithType: Brep.IsValidTolerancesAndFlags
    fullName: Rhino.Geometry.Brep.IsValidTolerancesAndFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
    name: IsValidTolerancesAndFlags
    nameWithType: Brep.IsValidTolerancesAndFlags
    fullName: Rhino.Geometry.Brep.IsValidTolerancesAndFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
  commentId: M:Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: ClosestPoint(Point3d)
  nameWithType: Brep.ClosestPoint(Point3d)
  fullName: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
    name: ClosestPoint
    nameWithType: Brep.ClosestPoint
    fullName: Rhino.Geometry.Brep.ClosestPoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
    name: ClosestPoint
    nameWithType: Brep.ClosestPoint
    fullName: Rhino.Geometry.Brep.ClosestPoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
  commentId: M:Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: ClosestPoint(Point3d, Point3d, ComponentIndex, Double, Double, Double, Vector3d)
  nameWithType: Brep.ClosestPoint(Point3d, Point3d, ComponentIndex, Double, Double, Double, Vector3d)
  fullName: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, Rhino.Geometry.ComponentIndex, System.Double, System.Double, System.Double, Rhino.Geometry.Vector3d)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
    name: ClosestPoint
    nameWithType: Brep.ClosestPoint
    fullName: Rhino.Geometry.Brep.ClosestPoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.ComponentIndex
    name: ComponentIndex
    nameWithType: ComponentIndex
    fullName: Rhino.Geometry.ComponentIndex
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
    name: ClosestPoint
    nameWithType: Brep.ClosestPoint
    fullName: Rhino.Geometry.Brep.ClosestPoint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.ComponentIndex
    name: ComponentIndex
    nameWithType: ComponentIndex
    fullName: Rhino.Geometry.ComponentIndex
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
  commentId: M:Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: FindCoincidentBrepComponents(Point3d, Double, Int32[], Int32[], Int32[])
  nameWithType: Brep.FindCoincidentBrepComponents(Point3d, Double, Int32[], Int32[], Int32[])
  fullName: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d, System.Double, System.Int32[], System.Int32[], System.Int32[])
  nameWithType.vb: Brep.FindCoincidentBrepComponents(Point3d, Double, Int32(), Int32(), Int32())
  fullName.vb: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d, System.Double, System.Int32(), System.Int32(), System.Int32())
  name.vb: FindCoincidentBrepComponents(Point3d, Double, Int32(), Int32(), Int32())
  spec.csharp:
  - uid: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
    name: FindCoincidentBrepComponents
    nameWithType: Brep.FindCoincidentBrepComponents
    fullName: Rhino.Geometry.Brep.FindCoincidentBrepComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
    name: FindCoincidentBrepComponents
    nameWithType: Brep.FindCoincidentBrepComponents
    fullName: Rhino.Geometry.Brep.FindCoincidentBrepComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsPointInside(Point3d, Double, Boolean)
  nameWithType: Brep.IsPointInside(Point3d, Double, Boolean)
  fullName: Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
    name: IsPointInside
    nameWithType: Brep.IsPointInside
    fullName: Rhino.Geometry.Brep.IsPointInside
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
    name: IsPointInside
    nameWithType: Brep.IsPointInside
    fullName: Rhino.Geometry.Brep.IsPointInside
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
  commentId: M:Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetPointInside(Double, Point3d)
  nameWithType: Brep.GetPointInside(Double, Point3d)
  fullName: Rhino.Geometry.Brep.GetPointInside(System.Double, Rhino.Geometry.Point3d)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
    name: GetPointInside
    nameWithType: Brep.GetPointInside
    fullName: Rhino.Geometry.Brep.GetPointInside
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
    name: GetPointInside
    nameWithType: Brep.GetPointInside
    fullName: Rhino.Geometry.Brep.GetPointInside
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
  commentId: M:Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CapPlanarHoles(Double)
  nameWithType: Brep.CapPlanarHoles(Double)
  fullName: Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
    name: CapPlanarHoles
    nameWithType: Brep.CapPlanarHoles
    fullName: Rhino.Geometry.Brep.CapPlanarHoles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
    name: CapPlanarHoles
    nameWithType: Brep.CapPlanarHoles
    fullName: Rhino.Geometry.Brep.CapPlanarHoles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Join(Brep, Double, Boolean)
  nameWithType: Brep.Join(Brep, Double, Boolean)
  fullName: Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
    name: Join
    nameWithType: Brep.Join
    fullName: Rhino.Geometry.Brep.Join
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
    name: Join
    nameWithType: Brep.Join
    fullName: Rhino.Geometry.Brep.Join
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
  commentId: M:Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: JoinNakedEdges(Double)
  nameWithType: Brep.JoinNakedEdges(Double)
  fullName: Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
    name: JoinNakedEdges
    nameWithType: Brep.JoinNakedEdges
    fullName: Rhino.Geometry.Brep.JoinNakedEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
    name: JoinNakedEdges
    nameWithType: Brep.JoinNakedEdges
    fullName: Rhino.Geometry.Brep.JoinNakedEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
  commentId: M:Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MergeCoplanarFaces(Double)
  nameWithType: Brep.MergeCoplanarFaces(Double)
  fullName: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
    name: MergeCoplanarFaces
    nameWithType: Brep.MergeCoplanarFaces
    fullName: Rhino.Geometry.Brep.MergeCoplanarFaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
    name: MergeCoplanarFaces
    nameWithType: Brep.MergeCoplanarFaces
    fullName: Rhino.Geometry.Brep.MergeCoplanarFaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MergeCoplanarFaces(Double, Double)
  nameWithType: Brep.MergeCoplanarFaces(Double, Double)
  fullName: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
    name: MergeCoplanarFaces
    nameWithType: Brep.MergeCoplanarFaces
    fullName: Rhino.Geometry.Brep.MergeCoplanarFaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
    name: MergeCoplanarFaces
    nameWithType: Brep.MergeCoplanarFaces
    fullName: Rhino.Geometry.Brep.MergeCoplanarFaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
  commentId: M:Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Split(Brep, Double)
  nameWithType: Brep.Split(Brep, Double)
  fullName: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
  commentId: M:Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Split(Brep, Double, Boolean)
  nameWithType: Brep.Split(Brep, Double, Boolean)
  fullName: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  commentId: M:Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Split(IEnumerable<Brep>, Double)
  nameWithType: Brep.Split(IEnumerable<Brep>, Double)
  fullName: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable<Rhino.Geometry.Brep>, System.Double)
  nameWithType.vb: Brep.Split(IEnumerable(Of Brep), Double)
  fullName.vb: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Brep), System.Double)
  name.vb: Split(IEnumerable(Of Brep), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  commentId: M:Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Split(IEnumerable<Curve>, Double)
  nameWithType: Brep.Split(IEnumerable<Curve>, Double)
  fullName: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable<Rhino.Geometry.Curve>, System.Double)
  nameWithType.vb: Brep.Split(IEnumerable(Of Curve), Double)
  fullName.vb: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.Curve), System.Double)
  name.vb: Split(IEnumerable(Of Curve), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
  commentId: M:Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Split(IEnumerable<GeometryBase>, Vector3d, Boolean, Double)
  nameWithType: Brep.Split(IEnumerable<GeometryBase>, Vector3d, Boolean, Double)
  fullName: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable<Rhino.Geometry.GeometryBase>, Rhino.Geometry.Vector3d, System.Boolean, System.Double)
  nameWithType.vb: Brep.Split(IEnumerable(Of GeometryBase), Vector3d, Boolean, Double)
  fullName.vb: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.GeometryBase), Rhino.Geometry.Vector3d, System.Boolean, System.Double)
  name.vb: Split(IEnumerable(Of GeometryBase), Vector3d, Boolean, Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
    name: Split
    nameWithType: Brep.Split
    fullName: Rhino.Geometry.Brep.Split
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
  commentId: M:Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Trim(Brep, Double)
  nameWithType: Brep.Trim(Brep, Double)
  fullName: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
    name: Trim
    nameWithType: Brep.Trim
    fullName: Rhino.Geometry.Brep.Trim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
    name: Trim
    nameWithType: Brep.Trim
    fullName: Rhino.Geometry.Brep.Trim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
  commentId: M:Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Trim(Plane, Double)
  nameWithType: Brep.Trim(Plane, Double)
  fullName: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
    name: Trim
    nameWithType: Brep.Trim
    fullName: Rhino.Geometry.Brep.Trim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
    name: Trim
    nameWithType: Brep.Trim
    fullName: Rhino.Geometry.Brep.Trim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: UnjoinEdges(IEnumerable<Int32>)
  nameWithType: Brep.UnjoinEdges(IEnumerable<Int32>)
  fullName: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable<System.Int32>)
  nameWithType.vb: Brep.UnjoinEdges(IEnumerable(Of Int32))
  fullName.vb: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: UnjoinEdges(IEnumerable(Of Int32))
  spec.csharp:
  - uid: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
    name: UnjoinEdges
    nameWithType: Brep.UnjoinEdges
    fullName: Rhino.Geometry.Brep.UnjoinEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
    name: UnjoinEdges
    nameWithType: Brep.UnjoinEdges
    fullName: Rhino.Geometry.Brep.UnjoinEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: JoinEdges(Int32, Int32, Double, Boolean)
  nameWithType: Brep.JoinEdges(Int32, Int32, Double, Boolean)
  fullName: Rhino.Geometry.Brep.JoinEdges(System.Int32, System.Int32, System.Double, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
    name: JoinEdges
    nameWithType: Brep.JoinEdges
    fullName: Rhino.Geometry.Brep.JoinEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
    name: JoinEdges
    nameWithType: Brep.JoinEdges
    fullName: Rhino.Geometry.Brep.JoinEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: TransformComponent(IEnumerable<ComponentIndex>, Transform, Double, Double, Boolean)
  nameWithType: Brep.TransformComponent(IEnumerable<ComponentIndex>, Transform, Double, Double, Boolean)
  fullName: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable<Rhino.Geometry.ComponentIndex>, Rhino.Geometry.Transform, System.Double, System.Double, System.Boolean)
  nameWithType.vb: Brep.TransformComponent(IEnumerable(Of ComponentIndex), Transform, Double, Double, Boolean)
  fullName.vb: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.ComponentIndex), Rhino.Geometry.Transform, System.Double, System.Double, System.Boolean)
  name.vb: TransformComponent(IEnumerable(Of ComponentIndex), Transform, Double, Double, Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
    name: TransformComponent
    nameWithType: Brep.TransformComponent
    fullName: Rhino.Geometry.Brep.TransformComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.ComponentIndex
    name: ComponentIndex
    nameWithType: ComponentIndex
    fullName: Rhino.Geometry.ComponentIndex
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
    name: TransformComponent
    nameWithType: Brep.TransformComponent
    fullName: Rhino.Geometry.Brep.TransformComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.ComponentIndex
    name: ComponentIndex
    nameWithType: ComponentIndex
    fullName: Rhino.Geometry.ComponentIndex
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetArea
  commentId: M:Rhino.Geometry.Brep.GetArea
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetArea()
  nameWithType: Brep.GetArea()
  fullName: Rhino.Geometry.Brep.GetArea()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetArea
    name: GetArea
    nameWithType: Brep.GetArea
    fullName: Rhino.Geometry.Brep.GetArea
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetArea
    name: GetArea
    nameWithType: Brep.GetArea
    fullName: Rhino.Geometry.Brep.GetArea
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetArea(Double, Double)
  nameWithType: Brep.GetArea(Double, Double)
  fullName: Rhino.Geometry.Brep.GetArea(System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
    name: GetArea
    nameWithType: Brep.GetArea
    fullName: Rhino.Geometry.Brep.GetArea
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
    name: GetArea
    nameWithType: Brep.GetArea
    fullName: Rhino.Geometry.Brep.GetArea
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetVolume
  commentId: M:Rhino.Geometry.Brep.GetVolume
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetVolume()
  nameWithType: Brep.GetVolume()
  fullName: Rhino.Geometry.Brep.GetVolume()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetVolume
    name: GetVolume
    nameWithType: Brep.GetVolume
    fullName: Rhino.Geometry.Brep.GetVolume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetVolume
    name: GetVolume
    nameWithType: Brep.GetVolume
    fullName: Rhino.Geometry.Brep.GetVolume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
  commentId: M:Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: GetVolume(Double, Double)
  nameWithType: Brep.GetVolume(Double, Double)
  fullName: Rhino.Geometry.Brep.GetVolume(System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
    name: GetVolume
    nameWithType: Brep.GetVolume
    fullName: Rhino.Geometry.Brep.GetVolume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
    name: GetVolume
    nameWithType: Brep.GetVolume
    fullName: Rhino.Geometry.Brep.GetVolume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
  commentId: M:Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: AddTrimCurve(Curve)
  nameWithType: Brep.AddTrimCurve(Curve)
  fullName: Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
    name: AddTrimCurve
    nameWithType: Brep.AddTrimCurve
    fullName: Rhino.Geometry.Brep.AddTrimCurve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
    name: AddTrimCurve
    nameWithType: Brep.AddTrimCurve
    fullName: Rhino.Geometry.Brep.AddTrimCurve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
  commentId: M:Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: AddEdgeCurve(Curve)
  nameWithType: Brep.AddEdgeCurve(Curve)
  fullName: Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
    name: AddEdgeCurve
    nameWithType: Brep.AddEdgeCurve
    fullName: Rhino.Geometry.Brep.AddEdgeCurve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
    name: AddEdgeCurve
    nameWithType: Brep.AddEdgeCurve
    fullName: Rhino.Geometry.Brep.AddEdgeCurve
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
  commentId: M:Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: AddSurface(Surface)
  nameWithType: Brep.AddSurface(Surface)
  fullName: Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
    name: AddSurface
    nameWithType: Brep.AddSurface
    fullName: Rhino.Geometry.Brep.AddSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
    name: AddSurface
    nameWithType: Brep.AddSurface
    fullName: Rhino.Geometry.Brep.AddSurface
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Surface
    name: Surface
    nameWithType: Surface
    fullName: Rhino.Geometry.Surface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
  commentId: M:Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Append(Brep)
  nameWithType: Brep.Append(Brep)
  fullName: Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
    name: Append
    nameWithType: Brep.Append
    fullName: Rhino.Geometry.Brep.Append
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
    name: Append
    nameWithType: Brep.Append
    fullName: Rhino.Geometry.Brep.Append
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Brep
    name: Brep
    nameWithType: Brep
    fullName: Rhino.Geometry.Brep
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.SetVertices
  commentId: M:Rhino.Geometry.Brep.SetVertices
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: SetVertices()
  nameWithType: Brep.SetVertices()
  fullName: Rhino.Geometry.Brep.SetVertices()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.SetVertices
    name: SetVertices
    nameWithType: Brep.SetVertices
    fullName: Rhino.Geometry.Brep.SetVertices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.SetVertices
    name: SetVertices
    nameWithType: Brep.SetVertices
    fullName: Rhino.Geometry.Brep.SetVertices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.SetTrimIsoFlags
  commentId: M:Rhino.Geometry.Brep.SetTrimIsoFlags
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: SetTrimIsoFlags()
  nameWithType: Brep.SetTrimIsoFlags()
  fullName: Rhino.Geometry.Brep.SetTrimIsoFlags()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.SetTrimIsoFlags
    name: SetTrimIsoFlags
    nameWithType: Brep.SetTrimIsoFlags
    fullName: Rhino.Geometry.Brep.SetTrimIsoFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.SetTrimIsoFlags
    name: SetTrimIsoFlags
    nameWithType: Brep.SetTrimIsoFlags
    fullName: Rhino.Geometry.Brep.SetTrimIsoFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
  commentId: M:Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: SetTolerancesBoxesAndFlags()
  nameWithType: Brep.SetTolerancesBoxesAndFlags()
  fullName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    name: SetTolerancesBoxesAndFlags
    nameWithType: Brep.SetTolerancesBoxesAndFlags
    fullName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    name: SetTolerancesBoxesAndFlags
    nameWithType: Brep.SetTolerancesBoxesAndFlags
    fullName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: SetTolerancesBoxesAndFlags(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: Brep.SetTolerancesBoxesAndFlags(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: SetTolerancesBoxesAndFlags
    nameWithType: Brep.SetTolerancesBoxesAndFlags
    fullName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: SetTolerancesBoxesAndFlags
    nameWithType: Brep.SetTolerancesBoxesAndFlags
    fullName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
  commentId: M:Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: RebuildTrimsForV2(BrepFace, NurbsSurface)
  nameWithType: Brep.RebuildTrimsForV2(BrepFace, NurbsSurface)
  fullName: Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace, Rhino.Geometry.NurbsSurface)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
    name: RebuildTrimsForV2
    nameWithType: Brep.RebuildTrimsForV2
    fullName: Rhino.Geometry.Brep.RebuildTrimsForV2
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.NurbsSurface
    name: NurbsSurface
    nameWithType: NurbsSurface
    fullName: Rhino.Geometry.NurbsSurface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
    name: RebuildTrimsForV2
    nameWithType: Brep.RebuildTrimsForV2
    fullName: Rhino.Geometry.Brep.RebuildTrimsForV2
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.BrepFace
    name: BrepFace
    nameWithType: BrepFace
    fullName: Rhino.Geometry.BrepFace
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.NurbsSurface
    name: NurbsSurface
    nameWithType: NurbsSurface
    fullName: Rhino.Geometry.NurbsSurface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.MakeValidForV2
  commentId: M:Rhino.Geometry.Brep.MakeValidForV2
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: MakeValidForV2()
  nameWithType: Brep.MakeValidForV2()
  fullName: Rhino.Geometry.Brep.MakeValidForV2()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.MakeValidForV2
    name: MakeValidForV2
    nameWithType: Brep.MakeValidForV2
    fullName: Rhino.Geometry.Brep.MakeValidForV2
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.MakeValidForV2
    name: MakeValidForV2
    nameWithType: Brep.MakeValidForV2
    fullName: Rhino.Geometry.Brep.MakeValidForV2
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Compact
  commentId: M:Rhino.Geometry.Brep.Compact
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Compact()
  nameWithType: Brep.Compact()
  fullName: Rhino.Geometry.Brep.Compact()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Compact
    name: Compact
    nameWithType: Brep.Compact
    fullName: Rhino.Geometry.Brep.Compact
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Compact
    name: Compact
    nameWithType: Brep.Compact
    fullName: Rhino.Geometry.Brep.Compact
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Repair(System.Double)
  commentId: M:Rhino.Geometry.Brep.Repair(System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Repair(Double)
  nameWithType: Brep.Repair(Double)
  fullName: Rhino.Geometry.Brep.Repair(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Repair(System.Double)
    name: Repair
    nameWithType: Brep.Repair
    fullName: Rhino.Geometry.Brep.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Repair(System.Double)
    name: Repair
    nameWithType: Brep.Repair
    fullName: Rhino.Geometry.Brep.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.RemoveHoles(System.Double)
  commentId: M:Rhino.Geometry.Brep.RemoveHoles(System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: RemoveHoles(Double)
  nameWithType: Brep.RemoveHoles(Double)
  fullName: Rhino.Geometry.Brep.RemoveHoles(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.RemoveHoles(System.Double)
    name: RemoveHoles
    nameWithType: Brep.RemoveHoles
    fullName: Rhino.Geometry.Brep.RemoveHoles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.RemoveHoles(System.Double)
    name: RemoveHoles
    nameWithType: Brep.RemoveHoles
    fullName: Rhino.Geometry.Brep.RemoveHoles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
  commentId: M:Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: RemoveHoles(IEnumerable<ComponentIndex>, Double)
  nameWithType: Brep.RemoveHoles(IEnumerable<ComponentIndex>, Double)
  fullName: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable<Rhino.Geometry.ComponentIndex>, System.Double)
  nameWithType.vb: Brep.RemoveHoles(IEnumerable(Of ComponentIndex), Double)
  fullName.vb: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable(Of Rhino.Geometry.ComponentIndex), System.Double)
  name.vb: RemoveHoles(IEnumerable(Of ComponentIndex), Double)
  spec.csharp:
  - uid: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
    name: RemoveHoles
    nameWithType: Brep.RemoveHoles
    fullName: Rhino.Geometry.Brep.RemoveHoles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.ComponentIndex
    name: ComponentIndex
    nameWithType: ComponentIndex
    fullName: Rhino.Geometry.ComponentIndex
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
    name: RemoveHoles
    nameWithType: Brep.RemoveHoles
    fullName: Rhino.Geometry.Brep.RemoveHoles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.ComponentIndex
    name: ComponentIndex
    nameWithType: ComponentIndex
    fullName: Rhino.Geometry.ComponentIndex
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnusedFaces
  commentId: M:Rhino.Geometry.Brep.CullUnusedFaces
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnusedFaces()
  nameWithType: Brep.CullUnusedFaces()
  fullName: Rhino.Geometry.Brep.CullUnusedFaces()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnusedFaces
    name: CullUnusedFaces
    nameWithType: Brep.CullUnusedFaces
    fullName: Rhino.Geometry.Brep.CullUnusedFaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnusedFaces
    name: CullUnusedFaces
    nameWithType: Brep.CullUnusedFaces
    fullName: Rhino.Geometry.Brep.CullUnusedFaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnusedLoops
  commentId: M:Rhino.Geometry.Brep.CullUnusedLoops
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnusedLoops()
  nameWithType: Brep.CullUnusedLoops()
  fullName: Rhino.Geometry.Brep.CullUnusedLoops()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnusedLoops
    name: CullUnusedLoops
    nameWithType: Brep.CullUnusedLoops
    fullName: Rhino.Geometry.Brep.CullUnusedLoops
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnusedLoops
    name: CullUnusedLoops
    nameWithType: Brep.CullUnusedLoops
    fullName: Rhino.Geometry.Brep.CullUnusedLoops
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnusedTrims
  commentId: M:Rhino.Geometry.Brep.CullUnusedTrims
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnusedTrims()
  nameWithType: Brep.CullUnusedTrims()
  fullName: Rhino.Geometry.Brep.CullUnusedTrims()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnusedTrims
    name: CullUnusedTrims
    nameWithType: Brep.CullUnusedTrims
    fullName: Rhino.Geometry.Brep.CullUnusedTrims
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnusedTrims
    name: CullUnusedTrims
    nameWithType: Brep.CullUnusedTrims
    fullName: Rhino.Geometry.Brep.CullUnusedTrims
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnusedEdges
  commentId: M:Rhino.Geometry.Brep.CullUnusedEdges
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnusedEdges()
  nameWithType: Brep.CullUnusedEdges()
  fullName: Rhino.Geometry.Brep.CullUnusedEdges()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnusedEdges
    name: CullUnusedEdges
    nameWithType: Brep.CullUnusedEdges
    fullName: Rhino.Geometry.Brep.CullUnusedEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnusedEdges
    name: CullUnusedEdges
    nameWithType: Brep.CullUnusedEdges
    fullName: Rhino.Geometry.Brep.CullUnusedEdges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnusedVertices
  commentId: M:Rhino.Geometry.Brep.CullUnusedVertices
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnusedVertices()
  nameWithType: Brep.CullUnusedVertices()
  fullName: Rhino.Geometry.Brep.CullUnusedVertices()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnusedVertices
    name: CullUnusedVertices
    nameWithType: Brep.CullUnusedVertices
    fullName: Rhino.Geometry.Brep.CullUnusedVertices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnusedVertices
    name: CullUnusedVertices
    nameWithType: Brep.CullUnusedVertices
    fullName: Rhino.Geometry.Brep.CullUnusedVertices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnused3dCurves
  commentId: M:Rhino.Geometry.Brep.CullUnused3dCurves
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnused3dCurves()
  nameWithType: Brep.CullUnused3dCurves()
  fullName: Rhino.Geometry.Brep.CullUnused3dCurves()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnused3dCurves
    name: CullUnused3dCurves
    nameWithType: Brep.CullUnused3dCurves
    fullName: Rhino.Geometry.Brep.CullUnused3dCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnused3dCurves
    name: CullUnused3dCurves
    nameWithType: Brep.CullUnused3dCurves
    fullName: Rhino.Geometry.Brep.CullUnused3dCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnused2dCurves
  commentId: M:Rhino.Geometry.Brep.CullUnused2dCurves
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnused2dCurves()
  nameWithType: Brep.CullUnused2dCurves()
  fullName: Rhino.Geometry.Brep.CullUnused2dCurves()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnused2dCurves
    name: CullUnused2dCurves
    nameWithType: Brep.CullUnused2dCurves
    fullName: Rhino.Geometry.Brep.CullUnused2dCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnused2dCurves
    name: CullUnused2dCurves
    nameWithType: Brep.CullUnused2dCurves
    fullName: Rhino.Geometry.Brep.CullUnused2dCurves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.CullUnusedSurfaces
  commentId: M:Rhino.Geometry.Brep.CullUnusedSurfaces
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: CullUnusedSurfaces()
  nameWithType: Brep.CullUnusedSurfaces()
  fullName: Rhino.Geometry.Brep.CullUnusedSurfaces()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.CullUnusedSurfaces
    name: CullUnusedSurfaces
    nameWithType: Brep.CullUnusedSurfaces
    fullName: Rhino.Geometry.Brep.CullUnusedSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.CullUnusedSurfaces
    name: CullUnusedSurfaces
    nameWithType: Brep.CullUnusedSurfaces
    fullName: Rhino.Geometry.Brep.CullUnusedSurfaces
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Standardize
  commentId: M:Rhino.Geometry.Brep.Standardize
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Standardize()
  nameWithType: Brep.Standardize()
  fullName: Rhino.Geometry.Brep.Standardize()
  spec.csharp:
  - uid: Rhino.Geometry.Brep.Standardize
    name: Standardize
    nameWithType: Brep.Standardize
    fullName: Rhino.Geometry.Brep.Standardize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.Brep.Standardize
    name: Standardize
    nameWithType: Brep.Standardize
    fullName: Rhino.Geometry.Brep.Standardize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.Brep.Vertices
  commentId: P:Rhino.Geometry.Brep.Vertices
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Vertices
  nameWithType: Brep.Vertices
  fullName: Rhino.Geometry.Brep.Vertices
- uid: Rhino.Geometry.Brep.Surfaces
  commentId: P:Rhino.Geometry.Brep.Surfaces
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Surfaces
  nameWithType: Brep.Surfaces
  fullName: Rhino.Geometry.Brep.Surfaces
- uid: Rhino.Geometry.Brep.Edges
  commentId: P:Rhino.Geometry.Brep.Edges
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Edges
  nameWithType: Brep.Edges
  fullName: Rhino.Geometry.Brep.Edges
- uid: Rhino.Geometry.Brep.Trims
  commentId: P:Rhino.Geometry.Brep.Trims
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Trims
  nameWithType: Brep.Trims
  fullName: Rhino.Geometry.Brep.Trims
- uid: Rhino.Geometry.Brep.Loops
  commentId: P:Rhino.Geometry.Brep.Loops
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Loops
  nameWithType: Brep.Loops
  fullName: Rhino.Geometry.Brep.Loops
- uid: Rhino.Geometry.Brep.Faces
  commentId: P:Rhino.Geometry.Brep.Faces
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Faces
  nameWithType: Brep.Faces
  fullName: Rhino.Geometry.Brep.Faces
- uid: Rhino.Geometry.Brep.Curves2D
  commentId: P:Rhino.Geometry.Brep.Curves2D
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Curves2D
  nameWithType: Brep.Curves2D
  fullName: Rhino.Geometry.Brep.Curves2D
- uid: Rhino.Geometry.Brep.Curves3D
  commentId: P:Rhino.Geometry.Brep.Curves3D
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: Curves3D
  nameWithType: Brep.Curves3D
  fullName: Rhino.Geometry.Brep.Curves3D
- uid: Rhino.Geometry.Brep.IsSolid
  commentId: P:Rhino.Geometry.Brep.IsSolid
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsSolid
  nameWithType: Brep.IsSolid
  fullName: Rhino.Geometry.Brep.IsSolid
- uid: Rhino.Geometry.Brep.SolidOrientation
  commentId: P:Rhino.Geometry.Brep.SolidOrientation
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: SolidOrientation
  nameWithType: Brep.SolidOrientation
  fullName: Rhino.Geometry.Brep.SolidOrientation
- uid: Rhino.Geometry.Brep.IsManifold
  commentId: P:Rhino.Geometry.Brep.IsManifold
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsManifold
  nameWithType: Brep.IsManifold
  fullName: Rhino.Geometry.Brep.IsManifold
- uid: Rhino.Geometry.Brep.IsSurface
  commentId: P:Rhino.Geometry.Brep.IsSurface
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: IsSurface
  nameWithType: Brep.IsSurface
  fullName: Rhino.Geometry.Brep.IsSurface
- uid: Rhino.Geometry.Brep.HasRegionTopology
  commentId: P:Rhino.Geometry.Brep.HasRegionTopology
  parent: Rhino.Geometry.Brep
  isExternal: true
  name: HasRegionTopology
  nameWithType: Brep.HasRegionTopology
  fullName: Rhino.Geometry.Brep.HasRegionTopology
- uid: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
  commentId: M:Rhino.Geometry.GeometryBase.OnSwitchToNonConst
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: OnSwitchToNonConst()
  nameWithType: GeometryBase.OnSwitchToNonConst()
  fullName: Rhino.Geometry.GeometryBase.OnSwitchToNonConst()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
    name: OnSwitchToNonConst
    nameWithType: GeometryBase.OnSwitchToNonConst
    fullName: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
    name: OnSwitchToNonConst
    nameWithType: GeometryBase.OnSwitchToNonConst
    fullName: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.DuplicateShallow
  commentId: M:Rhino.Geometry.GeometryBase.DuplicateShallow
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: DuplicateShallow()
  nameWithType: GeometryBase.DuplicateShallow()
  fullName: Rhino.Geometry.GeometryBase.DuplicateShallow()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.DuplicateShallow
    name: DuplicateShallow
    nameWithType: GeometryBase.DuplicateShallow
    fullName: Rhino.Geometry.GeometryBase.DuplicateShallow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.DuplicateShallow
    name: DuplicateShallow
    nameWithType: GeometryBase.DuplicateShallow
    fullName: Rhino.Geometry.GeometryBase.DuplicateShallow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
  commentId: M:Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: Transform(Transform)
  nameWithType: GeometryBase.Transform(Transform)
  fullName: Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
    name: Transform
    nameWithType: GeometryBase.Transform
    fullName: Rhino.Geometry.GeometryBase.Transform
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
    name: Transform
    nameWithType: GeometryBase.Transform
    fullName: Rhino.Geometry.GeometryBase.Transform
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
  commentId: M:Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: Translate(Vector3d)
  nameWithType: GeometryBase.Translate(Vector3d)
  fullName: Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
    name: Translate
    nameWithType: GeometryBase.Translate
    fullName: Rhino.Geometry.GeometryBase.Translate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
    name: Translate
    nameWithType: GeometryBase.Translate
    fullName: Rhino.Geometry.GeometryBase.Translate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
  commentId: M:Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: Translate(Double, Double, Double)
  nameWithType: GeometryBase.Translate(Double, Double, Double)
  fullName: Rhino.Geometry.GeometryBase.Translate(System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
    name: Translate
    nameWithType: GeometryBase.Translate
    fullName: Rhino.Geometry.GeometryBase.Translate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
    name: Translate
    nameWithType: GeometryBase.Translate
    fullName: Rhino.Geometry.GeometryBase.Translate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.Scale(System.Double)
  commentId: M:Rhino.Geometry.GeometryBase.Scale(System.Double)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: Scale(Double)
  nameWithType: GeometryBase.Scale(Double)
  fullName: Rhino.Geometry.GeometryBase.Scale(System.Double)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.Scale(System.Double)
    name: Scale
    nameWithType: GeometryBase.Scale
    fullName: Rhino.Geometry.GeometryBase.Scale
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.Scale(System.Double)
    name: Scale
    nameWithType: GeometryBase.Scale
    fullName: Rhino.Geometry.GeometryBase.Scale
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
  commentId: M:Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: Rotate(Double, Vector3d, Point3d)
  nameWithType: GeometryBase.Rotate(Double, Vector3d, Point3d)
  fullName: Rhino.Geometry.GeometryBase.Rotate(System.Double, Rhino.Geometry.Vector3d, Rhino.Geometry.Point3d)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
    name: Rotate
    nameWithType: GeometryBase.Rotate
    fullName: Rhino.Geometry.GeometryBase.Rotate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
    name: Rotate
    nameWithType: GeometryBase.Rotate
    fullName: Rhino.Geometry.GeometryBase.Rotate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: Rhino.Geometry.Vector3d
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.MemoryEstimate
  commentId: M:Rhino.Geometry.GeometryBase.MemoryEstimate
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: MemoryEstimate()
  nameWithType: GeometryBase.MemoryEstimate()
  fullName: Rhino.Geometry.GeometryBase.MemoryEstimate()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.MemoryEstimate
    name: MemoryEstimate
    nameWithType: GeometryBase.MemoryEstimate
    fullName: Rhino.Geometry.GeometryBase.MemoryEstimate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.MemoryEstimate
    name: MemoryEstimate
    nameWithType: GeometryBase.MemoryEstimate
    fullName: Rhino.Geometry.GeometryBase.MemoryEstimate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
  commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GetBoundingBox(Boolean)
  nameWithType: GeometryBase.GetBoundingBox(Boolean)
  fullName: Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
  commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GetBoundingBox(Transform)
  nameWithType: GeometryBase.GetBoundingBox(Transform)
  fullName: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Transform
    name: Transform
    nameWithType: Transform
    fullName: Rhino.Geometry.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
  commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GetBoundingBox(Plane)
  nameWithType: GeometryBase.GetBoundingBox(Plane)
  fullName: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
  commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GetBoundingBox(Plane, Box)
  nameWithType: GeometryBase.GetBoundingBox(Plane, Box)
  fullName: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane, Rhino.Geometry.Box)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Box
    name: Box
    nameWithType: Box
    fullName: Rhino.Geometry.Box
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
    name: GetBoundingBox
    nameWithType: GeometryBase.GetBoundingBox
    fullName: Rhino.Geometry.GeometryBase.GetBoundingBox
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.Plane
    name: Plane
    nameWithType: Plane
    fullName: Rhino.Geometry.Plane
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.Box
    name: Box
    nameWithType: Box
    fullName: Rhino.Geometry.Box
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.MakeDeformable
  commentId: M:Rhino.Geometry.GeometryBase.MakeDeformable
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: MakeDeformable()
  nameWithType: GeometryBase.MakeDeformable()
  fullName: Rhino.Geometry.GeometryBase.MakeDeformable()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.MakeDeformable
    name: MakeDeformable
    nameWithType: GeometryBase.MakeDeformable
    fullName: Rhino.Geometry.GeometryBase.MakeDeformable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.MakeDeformable
    name: MakeDeformable
    nameWithType: GeometryBase.MakeDeformable
    fullName: Rhino.Geometry.GeometryBase.MakeDeformable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.ComponentIndex
  commentId: M:Rhino.Geometry.GeometryBase.ComponentIndex
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: ComponentIndex()
  nameWithType: GeometryBase.ComponentIndex()
  fullName: Rhino.Geometry.GeometryBase.ComponentIndex()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.ComponentIndex
    name: ComponentIndex
    nameWithType: GeometryBase.ComponentIndex
    fullName: Rhino.Geometry.GeometryBase.ComponentIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.ComponentIndex
    name: ComponentIndex
    nameWithType: GeometryBase.ComponentIndex
    fullName: Rhino.Geometry.GeometryBase.ComponentIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
  commentId: M:Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: SetUserString(String, String)
  nameWithType: GeometryBase.SetUserString(String, String)
  fullName: Rhino.Geometry.GeometryBase.SetUserString(System.String, System.String)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
    name: SetUserString
    nameWithType: GeometryBase.SetUserString
    fullName: Rhino.Geometry.GeometryBase.SetUserString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
    name: SetUserString
    nameWithType: GeometryBase.SetUserString
    fullName: Rhino.Geometry.GeometryBase.SetUserString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GetUserString(System.String)
  commentId: M:Rhino.Geometry.GeometryBase.GetUserString(System.String)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GetUserString(String)
  nameWithType: GeometryBase.GetUserString(String)
  fullName: Rhino.Geometry.GeometryBase.GetUserString(System.String)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GetUserString(System.String)
    name: GetUserString
    nameWithType: GeometryBase.GetUserString
    fullName: Rhino.Geometry.GeometryBase.GetUserString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GetUserString(System.String)
    name: GetUserString
    nameWithType: GeometryBase.GetUserString
    fullName: Rhino.Geometry.GeometryBase.GetUserString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GetUserStrings
  commentId: M:Rhino.Geometry.GeometryBase.GetUserStrings
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GetUserStrings()
  nameWithType: GeometryBase.GetUserStrings()
  fullName: Rhino.Geometry.GeometryBase.GetUserStrings()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GetUserStrings
    name: GetUserStrings
    nameWithType: GeometryBase.GetUserStrings
    fullName: Rhino.Geometry.GeometryBase.GetUserStrings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GetUserStrings
    name: GetUserStrings
    nameWithType: GeometryBase.GetUserStrings
    fullName: Rhino.Geometry.GeometryBase.GetUserStrings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
  commentId: M:Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: GeometryBase.Dispose(Boolean)
  fullName: Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GeometryBase.Dispose
    fullName: Rhino.Geometry.GeometryBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
    name: Dispose
    nameWithType: GeometryBase.Dispose
    fullName: Rhino.Geometry.GeometryBase.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.NonConstOperation
  commentId: M:Rhino.Geometry.GeometryBase.NonConstOperation
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: NonConstOperation()
  nameWithType: GeometryBase.NonConstOperation()
  fullName: Rhino.Geometry.GeometryBase.NonConstOperation()
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.NonConstOperation
    name: NonConstOperation
    nameWithType: GeometryBase.NonConstOperation
    fullName: Rhino.Geometry.GeometryBase.NonConstOperation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.NonConstOperation
    name: NonConstOperation
    nameWithType: GeometryBase.NonConstOperation
    fullName: Rhino.Geometry.GeometryBase.NonConstOperation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  commentId: M:Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GeometryEquals(GeometryBase, GeometryBase)
  nameWithType: GeometryBase.GeometryEquals(GeometryBase, GeometryBase)
  fullName: Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase, Rhino.Geometry.GeometryBase)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
    name: GeometryEquals
    nameWithType: GeometryBase.GeometryEquals
    fullName: Rhino.Geometry.GeometryBase.GeometryEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
    name: GeometryEquals
    nameWithType: GeometryBase.GeometryEquals
    fullName: Rhino.Geometry.GeometryBase.GeometryEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  commentId: M:Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: GeometryReferenceEquals(GeometryBase, GeometryBase)
  nameWithType: GeometryBase.GeometryReferenceEquals(GeometryBase, GeometryBase)
  fullName: Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase, Rhino.Geometry.GeometryBase)
  spec.csharp:
  - uid: Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
    name: GeometryReferenceEquals
    nameWithType: GeometryBase.GeometryReferenceEquals
    fullName: Rhino.Geometry.GeometryBase.GeometryReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
    name: GeometryReferenceEquals
    nameWithType: GeometryBase.GeometryReferenceEquals
    fullName: Rhino.Geometry.GeometryBase.GeometryReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Rhino.Geometry.GeometryBase
    name: GeometryBase
    nameWithType: GeometryBase
    fullName: Rhino.Geometry.GeometryBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Geometry.GeometryBase.IsDocumentControlled
  commentId: P:Rhino.Geometry.GeometryBase.IsDocumentControlled
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: IsDocumentControlled
  nameWithType: GeometryBase.IsDocumentControlled
  fullName: Rhino.Geometry.GeometryBase.IsDocumentControlled
- uid: Rhino.Geometry.GeometryBase.ObjectType
  commentId: P:Rhino.Geometry.GeometryBase.ObjectType
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: ObjectType
  nameWithType: GeometryBase.ObjectType
  fullName: Rhino.Geometry.GeometryBase.ObjectType
- uid: Rhino.Geometry.GeometryBase.IsDeformable
  commentId: P:Rhino.Geometry.GeometryBase.IsDeformable
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: IsDeformable
  nameWithType: GeometryBase.IsDeformable
  fullName: Rhino.Geometry.GeometryBase.IsDeformable
- uid: Rhino.Geometry.GeometryBase.HasBrepForm
  commentId: P:Rhino.Geometry.GeometryBase.HasBrepForm
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: HasBrepForm
  nameWithType: GeometryBase.HasBrepForm
  fullName: Rhino.Geometry.GeometryBase.HasBrepForm
- uid: Rhino.Geometry.GeometryBase.UserStringCount
  commentId: P:Rhino.Geometry.GeometryBase.UserStringCount
  parent: Rhino.Geometry.GeometryBase
  isExternal: true
  name: UserStringCount
  nameWithType: GeometryBase.UserStringCount
  fullName: Rhino.Geometry.GeometryBase.UserStringCount
- uid: Rhino.Runtime.CommonObject.EnsurePrivateCopy
  commentId: M:Rhino.Runtime.CommonObject.EnsurePrivateCopy
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: EnsurePrivateCopy()
  nameWithType: CommonObject.EnsurePrivateCopy()
  fullName: Rhino.Runtime.CommonObject.EnsurePrivateCopy()
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.EnsurePrivateCopy
    name: EnsurePrivateCopy
    nameWithType: CommonObject.EnsurePrivateCopy
    fullName: Rhino.Runtime.CommonObject.EnsurePrivateCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.EnsurePrivateCopy
    name: EnsurePrivateCopy
    nameWithType: CommonObject.EnsurePrivateCopy
    fullName: Rhino.Runtime.CommonObject.EnsurePrivateCopy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
  commentId: M:Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: ConstructConstObject(Object, Int32)
  nameWithType: CommonObject.ConstructConstObject(Object, Int32)
  fullName: Rhino.Runtime.CommonObject.ConstructConstObject(System.Object, System.Int32)
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
    name: ConstructConstObject
    nameWithType: CommonObject.ConstructConstObject
    fullName: Rhino.Runtime.CommonObject.ConstructConstObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
    name: ConstructConstObject
    nameWithType: CommonObject.ConstructConstObject
    fullName: Rhino.Runtime.CommonObject.ConstructConstObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
  commentId: M:Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: IsValidWithLog(String)
  nameWithType: CommonObject.IsValidWithLog(String)
  fullName: Rhino.Runtime.CommonObject.IsValidWithLog(System.String)
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
    name: IsValidWithLog
    nameWithType: CommonObject.IsValidWithLog
    fullName: Rhino.Runtime.CommonObject.IsValidWithLog
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
    name: IsValidWithLog
    nameWithType: CommonObject.IsValidWithLog
    fullName: Rhino.Runtime.CommonObject.IsValidWithLog
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.Dispose
  commentId: M:Rhino.Runtime.CommonObject.Dispose
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: Dispose()
  nameWithType: CommonObject.Dispose()
  fullName: Rhino.Runtime.CommonObject.Dispose()
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.Dispose
    name: Dispose
    nameWithType: CommonObject.Dispose
    fullName: Rhino.Runtime.CommonObject.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.Dispose
    name: Dispose
    nameWithType: CommonObject.Dispose
    fullName: Rhino.Runtime.CommonObject.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: CommonObject.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: CommonObject.GetObjectData
    fullName: Rhino.Runtime.CommonObject.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: CommonObject.GetObjectData
    fullName: Rhino.Runtime.CommonObject.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
  commentId: M:Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: FromBase64String(Int32, Int32, String)
  nameWithType: CommonObject.FromBase64String(Int32, Int32, String)
  fullName: Rhino.Runtime.CommonObject.FromBase64String(System.Int32, System.Int32, System.String)
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
    name: FromBase64String
    nameWithType: CommonObject.FromBase64String
    fullName: Rhino.Runtime.CommonObject.FromBase64String
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
    name: FromBase64String
    nameWithType: CommonObject.FromBase64String
    fullName: Rhino.Runtime.CommonObject.FromBase64String
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.FromJSON(System.String)
  commentId: M:Rhino.Runtime.CommonObject.FromJSON(System.String)
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: FromJSON(String)
  nameWithType: CommonObject.FromJSON(String)
  fullName: Rhino.Runtime.CommonObject.FromJSON(System.String)
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.FromJSON(System.String)
    name: FromJSON
    nameWithType: CommonObject.FromJSON
    fullName: Rhino.Runtime.CommonObject.FromJSON
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.FromJSON(System.String)
    name: FromJSON
    nameWithType: CommonObject.FromJSON
    fullName: Rhino.Runtime.CommonObject.FromJSON
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: FromJSON(Dictionary<String, String>)
  nameWithType: CommonObject.FromJSON(Dictionary<String, String>)
  fullName: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: CommonObject.FromJSON(Dictionary(Of String, String))
  fullName.vb: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: FromJSON(Dictionary(Of String, String))
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
    name: FromJSON
    nameWithType: CommonObject.FromJSON
    fullName: Rhino.Runtime.CommonObject.FromJSON
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
    name: FromJSON
    nameWithType: CommonObject.FromJSON
    fullName: Rhino.Runtime.CommonObject.FromJSON
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
  commentId: M:Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: ToJSON(SerializationOptions)
  nameWithType: CommonObject.ToJSON(SerializationOptions)
  fullName: Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
  spec.csharp:
  - uid: Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
    name: ToJSON
    nameWithType: CommonObject.ToJSON
    fullName: Rhino.Runtime.CommonObject.ToJSON
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.FileIO.SerializationOptions
    name: SerializationOptions
    nameWithType: SerializationOptions
    fullName: Rhino.FileIO.SerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
    name: ToJSON
    nameWithType: CommonObject.ToJSON
    fullName: Rhino.Runtime.CommonObject.ToJSON
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Rhino.FileIO.SerializationOptions
    name: SerializationOptions
    nameWithType: SerializationOptions
    fullName: Rhino.FileIO.SerializationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Rhino.Runtime.CommonObject.PerformCorruptionTesting
  commentId: P:Rhino.Runtime.CommonObject.PerformCorruptionTesting
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: PerformCorruptionTesting
  nameWithType: CommonObject.PerformCorruptionTesting
  fullName: Rhino.Runtime.CommonObject.PerformCorruptionTesting
- uid: Rhino.Runtime.CommonObject.IsValid
  commentId: P:Rhino.Runtime.CommonObject.IsValid
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: IsValid
  nameWithType: CommonObject.IsValid
  fullName: Rhino.Runtime.CommonObject.IsValid
- uid: Rhino.Runtime.CommonObject.Disposed
  commentId: P:Rhino.Runtime.CommonObject.Disposed
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: Disposed
  nameWithType: CommonObject.Disposed
  fullName: Rhino.Runtime.CommonObject.Disposed
- uid: Rhino.Runtime.CommonObject.HasUserData
  commentId: P:Rhino.Runtime.CommonObject.HasUserData
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: HasUserData
  nameWithType: CommonObject.HasUserData
  fullName: Rhino.Runtime.CommonObject.HasUserData
- uid: Rhino.Runtime.CommonObject.UserData
  commentId: P:Rhino.Runtime.CommonObject.UserData
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: UserData
  nameWithType: CommonObject.UserData
  fullName: Rhino.Runtime.CommonObject.UserData
- uid: Rhino.Runtime.CommonObject.UserDictionary
  commentId: P:Rhino.Runtime.CommonObject.UserDictionary
  parent: Rhino.Runtime.CommonObject
  isExternal: true
  name: UserDictionary
  nameWithType: CommonObject.UserDictionary
  fullName: Rhino.Runtime.CommonObject.UserDictionary
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Rhino.Runtime
  commentId: N:Rhino.Runtime
  isExternal: true
  name: Rhino.Runtime
  nameWithType: Rhino.Runtime
  fullName: Rhino.Runtime
- uid: Rhino.Geometry
  commentId: N:Rhino.Geometry
  isExternal: true
  name: Rhino.Geometry
  nameWithType: Rhino.Geometry
  fullName: Rhino.Geometry
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: LagaRhino.Shoebox.ShoeBox*
  commentId: Overload:LagaRhino.Shoebox.ShoeBox
  name: ShoeBox
  nameWithType: Shoebox.ShoeBox
  fullName: LagaRhino.Shoebox.ShoeBox
- uid: LagaRhino.Shoebox.Length*
  commentId: Overload:LagaRhino.Shoebox.Length
  name: Length
  nameWithType: Shoebox.Length
  fullName: LagaRhino.Shoebox.Length
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: LagaRhino.Shoebox.Width*
  commentId: Overload:LagaRhino.Shoebox.Width
  name: Width
  nameWithType: Shoebox.Width
  fullName: LagaRhino.Shoebox.Width
- uid: LagaRhino.Shoebox.Heigth*
  commentId: Overload:LagaRhino.Shoebox.Heigth
  name: Heigth
  nameWithType: Shoebox.Heigth
  fullName: LagaRhino.Shoebox.Heigth
- uid: LagaRhino.Shoebox.#ctor*
  commentId: Overload:LagaRhino.Shoebox.#ctor
  name: Shoebox
  nameWithType: Shoebox.Shoebox
  fullName: LagaRhino.Shoebox.Shoebox
- uid: Rhino.Geometry.Point3d
  commentId: T:Rhino.Geometry.Point3d
  parent: Rhino.Geometry
  isExternal: true
  name: Point3d
  nameWithType: Point3d
  fullName: Rhino.Geometry.Point3d
