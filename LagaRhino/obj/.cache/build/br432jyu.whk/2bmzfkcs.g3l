<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class PointData
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class PointData
   ">
    <meta name="generator" content="docfx 2.59.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="LagaRhino.PointData">
  
  
  <h1 id="LagaRhino_PointData" data-uid="LagaRhino.PointData" class="text-break">Class PointData
  </h1>
  <div class="markdown level0 summary"><p>Point data</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">PointData</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="LagaRhino.html">LagaRhino</a></h6>
  <h6><strong>Assembly</strong>: LagaRhino.dll</h6>
  <h5 id="LagaRhino_PointData_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class PointData</code></pre>
  </div>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="LagaRhino_PointData_DeepCopy_" data-uid="LagaRhino.PointData.DeepCopy*"></a>
  <h4 id="LagaRhino_PointData_DeepCopy_System_Collections_Generic_List_Rhino_Geometry_Curve__" data-uid="LagaRhino.PointData.DeepCopy(System.Collections.Generic.List{Rhino.Geometry.Curve})">DeepCopy(List&lt;Curve&gt;)</h4>
  <div class="markdown level1 summary"><p>Crates a DeepCopy from the existing list of curves</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;Curve&gt; DeepCopy(List&lt;Curve&gt; lstToCopy)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">Rhino.Geometry.Curve</span>&gt;</td>
        <td><span class="parametername">lstToCopy</span></td>
        <td><p>The curves to perform the deep copy</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">Rhino.Geometry.Curve</span>&gt;</td>
        <td><p>List<curve></curve></p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_GroupByZ_" data-uid="LagaRhino.PointData.GroupByZ*"></a>
  <h4 id="LagaRhino_PointData_GroupByZ_Rhino_Geometry_Point3d___" data-uid="LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])">GroupByZ(Point3d[])</h4>
  <div class="markdown level1 summary"><p>Group points by Z values.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;Point3d[]&gt; GroupByZ(Point3d[] arrPts)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><span class="parametername">arrPts</span></td>
        <td><p>the array of points to group</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">Rhino.Geometry.Point3d</span>[]&gt;</td>
        <td><p>a List of group points by the Z coordinate</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_PointQuadrant_" data-uid="LagaRhino.PointData.PointQuadrant*"></a>
  <h4 id="LagaRhino_PointData_PointQuadrant_Rhino_Geometry_Point3d_" data-uid="LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)">PointQuadrant(Point3d)</h4>
  <div class="markdown level1 summary"><p>determine in which quadrant is the point. 0:++, 1:+-, 2:--, 3:-+.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static int PointQuadrant(Point3d pt)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span></td>
        <td><span class="parametername">pt</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><p>int</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_SortCoordinateZ_" data-uid="LagaRhino.PointData.SortCoordinateZ*"></a>
  <h4 id="LagaRhino_PointData_SortCoordinateZ_Rhino_Geometry_Point3d___" data-uid="LagaRhino.PointData.SortCoordinateZ(Rhino.Geometry.Point3d[])">SortCoordinateZ(Point3d[])</h4>
  <div class="markdown level1 summary"><p>Sort the Z point coordinate</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double[] SortCoordinateZ(Point3d[] arrPts)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><span class="parametername">arrPts</span></td>
        <td><p>The points to evaluate</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span>[]</td>
        <td><p>double[]</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_SortPointsByXY_" data-uid="LagaRhino.PointData.SortPointsByXY*"></a>
  <h4 id="LagaRhino_PointData_SortPointsByXY_Rhino_Geometry_Point3d___" data-uid="LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])">SortPointsByXY(Point3d[])</h4>
  <div class="markdown level1 summary"><p>Sort points by the coordinate X and then by the coordinate Y.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Point3d[] SortPointsByXY(Point3d[] arrPts)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><span class="parametername">arrPts</span></td>
        <td><p>The points to sort</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><p>point3d[]</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_SortPointsByZ_" data-uid="LagaRhino.PointData.SortPointsByZ*"></a>
  <h4 id="LagaRhino_PointData_SortPointsByZ_Rhino_Geometry_Point3d___" data-uid="LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])">SortPointsByZ(Point3d[])</h4>
  <div class="markdown level1 summary"><p>Sort points by Z coordinate</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Point3d[] SortPointsByZ(Point3d[] arrPts)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><span class="parametername">arrPts</span></td>
        <td><p>The points to sort</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><p>point3d[]</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_SortPointsQuadrant_" data-uid="LagaRhino.PointData.SortPointsQuadrant*"></a>
  <h4 id="LagaRhino_PointData_SortPointsQuadrant_Rhino_Geometry_Point3d_" data-uid="LagaRhino.PointData.SortPointsQuadrant(Rhino.Geometry.Point3d)">SortPointsQuadrant(Point3d)</h4>
  <div class="markdown level1 summary"><p>return the points sorted according to scrum Quadrants</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Point3d[] SortPointsQuadrant(Point3d pt)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span></td>
        <td><span class="parametername">pt</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span>[]</td>
        <td><p>Point3d[]</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="LagaRhino_PointData_TwoPointsInterpolation_" data-uid="LagaRhino.PointData.TwoPointsInterpolation*"></a>
  <h4 id="LagaRhino_PointData_TwoPointsInterpolation_Rhino_Geometry_Point3d_Rhino_Geometry_Point3d_System_Double_" data-uid="LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)">TwoPointsInterpolation(Point3d, Point3d, Double)</h4>
  <div class="markdown level1 summary"><p>WIP, create an interpolate point matrix between 2 points.
The method does not control exceptions for the point positions.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;Point3d&gt; TwoPointsInterpolation(Point3d ptStart, Point3d ptEnd, double span)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span></td>
        <td><span class="parametername">ptStart</span></td>
        <td><p>The start point, bottom left</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">Rhino.Geometry.Point3d</span></td>
        <td><span class="parametername">ptEnd</span></td>
        <td><p>The end point, top right</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">span</span></td>
        <td><p>the aproximate point separation</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">Rhino.Geometry.Point3d</span>&gt;</td>
        <td><p>List<point3d>()</point3d></p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
