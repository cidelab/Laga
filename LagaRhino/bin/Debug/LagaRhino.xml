<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LagaRhino</name>
    </assembly>
    <members>
        <member name="T:LagaRhino.Shoebox">
            <summary>
            Shoebox
            </summary>
        </member>
        <member name="P:LagaRhino.Shoebox.ShoeBox">
            <summary>
            Get the ShoeBox geometry.
            </summary>
        </member>
        <member name="P:LagaRhino.Shoebox.Length">
            <summary>
            Length Shoebox Property
            </summary>
        </member>
        <member name="P:LagaRhino.Shoebox.Width">
            <summary>
            Width Shoebox property
            </summary>
        </member>
        <member name="P:LagaRhino.Shoebox.Heigth">
            <summary>
            Height Shoebox property
            </summary>
        </member>
        <member name="M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double)">
            <summary>
            Shoebox by length, width and height
            </summary>
            <param name="point">Base point location</param>
            <param name="length">Length</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Shoebox with the free Z top points
            </summary>
            <param name="point">Base point location</param>
            <param name="length">Length</param>
            <param name="width">Width</param>
            <param name="eHeight">Z parameter for e point</param>
            <param name="fHeight">Z parameter for f point</param>
            <param name="gHeight">Z parameter for g point</param>
            <param name="hHeight">Z parameter for h point</param>
        </member>
        <member name="T:LagaRhino.CurveData">
            <summary>
            Curve data
            </summary>
        </member>
        <member name="M:LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)">
            <summary>
            Apply the same t parameter to a list of curves to return an array of points
            </summary>
            <param name="lstCrvs">The list of curves</param>
            <param name="t">t param</param>
            <returns></returns>
        </member>
        <member name="M:LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})">
            <summary>
            Makes a deep copy from a list of curves.
            </summary>
            <param name="lstToCopy">The list to copy</param>
            <returns>List of Curves</returns>
        </member>
        <member name="M:LagaRhino.CurveData.PlaneCorrectOnCurveByParam(Rhino.Geometry.Curve,System.Double)">
            <summary>
            Align Perpendicular frames in the Curve
            </summary>
            <param name="crv">the curve in the analysis</param>
            <param name="t">the t param on the curve</param>
            <returns></returns>
        </member>
        <member name="T:LagaRhino.LineCurveData">
            <summary>
            Line curve data
            </summary>
        </member>
        <member name="M:LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)">
            <summary>
            Transform a LineCurve to an Axis object.
            </summary>
            <param name="axis">LineCurve</param>
            <returns>LineCurve</returns>
        </member>
        <member name="T:LagaRhino.PlaneData">
            <summary>
            Plane data
            </summary>
        </member>
        <member name="T:LagaRhino.PointData">
            <summary>
            Point data
            </summary>
        </member>
        <member name="M:LagaRhino.PointData.SortPointsQuadrant(Rhino.Geometry.Point3d)">
            <summary>
            return the points sorted according to scrum Quadrants
            </summary>
            <param name="pt"></param>
            <returns>Point3d[]</returns>
        </member>
        <member name="M:LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)">
            <summary>
            determine in which quadrant is the point. 0:++, 1:+-, 2:--, 3:-+.
            </summary>
            <param name="pt"></param>
            <returns>int</returns>
        </member>
        <member name="M:LagaRhino.PointData.DeepCopy(System.Collections.Generic.List{Rhino.Geometry.Curve})">
            <summary>
            Crates a DeepCopy from the existing list of curves
            </summary>
            <param name="lstToCopy">The curves to perform the deep copy</param>
            <returns>List<Curve></Curve></returns>
        </member>
        <member name="M:LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])">
            <summary>
            Sort points by Z coordinate
            </summary>
            <param name="arrPts">The points to sort</param>
            <returns>point3d[]</returns>
        </member>
        <member name="M:LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])">
            <summary>
            Group points by Z values.
            </summary>
            <param name="arrPts">the array of points to group</param>
            <returns>a List of group points by the Z coordinate</returns>
        </member>
        <member name="M:LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])">
            <summary>
            Sort points by the coordinate X and then by the coordinate Y.
            </summary>
            <param name="arrPts">The points to sort</param>
            <returns>point3d[]</returns>
        </member>
        <member name="M:LagaRhino.PointData.SortCoordinateZ(Rhino.Geometry.Point3d[])">
            <summary>
            Sort the Z point coordinate
            </summary>
            <param name="arrPts">The points to evaluate</param>
            <returns>double[]</returns>
        </member>
        <member name="M:LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)">
            <summary>
            WIP, create an interpolate point matrix between 2 points.
            The method does not control exceptions for the point positions.
            </summary>
            <param name="ptStart">The start point, bottom left</param>
            <param name="ptEnd">The end point, top right</param>
            <param name="span">the aproximate point separation</param>
            <returns>List<Point3d>()</Point3d></returns>
        </member>
        <member name="T:LagaRhino.SurfaceData">
            <summary>
            Surface data
            </summary>
        </member>
        <member name="M:LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve,System.Double)">
            <summary>
            Build a vertical planar surface from a LineCurve axis.
            </summary>
            <param name="axis">the axis</param>
            <param name="height">the height of the surface</param>
            <returns>Planar Surface</returns>
        </member>
    </members>
</doc>
