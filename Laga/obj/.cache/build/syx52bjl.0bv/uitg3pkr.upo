<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Struct Vectord
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Struct Vectord
   ">
    <meta name="generator" content="docfx 2.59.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Laga.Geometry.Vectord">
  
  
  <h1 id="Laga_Geometry_Vectord" data-uid="Laga.Geometry.Vectord" class="text-break">Struct Vectord
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Vector class and operations</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.ValueType.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.ValueType.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="Laga.Geometry.html">Laga.Geometry</a></h6>
  <h6><strong>Assembly</strong>: Laga.dll</h6>
  <h5 id="Laga_Geometry_Vectord_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public struct Vectord</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="Laga_Geometry_Vectord__ctor_" data-uid="Laga.Geometry.Vectord.#ctor*"></a>
  <h4 id="Laga_Geometry_Vectord__ctor_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.#ctor(Laga.Geometry.Vectord)">Vectord(Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Creates the vector zero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vectord(Vectord vector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord__ctor_" data-uid="Laga.Geometry.Vectord.#ctor*"></a>
  <h4 id="Laga_Geometry_Vectord__ctor_System_Double_System_Double_" data-uid="Laga.Geometry.Vectord.#ctor(System.Double,System.Double)">Vectord(Double, Double)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Create a 2D vector in XY plane</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vectord(double X, double Y)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">X</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">X coordinate</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Y</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Y coordinate</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord__ctor_" data-uid="Laga.Geometry.Vectord.#ctor*"></a>
  <h4 id="Laga_Geometry_Vectord__ctor_System_Double_System_Double_System_Double_" data-uid="Laga.Geometry.Vectord.#ctor(System.Double,System.Double,System.Double)">Vectord(Double, Double, Double)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Create a 3D Vector</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vectord(double X, double Y, double Z)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">X</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">X coordinate</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Y</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Y coordinate</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">Z</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Z coordinate</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="Laga_Geometry_Vectord_X_" data-uid="Laga.Geometry.Vectord.X*"></a>
  <h4 id="Laga_Geometry_Vectord_X" data-uid="Laga.Geometry.Vectord.X">X</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">X coordinate</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double X { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_Y_" data-uid="Laga.Geometry.Vectord.Y*"></a>
  <h4 id="Laga_Geometry_Vectord_Y" data-uid="Laga.Geometry.Vectord.Y">Y</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Y Coordinate</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double Y { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_Z_" data-uid="Laga.Geometry.Vectord.Z*"></a>
  <h4 id="Laga_Geometry_Vectord_Z" data-uid="Laga.Geometry.Vectord.Z">Z</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Z Coordinate</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double Z { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="Laga_Geometry_Vectord_Angle_" data-uid="Laga.Geometry.Vectord.Angle*"></a>
  <h4 id="Laga_Geometry_Vectord_Angle_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.Angle(Laga.Geometry.Vectord,Laga.Geometry.Vectord)">Angle(Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Angle</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double Angle(Vectord vectorA, Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">double</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_Angle_" data-uid="Laga.Geometry.Vectord.Angle*"></a>
  <h4 id="Laga_Geometry_Vectord_Angle_Laga_Geometry_Vectord_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.Angle(Laga.Geometry.Vectord,Laga.Geometry.Vectord,Laga.Geometry.Vectord)">Angle(Vectord, Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">ABC angle between PI and -PI</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double Angle(Vectord vectorA, Vectord vectorB, Vectord vectorC)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorC</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector C</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">double</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_ComponentOrthogonalTo_" data-uid="Laga.Geometry.Vectord.ComponentOrthogonalTo*"></a>
  <h4 id="Laga_Geometry_Vectord_ComponentOrthogonalTo_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.ComponentOrthogonalTo(Laga.Geometry.Vectord)">ComponentOrthogonalTo(Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Creates the orthogonal component to vector base B</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vectord ComponentOrthogonalTo(Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector base</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_ComponentProjectTo_" data-uid="Laga.Geometry.Vectord.ComponentProjectTo*"></a>
  <h4 id="Laga_Geometry_Vectord_ComponentProjectTo_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.ComponentProjectTo(Laga.Geometry.Vectord)">ComponentProjectTo(Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Project to vector base B</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Vectord ComponentProjectTo(Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector base</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_CrossProduct_" data-uid="Laga.Geometry.Vectord.CrossProduct*"></a>
  <h4 id="Laga_Geometry_Vectord_CrossProduct_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.CrossProduct(Laga.Geometry.Vectord,Laga.Geometry.Vectord)">CrossProduct(Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Cross Product</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vectord CrossProduct(Vectord vectorA, Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_CrossProductLength_" data-uid="Laga.Geometry.Vectord.CrossProductLength*"></a>
  <h4 id="Laga_Geometry_Vectord_CrossProductLength_Laga_Geometry_Vectord_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.CrossProductLength(Laga.Geometry.Vectord,Laga.Geometry.Vectord,Laga.Geometry.Vectord)">CrossProductLength(Vectord, Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Return the cross product length
| B x BC | = |AB| * |BC| * Sin(theta)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double CrossProductLength(Vectord vectorA, Vectord vectorB, Vectord vectorC)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorC</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector C</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Z coordinate of the cross product</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_DistanceTo_" data-uid="Laga.Geometry.Vectord.DistanceTo*"></a>
  <h4 id="Laga_Geometry_Vectord_DistanceTo_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.DistanceTo(Laga.Geometry.Vectord)">DistanceTo(Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Distance</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double DistanceTo(Vectord vector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">vector to test</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">double</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_DotProduct_" data-uid="Laga.Geometry.Vectord.DotProduct*"></a>
  <h4 id="Laga_Geometry_Vectord_DotProduct_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.DotProduct(Laga.Geometry.Vectord,Laga.Geometry.Vectord)">DotProduct(Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Dot product</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double DotProduct(Vectord vectorA, Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">double</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_DotProduct_" data-uid="Laga.Geometry.Vectord.DotProduct*"></a>
  <h4 id="Laga_Geometry_Vectord_DotProduct_Laga_Geometry_Vectord_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.DotProduct(Laga.Geometry.Vectord,Laga.Geometry.Vectord,Laga.Geometry.Vectord)">DotProduct(Vectord, Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Dot Product AB · BC</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static double DotProduct(Vectord vectorA, Vectord vectorB, Vectord vectorC)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorC</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_EqualTo_" data-uid="Laga.Geometry.Vectord.EqualTo*"></a>
  <h4 id="Laga_Geometry_Vectord_EqualTo_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.EqualTo(Laga.Geometry.Vectord)">EqualTo(Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">test if 2 vectors are equal</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool EqualTo(Vectord vector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector to test</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">bool</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_IsOrthogonalTo_" data-uid="Laga.Geometry.Vectord.IsOrthogonalTo*"></a>
  <h4 id="Laga_Geometry_Vectord_IsOrthogonalTo_Laga_Geometry_Vectord_System_Double_" data-uid="Laga.Geometry.Vectord.IsOrthogonalTo(Laga.Geometry.Vectord,System.Double)">IsOrthogonalTo(Vectord, Double)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Test if vector is orthogonal</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsOrthogonalTo(Vectord vector, double tolerance = 0.001)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector to test</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">tolerance</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Default tolerance: 1e-3</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">bool</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_IsParallelTo_" data-uid="Laga.Geometry.Vectord.IsParallelTo*"></a>
  <h4 id="Laga_Geometry_Vectord_IsParallelTo_Laga_Geometry_Vectord_System_Double_" data-uid="Laga.Geometry.Vectord.IsParallelTo(Laga.Geometry.Vectord,System.Double)">IsParallelTo(Vectord, Double)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Test if 2 vectors are parallel</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsParallelTo(Vectord vector, double tolerance = 0.001)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">The vector to test</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">tolerance</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Default tolerance: 1e-3</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">bool</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_IsVectorCero_" data-uid="Laga.Geometry.Vectord.IsVectorCero*"></a>
  <h4 id="Laga_Geometry_Vectord_IsVectorCero_System_Double_" data-uid="Laga.Geometry.Vectord.IsVectorCero(System.Double)">IsVectorCero(Double)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Test if is vector zero</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public bool IsVectorCero(double tolerance = 0.001)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">tolerance</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Default tolerance: 1e-3</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">bool</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_Normalize_" data-uid="Laga.Geometry.Vectord.Normalize*"></a>
  <h4 id="Laga_Geometry_Vectord_Normalize" data-uid="Laga.Geometry.Vectord.Normalize">Normalize()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Normalize the vector to 1</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public void Normalize()</code></pre>
  </div>
  
  
  <a id="Laga_Geometry_Vectord_OrthogonalTo_" data-uid="Laga.Geometry.Vectord.OrthogonalTo*"></a>
  <h4 id="Laga_Geometry_Vectord_OrthogonalTo_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.OrthogonalTo(Laga.Geometry.Vectord)">OrthogonalTo(Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Creates a orthogonal vector</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vectord OrthogonalTo(Vectord vector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_ToString_" data-uid="Laga.Geometry.Vectord.ToString*"></a>
  <h4 id="Laga_Geometry_Vectord_ToString" data-uid="Laga.Geometry.Vectord.ToString">ToString()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Print vector data</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public override string ToString()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">string</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="overrides">Overrides</h5>
  <div><span class="xref">System.ValueType.ToString()</span></div>
  <h3 id="operators">Operators
  </h3>
  
  
  <a id="Laga_Geometry_Vectord_op_Addition_" data-uid="Laga.Geometry.Vectord.op_Addition*"></a>
  <h4 id="Laga_Geometry_Vectord_op_Addition_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.op_Addition(Laga.Geometry.Vectord,Laga.Geometry.Vectord)">Addition(Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Addition</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vectord operator +(Vectord vectorA, Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_op_Multiply_" data-uid="Laga.Geometry.Vectord.op_Multiply*"></a>
  <h4 id="Laga_Geometry_Vectord_op_Multiply_Laga_Geometry_Vectord_System_Double_" data-uid="Laga.Geometry.Vectord.op_Multiply(Laga.Geometry.Vectord,System.Double)">Multiply(Vectord, Double)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Scale multuplication</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vectord operator *(Vectord vector, double factor)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vector</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector to scale</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><span class="parametername">factor</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">factor</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_Geometry_Vectord_op_Subtraction_" data-uid="Laga.Geometry.Vectord.op_Subtraction*"></a>
  <h4 id="Laga_Geometry_Vectord_op_Subtraction_Laga_Geometry_Vectord_Laga_Geometry_Vectord_" data-uid="Laga.Geometry.Vectord.op_Subtraction(Laga.Geometry.Vectord,Laga.Geometry.Vectord)">Subtraction(Vectord, Vectord)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="2">Substraction</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Vectord operator -(Vectord vectorA, Vectord vectorB)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorA</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector A</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><span class="parametername">vectorB</span></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector B</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="Laga.Geometry.Vectord.html">Vectord</a></td>
        <td><p sourcefile="api/Laga.Geometry.Vectord.yml" sourcestartlinenumber="1">Vector</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
