<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class IOTextData
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class IOTextData
   ">
    <meta name="generator" content="docfx 2.59.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Laga.IO.IOTextData">
  
  
  <h1 id="Laga_IO_IOTextData" data-uid="Laga.IO.IOTextData" class="text-break">Class IOTextData
  </h1>
  <div class="markdown level0 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Read and process text from a txt file</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">IOTextData</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="Laga.IO.html">Laga.IO</a></h6>
  <h6><strong>Assembly</strong>: Laga.dll</h6>
  <h5 id="Laga_IO_IOTextData_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class IOTextData</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="Laga_IO_IOTextData__ctor_" data-uid="Laga.IO.IOTextData.#ctor*"></a>
  <h4 id="Laga_IO_IOTextData__ctor_System_String_" data-uid="Laga.IO.IOTextData.#ctor(System.String)">IOTextData(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Construct the class to operate txt files.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public IOTextData(string TextFileName)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">TextFileName</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The text file name</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="Laga_IO_IOTextData_DataText_" data-uid="Laga.IO.IOTextData.DataText*"></a>
  <h4 id="Laga_IO_IOTextData_DataText" data-uid="Laga.IO.IOTextData.DataText">DataText</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Get the Data Text as a string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string DataText { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_DataTextLine_" data-uid="Laga.IO.IOTextData.DataTextLine*"></a>
  <h4 id="Laga_IO_IOTextData_DataTextLine" data-uid="Laga.IO.IOTextData.DataTextLine">DataTextLine</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Get the Data Text as a list of strings</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public List&lt;string&gt; DataTextLine { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_SourceEncoding_" data-uid="Laga.IO.IOTextData.SourceEncoding*"></a>
  <h4 id="Laga_IO_IOTextData_SourceEncoding" data-uid="Laga.IO.IOTextData.SourceEncoding">SourceEncoding</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Get the Encoding Source from the Text File</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public Encoding SourceEncoding { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Text.Encoding</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="Laga_IO_IOTextData_ConvertFileEncoding_" data-uid="Laga.IO.IOTextData.ConvertFileEncoding*"></a>
  <h4 id="Laga_IO_IOTextData_ConvertFileEncoding_System_String_Laga_IO_IOTextData_EncodingType_" data-uid="Laga.IO.IOTextData.ConvertFileEncoding(System.String,Laga.IO.IOTextData.EncodingType)">ConvertFileEncoding(String, IOTextData.EncodingType)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Convert a file from one Encoding type to another encoding type</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string ConvertFileEncoding(string FileName, IOTextData.EncodingType encodingType)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">FileName</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">the full file name to convert</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="Laga.IO.IOTextData.EncodingType.html">IOTextData.EncodingType</a></td>
        <td><span class="parametername">encodingType</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">the Encoding type</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_CountWordsTopN_" data-uid="Laga.IO.IOTextData.CountWordsTopN*"></a>
  <h4 id="Laga_IO_IOTextData_CountWordsTopN_System_String_System_Int32_" data-uid="Laga.IO.IOTextData.CountWordsTopN(System.String,System.Int32)">CountWordsTopN(String, Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Return the n most frequently occuring words in the string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Dictionary&lt;string, int&gt; CountWordsTopN(string strMessage, int topN)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">strMessage</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">the string</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">topN</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">Top N Numbers to return</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.Dictionary</span>&lt;<span class="xref">System.String</span>, <span class="xref">System.Int32</span>&gt;</td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">Dictionary</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_CreateFile_" data-uid="Laga.IO.IOTextData.CreateFile*"></a>
  <h4 id="Laga_IO_IOTextData_CreateFile_System_Collections_Generic_List_System_String__System_String_System_String_" data-uid="Laga.IO.IOTextData.CreateFile(System.Collections.Generic.List{System.String},System.String,System.String)">CreateFile(List&lt;String&gt;, String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Creates a text file based on a list of strings</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool CreateFile(List&lt;string&gt; strList, string directory, string fileName)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td><span class="parametername">strList</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">the content for the file</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">directory</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">the path to the directory to save the file</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">fileName</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">name of the txt file</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">bool</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_GetWords_" data-uid="Laga.IO.IOTextData.GetWords*"></a>
  <h4 id="Laga_IO_IOTextData_GetWords_System_String_" data-uid="Laga.IO.IOTextData.GetWords(System.String)">GetWords(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Get The words from a string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string[] GetWords(string strMessage)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">strMessage</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The string to operate</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">string[]</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_RemoveByLength_" data-uid="Laga.IO.IOTextData.RemoveByLength*"></a>
  <h4 id="Laga_IO_IOTextData_RemoveByLength_System_String_System_Int32_System_String_" data-uid="Laga.IO.IOTextData.RemoveByLength(System.String,System.Int32,System.String)">RemoveByLength(String, Int32, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Remove the words according to a specific length from a string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string RemoveByLength(string strMessage, int Length, string separator)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">strMessage</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The string to make the operation</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Length</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The minimum word length in the string</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">separator</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">A string to specify how combine the new string chain. eg: &quot; &quot;</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">string</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_RemoveByLength_" data-uid="Laga.IO.IOTextData.RemoveByLength*"></a>
  <h4 id="Laga_IO_IOTextData_RemoveByLength_System_String___System_Int32_" data-uid="Laga.IO.IOTextData.RemoveByLength(System.String[],System.Int32)">RemoveByLength(String[], Int32)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Remove strings according to a specific Length</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string[] RemoveByLength(string[] strMessages, int Length)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><span class="parametername">strMessages</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">the Array of strings to make the operations</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><span class="parametername">Length</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The minimum string length</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span>[]</td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">string[]</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_RemoveDiacritics_" data-uid="Laga.IO.IOTextData.RemoveDiacritics*"></a>
  <h4 id="Laga_IO_IOTextData_RemoveDiacritics_System_String_" data-uid="Laga.IO.IOTextData.RemoveDiacritics(System.String)">RemoveDiacritics(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Remove Diacritcs from string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string RemoveDiacritics(string strMessage)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">strMessage</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The string to clean</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">string</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="Laga_IO_IOTextData_RemoveNumbers_" data-uid="Laga.IO.IOTextData.RemoveNumbers*"></a>
  <h4 id="Laga_IO_IOTextData_RemoveNumbers_System_String_" data-uid="Laga.IO.IOTextData.RemoveNumbers(System.String)">RemoveNumbers(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="2">Remove the digits from a string</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string RemoveNumbers(string strMessage)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">strMessage</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">The string to remove the digits</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="api/Laga.IO.IOTextData.yml" sourcestartlinenumber="1">string</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
