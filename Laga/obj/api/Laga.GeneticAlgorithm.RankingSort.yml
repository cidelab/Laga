### YamlMime:ManagedReference
items:
- uid: Laga.GeneticAlgorithm.RankingSort
  commentId: T:Laga.GeneticAlgorithm.RankingSort
  id: RankingSort
  parent: Laga.GeneticAlgorithm
  children:
  - Laga.GeneticAlgorithm.RankingSort.#ctor
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][],System.Int32[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][],System.Single[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][],System.Int32[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][],System.Single[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][],System.Int32[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][],System.Single[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][],System.Int32[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][],System.Single[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][],System.Int32[],System.Boolean)
  - Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][],System.Single[],System.Boolean)
  langs:
  - csharp
  - vb
  name: RankingSort
  nameWithType: RankingSort
  fullName: Laga.GeneticAlgorithm.RankingSort
  type: Class
  source:
    id: RankingSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 9
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\nTo sort chromosomes in populations according to fitness evaluation.\n"
  example: []
  syntax:
    content: public class RankingSort
    content.vb: Public Class RankingSort
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Laga.GeneticAlgorithm.RankingSort.#ctor
  commentId: M:Laga.GeneticAlgorithm.RankingSort.#ctor
  id: '#ctor'
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: RankingSort()
  nameWithType: RankingSort.RankingSort()
  fullName: Laga.GeneticAlgorithm.RankingSort.RankingSort()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 24
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\nconstructor\n"
  example: []
  syntax:
    content: public RankingSort()
    content.vb: Public Sub New
  overload: Laga.GeneticAlgorithm.RankingSort.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][],System.Single[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][],System.Single[],System.Boolean)
  id: BidirectionalBubbleSort(System.Object[][],System.Single[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Object[][], Single[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Object[][], Single[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][], System.Single[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 35
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\nSort the individuals in the population by fitness value.\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(object[][] population, float[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Object[][]
      description: population to sort
    - id: arrResults
      type: System.Single[]
      description: 'Array of fitness in the population. Only two flavors are supported: int[] and float[]'
    - id: minmax
      type: System.Boolean
      description: if is true the sort is by min to max, else max to min
    content.vb: Public Sub BidirectionalBubbleSort(population As Object()(), arrResults As Single(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Object()(), Single(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object()(), System.Single(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Object()(), Single(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][],System.Int32[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][],System.Int32[],System.Boolean)
  id: BidirectionalBubbleSort(System.Object[][],System.Int32[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Object[][], Int32[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Object[][], Int32[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object[][], System.Int32[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 88
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(object[][] population, int[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Object[][]
      description: ''
    - id: arrResults
      type: System.Int32[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Object()(), arrResults As Integer(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Object()(), Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Object()(), System.Int32(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Object()(), Int32(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][],System.Single[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][],System.Single[],System.Boolean)
  id: BidirectionalBubbleSort(System.Double[][],System.Single[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Double[][], Single[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Double[][], Single[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][], System.Single[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 141
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(double[][] population, float[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Double[][]
      description: ''
    - id: arrResults
      type: System.Single[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Double()(), arrResults As Single(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Double()(), Single(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double()(), System.Single(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Double()(), Single(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][],System.Int32[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][],System.Int32[],System.Boolean)
  id: BidirectionalBubbleSort(System.Double[][],System.Int32[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Double[][], Int32[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Double[][], Int32[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double[][], System.Int32[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 195
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(double[][] population, int[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Double[][]
      description: ''
    - id: arrResults
      type: System.Int32[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Double()(), arrResults As Integer(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Double()(), Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Double()(), System.Int32(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Double()(), Int32(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][],System.Single[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][],System.Single[],System.Boolean)
  id: BidirectionalBubbleSort(System.Single[][],System.Single[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Single[][], Single[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Single[][], Single[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][], System.Single[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 250
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(float[][] population, float[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Single[][]
      description: ''
    - id: arrResults
      type: System.Single[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Single()(), arrResults As Single(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Single()(), Single(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single()(), System.Single(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Single()(), Single(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][],System.Int32[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][],System.Int32[],System.Boolean)
  id: BidirectionalBubbleSort(System.Single[][],System.Int32[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Single[][], Int32[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Single[][], Int32[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single[][], System.Int32[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 303
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(float[][] population, int[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Single[][]
      description: ''
    - id: arrResults
      type: System.Int32[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Single()(), arrResults As Integer(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Single()(), Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Single()(), System.Int32(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Single()(), Int32(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][],System.Single[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][],System.Single[],System.Boolean)
  id: BidirectionalBubbleSort(System.Int32[][],System.Single[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Int32[][], Single[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Int32[][], Single[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][], System.Single[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 356
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(int[][] population, float[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Int32[][]
      description: ''
    - id: arrResults
      type: System.Single[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Integer()(), arrResults As Single(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Int32()(), Single(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32()(), System.Single(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Int32()(), Single(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][],System.Int32[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][],System.Int32[],System.Boolean)
  id: BidirectionalBubbleSort(System.Int32[][],System.Int32[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Int32[][], Int32[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Int32[][], Int32[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32[][], System.Int32[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 409
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(int[][] population, int[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Int32[][]
      description: ''
    - id: arrResults
      type: System.Int32[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Integer()(), arrResults As Integer(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Int32()(), Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Int32()(), System.Int32(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Int32()(), Int32(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][],System.Single[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][],System.Single[],System.Boolean)
  id: BidirectionalBubbleSort(System.Char[][],System.Single[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Char[][], Single[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Char[][], Single[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][], System.Single[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 462
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\n\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(char[][] population, float[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Char[][]
      description: ''
    - id: arrResults
      type: System.Single[]
      description: ''
    - id: minmax
      type: System.Boolean
      description: ''
    content.vb: Public Sub BidirectionalBubbleSort(population As Char()(), arrResults As Single(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Char()(), Single(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char()(), System.Single(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Char()(), Single(), Boolean)
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][],System.Int32[],System.Boolean)
  commentId: M:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][],System.Int32[],System.Boolean)
  id: BidirectionalBubbleSort(System.Char[][],System.Int32[],System.Boolean)
  parent: Laga.GeneticAlgorithm.RankingSort
  langs:
  - csharp
  - vb
  name: BidirectionalBubbleSort(Char[][], Int32[], Boolean)
  nameWithType: RankingSort.BidirectionalBubbleSort(Char[][], Int32[], Boolean)
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char[][], System.Int32[], System.Boolean)
  type: Method
  source:
    id: BidirectionalBubbleSort
    path: C:\Users\delab\Documents\GitHub\Laga\Laga\RankingSort.cs
    startLine: 515
  assemblies:
  - Laga
  namespace: Laga.GeneticAlgorithm
  summary: "\nAn optimised BidirectionalBubbleSort method. Sort the individuals in the population by fitness value.\n"
  example: []
  syntax:
    content: public void BidirectionalBubbleSort(char[][] population, int[] arrResults, bool minmax)
    parameters:
    - id: population
      type: System.Char[][]
      description: population to sort
    - id: arrResults
      type: System.Int32[]
      description: 'Array of fitness in the population. Only 2 flavors are supported: int[] and float[]'
    - id: minmax
      type: System.Boolean
      description: if is true the sort is by min to max, else max to min
    content.vb: Public Sub BidirectionalBubbleSort(population As Char()(), arrResults As Integer(), minmax As Boolean)
  overload: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  nameWithType.vb: RankingSort.BidirectionalBubbleSort(Char()(), Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort(System.Char()(), System.Int32(), System.Boolean)
  name.vb: BidirectionalBubbleSort(Char()(), Int32(), Boolean)
references:
- uid: Laga.GeneticAlgorithm
  commentId: N:Laga.GeneticAlgorithm
  name: Laga.GeneticAlgorithm
  nameWithType: Laga.GeneticAlgorithm
  fullName: Laga.GeneticAlgorithm
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Laga.GeneticAlgorithm.RankingSort.#ctor*
  commentId: Overload:Laga.GeneticAlgorithm.RankingSort.#ctor
  name: RankingSort
  nameWithType: RankingSort.RankingSort
  fullName: Laga.GeneticAlgorithm.RankingSort.RankingSort
- uid: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort*
  commentId: Overload:Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort
  name: BidirectionalBubbleSort
  nameWithType: RankingSort.BidirectionalBubbleSort
  fullName: Laga.GeneticAlgorithm.RankingSort.BidirectionalBubbleSort
- uid: System.Object[][]
  isExternal: true
  name: Object[][]
  nameWithType: Object[][]
  fullName: System.Object[][]
  nameWithType.vb: Object()()
  fullName.vb: System.Object()()
  name.vb: Object()()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Double[][]
  isExternal: true
  name: Double[][]
  nameWithType: Double[][]
  fullName: System.Double[][]
  nameWithType.vb: Double()()
  fullName.vb: System.Double()()
  name.vb: Double()()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[][]
  isExternal: true
  name: Single[][]
  nameWithType: Single[][]
  fullName: System.Single[][]
  nameWithType.vb: Single()()
  fullName.vb: System.Single()()
  name.vb: Single()()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[][]
  isExternal: true
  name: Int32[][]
  nameWithType: Int32[][]
  fullName: System.Int32[][]
  nameWithType.vb: Int32()()
  fullName.vb: System.Int32()()
  name.vb: Int32()()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Char[][]
  isExternal: true
  name: Char[][]
  nameWithType: Char[][]
  fullName: System.Char[][]
  nameWithType.vb: Char()()
  fullName.vb: System.Char()()
  name.vb: Char()()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
