### YamlMime:ManagedReference
items:
- uid: LagaRhino.CurveData
  commentId: T:LagaRhino.CurveData
  id: CurveData
  parent: LagaRhino
  children:
  - LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
  - LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
  - LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
  langs:
  - csharp
  - vb
  name: CurveData
  nameWithType: CurveData
  fullName: LagaRhino.CurveData
  type: Class
  source:
    id: CurveData
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
    startLine: 12
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nSimple Manipulations on Rhino Curves\n"
  example: []
  syntax:
    content: public class CurveData
    content.vb: Public Class CurveData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
  commentId: M:LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
  id: GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
  parent: LagaRhino.CurveData
  langs:
  - csharp
  - vb
  name: GetPointFromCurves(List<Curve>, Double)
  nameWithType: CurveData.GetPointFromCurves(List<Curve>, Double)
  fullName: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List<Rhino.Geometry.Curve>, System.Double)
  type: Method
  source:
    id: GetPointFromCurves
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
    startLine: 22
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nApply the same t parameter to a list of curves to return an array of points\n"
  example: []
  syntax:
    content: public static Point3d[] GetPointFromCurves(List<Curve> lstCrvs, double t)
    parameters:
    - id: lstCrvs
      type: System.Collections.Generic.List{Rhino.Geometry.Curve}
      description: The list of curves
    - id: t
      type: System.Double
      description: t param
    return:
      type: Rhino.Geometry.Point3d[]
      description: Point3d[]
    content.vb: Public Shared Function GetPointFromCurves(lstCrvs As List(Of Curve), t As Double) As Point3d()
  overload: LagaRhino.CurveData.GetPointFromCurves*
  nameWithType.vb: CurveData.GetPointFromCurves(List(Of Curve), Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List(Of Rhino.Geometry.Curve), System.Double)
  name.vb: GetPointFromCurves(List(Of Curve), Double)
- uid: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
  commentId: M:LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
  id: DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
  parent: LagaRhino.CurveData
  langs:
  - csharp
  - vb
  name: DeepCopyListCurve(List<Curve>)
  nameWithType: CurveData.DeepCopyListCurve(List<Curve>)
  fullName: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List<Rhino.Geometry.Curve>)
  type: Method
  source:
    id: DeepCopyListCurve
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
    startLine: 42
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  syntax:
    content: public static List<Curve> DeepCopyListCurve(List<Curve> lstToCopy)
    parameters:
    - id: lstToCopy
      type: System.Collections.Generic.List{Rhino.Geometry.Curve}
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Curve}
    content.vb: Public Shared Function DeepCopyListCurve(lstToCopy As List(Of Curve)) As List(Of Curve)
  overload: LagaRhino.CurveData.DeepCopyListCurve*
  nameWithType.vb: CurveData.DeepCopyListCurve(List(Of Curve))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List(Of Rhino.Geometry.Curve))
  name.vb: DeepCopyListCurve(List(Of Curve))
- uid: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
  commentId: M:LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
  id: CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
  parent: LagaRhino.CurveData
  langs:
  - csharp
  - vb
  name: CorrectPlaneOnCurveByParam(Curve, Double)
  nameWithType: CurveData.CorrectPlaneOnCurveByParam(Curve, Double)
  fullName: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve, System.Double)
  type: Method
  source:
    id: CorrectPlaneOnCurveByParam
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
    startLine: 60
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nAlign Perpendicular frames in the Curve\n"
  example: []
  syntax:
    content: public static Plane CorrectPlaneOnCurveByParam(Curve crv, double t)
    parameters:
    - id: crv
      type: Rhino.Geometry.Curve
      description: the curve in the analysis
    - id: t
      type: System.Double
      description: the t param on the curve
    return:
      type: Rhino.Geometry.Plane
      description: ''
    content.vb: Public Shared Function CorrectPlaneOnCurveByParam(crv As Curve, t As Double) As Plane
  overload: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: LagaRhino
  commentId: N:LagaRhino
  name: LagaRhino
  nameWithType: LagaRhino
  fullName: LagaRhino
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LagaRhino.CurveData.GetPointFromCurves*
  commentId: Overload:LagaRhino.CurveData.GetPointFromCurves
  name: GetPointFromCurves
  nameWithType: CurveData.GetPointFromCurves
  fullName: LagaRhino.CurveData.GetPointFromCurves
- uid: System.Collections.Generic.List{Rhino.Geometry.Curve}
  commentId: T:System.Collections.Generic.List{Rhino.Geometry.Curve}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Curve>
  nameWithType: List<Curve>
  fullName: System.Collections.Generic.List<Rhino.Geometry.Curve>
  nameWithType.vb: List(Of Curve)
  fullName.vb: System.Collections.Generic.List(Of Rhino.Geometry.Curve)
  name.vb: List(Of Curve)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Curve
    name: Curve
    nameWithType: Curve
    fullName: Rhino.Geometry.Curve
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Rhino.Geometry.Point3d[]
  isExternal: true
  name: Point3d[]
  nameWithType: Point3d[]
  fullName: Rhino.Geometry.Point3d[]
  nameWithType.vb: Point3d()
  fullName.vb: Rhino.Geometry.Point3d()
  name.vb: Point3d()
  spec.csharp:
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: LagaRhino.CurveData.DeepCopyListCurve*
  commentId: Overload:LagaRhino.CurveData.DeepCopyListCurve
  name: DeepCopyListCurve
  nameWithType: CurveData.DeepCopyListCurve
  fullName: LagaRhino.CurveData.DeepCopyListCurve
- uid: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
  commentId: Overload:LagaRhino.CurveData.CorrectPlaneOnCurveByParam
  name: CorrectPlaneOnCurveByParam
  nameWithType: CurveData.CorrectPlaneOnCurveByParam
  fullName: LagaRhino.CurveData.CorrectPlaneOnCurveByParam
- uid: Rhino.Geometry.Curve
  commentId: T:Rhino.Geometry.Curve
  parent: Rhino.Geometry
  isExternal: true
  name: Curve
  nameWithType: Curve
  fullName: Rhino.Geometry.Curve
- uid: Rhino.Geometry.Plane
  commentId: T:Rhino.Geometry.Plane
  parent: Rhino.Geometry
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: Rhino.Geometry
  commentId: N:Rhino.Geometry
  isExternal: true
  name: Rhino.Geometry
  nameWithType: Rhino.Geometry
  fullName: Rhino.Geometry
