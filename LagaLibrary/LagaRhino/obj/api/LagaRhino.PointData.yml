### YamlMime:ManagedReference
items:
- uid: LagaRhino.PointData
  commentId: T:LagaRhino.PointData
  id: PointData
  parent: LagaRhino
  children:
  - LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
  - LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
  - LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
  - LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
  - LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
  - LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
  - LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  - LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
  langs:
  - csharp
  - vb
  name: PointData
  nameWithType: PointData
  fullName: LagaRhino.PointData
  type: Class
  source:
    id: PointData
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 11
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  syntax:
    content: public class PointData
    content.vb: Public Class PointData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
  commentId: M:LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
  id: MirrorPointQuadrant(Rhino.Geometry.Point3d)
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: MirrorPointQuadrant(Point3d)
  nameWithType: PointData.MirrorPointQuadrant(Point3d)
  fullName: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
  type: Method
  source:
    id: MirrorPointQuadrant
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 18
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nMirror a point by the 4 quadrants\n"
  example: []
  syntax:
    content: public static Point3d[] MirrorPointQuadrant(Point3d point)
    parameters:
    - id: point
      type: Rhino.Geometry.Point3d
      description: point to mirror
    return:
      type: Rhino.Geometry.Point3d[]
      description: Point3d[]
    content.vb: Public Shared Function MirrorPointQuadrant(point As Point3d) As Point3d()
  overload: LagaRhino.PointData.MirrorPointQuadrant*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
  commentId: M:LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
  id: PointQuadrant(Rhino.Geometry.Point3d)
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: PointQuadrant(Point3d)
  nameWithType: PointData.PointQuadrant(Point3d)
  fullName: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
  type: Method
  source:
    id: PointQuadrant
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 39
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\ndetermine in which quadrant is the point, if 0:++, 1:+-, 2:--, 3:-+.\n"
  example: []
  syntax:
    content: public static int PointQuadrant(Point3d point)
    parameters:
    - id: point
      type: Rhino.Geometry.Point3d
      description: Test point
    return:
      type: System.Int32
      description: int
    content.vb: Public Shared Function PointQuadrant(point As Point3d) As Integer
  overload: LagaRhino.PointData.PointQuadrant*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
  commentId: M:LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
  id: SortPointsByZ(Rhino.Geometry.Point3d[])
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: SortPointsByZ(Point3d[])
  nameWithType: PointData.SortPointsByZ(Point3d[])
  fullName: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
  type: Method
  source:
    id: SortPointsByZ
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 70
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nSort points by Z coordinate\n"
  example: []
  syntax:
    content: public static Point3d[] SortPointsByZ(Point3d[] points)
    parameters:
    - id: points
      type: Rhino.Geometry.Point3d[]
      description: The points to sort
    return:
      type: Rhino.Geometry.Point3d[]
      description: point3d[]
    content.vb: Public Shared Function SortPointsByZ(points As Point3d()) As Point3d()
  overload: LagaRhino.PointData.SortPointsByZ*
  nameWithType.vb: PointData.SortPointsByZ(Point3d())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d())
  name.vb: SortPointsByZ(Point3d())
- uid: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
  commentId: M:LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
  id: SortPointsByXY(Rhino.Geometry.Point3d[])
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: SortPointsByXY(Point3d[])
  nameWithType: PointData.SortPointsByXY(Point3d[])
  fullName: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
  type: Method
  source:
    id: SortPointsByXY
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 80
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nSort points by the coordinate X and then by the coordinate Y.\n"
  example: []
  syntax:
    content: public static Point3d[] SortPointsByXY(Point3d[] points)
    parameters:
    - id: points
      type: Rhino.Geometry.Point3d[]
      description: The points to sort
    return:
      type: Rhino.Geometry.Point3d[]
      description: point3d[]
    content.vb: Public Shared Function SortPointsByXY(points As Point3d()) As Point3d()
  overload: LagaRhino.PointData.SortPointsByXY*
  nameWithType.vb: PointData.SortPointsByXY(Point3d())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d())
  name.vb: SortPointsByXY(Point3d())
- uid: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
  commentId: M:LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
  id: GroupByZ(Rhino.Geometry.Point3d[])
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: GroupByZ(Point3d[])
  nameWithType: PointData.GroupByZ(Point3d[])
  fullName: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
  type: Method
  source:
    id: GroupByZ
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 92
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  syntax:
    content: public static List<Point3d[]> GroupByZ(Point3d[] points)
    parameters:
    - id: points
      type: Rhino.Geometry.Point3d[]
    return:
      type: System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
    content.vb: Public Shared Function GroupByZ(points As Point3d()) As List(Of Point3d())
  overload: LagaRhino.PointData.GroupByZ*
  nameWithType.vb: PointData.GroupByZ(Point3d())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d())
  name.vb: GroupByZ(Point3d())
- uid: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  commentId: M:LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  id: TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: TwoPointsInterpolation(Point3d, Point3d, Double)
  nameWithType: PointData.TwoPointsInterpolation(Point3d, Point3d, Double)
  fullName: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
  type: Method
  source:
    id: TwoPointsInterpolation
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 121
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nInterpolate 2 points by span distance\n"
  example: []
  syntax:
    content: public static Point3d[] TwoPointsInterpolation(Point3d pointA, Point3d pointB, double span)
    parameters:
    - id: pointA
      type: Rhino.Geometry.Point3d
      description: Start point
    - id: pointB
      type: Rhino.Geometry.Point3d
      description: End point
    - id: span
      type: System.Double
      description: span distance
    return:
      type: Rhino.Geometry.Point3d[]
      description: Point3d[]
    content.vb: Public Shared Function TwoPointsInterpolation(pointA As Point3d, pointB As Point3d, span As Double) As Point3d()
  overload: LagaRhino.PointData.TwoPointsInterpolation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
  commentId: M:LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
  id: VectorToPoint3d(Laga.Geometry.Vector)
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: VectorToPoint3d(Vector)
  nameWithType: PointData.VectorToPoint3d(Vector)
  fullName: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
  type: Method
  source:
    id: VectorToPoint3d
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 140
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nConvert Laga Vector to Rhino Point3d\n"
  example: []
  syntax:
    content: public static Point3d VectorToPoint3d(Vector vector)
    parameters:
    - id: vector
      type: Laga.Geometry.Vector
      description: The Vector to convert
    return:
      type: Rhino.Geometry.Point3d
      description: Point3d
    content.vb: Public Shared Function VectorToPoint3d(vector As Vector) As Point3d
  overload: LagaRhino.PointData.VectorToPoint3d*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
  commentId: M:LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
  id: Point3dToVector(Rhino.Geometry.Point3d)
  parent: LagaRhino.PointData
  langs:
  - csharp
  - vb
  name: Point3dToVector(Point3d)
  nameWithType: PointData.Point3dToVector(Point3d)
  fullName: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
  type: Method
  source:
    id: Point3dToVector
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
    startLine: 151
  assemblies:
  - LagaRhino
  namespace: LagaRhino
  summary: "\nConvert Rhino Point3d to Laga Vector\n"
  example: []
  syntax:
    content: public static Vector Point3dToVector(Point3d point)
    parameters:
    - id: point
      type: Rhino.Geometry.Point3d
      description: The point to convert
    return:
      type: Laga.Geometry.Vector
      description: Vector
    content.vb: Public Shared Function Point3dToVector(point As Point3d) As Vector
  overload: LagaRhino.PointData.Point3dToVector*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: LagaRhino
  commentId: N:LagaRhino
  name: LagaRhino
  nameWithType: LagaRhino
  fullName: LagaRhino
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: LagaRhino.PointData.MirrorPointQuadrant*
  commentId: Overload:LagaRhino.PointData.MirrorPointQuadrant
  name: MirrorPointQuadrant
  nameWithType: PointData.MirrorPointQuadrant
  fullName: LagaRhino.PointData.MirrorPointQuadrant
- uid: Rhino.Geometry.Point3d
  commentId: T:Rhino.Geometry.Point3d
  parent: Rhino.Geometry
  isExternal: true
  name: Point3d
  nameWithType: Point3d
  fullName: Rhino.Geometry.Point3d
- uid: Rhino.Geometry.Point3d[]
  isExternal: true
  name: Point3d[]
  nameWithType: Point3d[]
  fullName: Rhino.Geometry.Point3d[]
  nameWithType.vb: Point3d()
  fullName.vb: Rhino.Geometry.Point3d()
  name.vb: Point3d()
  spec.csharp:
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Rhino.Geometry
  commentId: N:Rhino.Geometry
  isExternal: true
  name: Rhino.Geometry
  nameWithType: Rhino.Geometry
  fullName: Rhino.Geometry
- uid: LagaRhino.PointData.PointQuadrant*
  commentId: Overload:LagaRhino.PointData.PointQuadrant
  name: PointQuadrant
  nameWithType: PointData.PointQuadrant
  fullName: LagaRhino.PointData.PointQuadrant
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: LagaRhino.PointData.SortPointsByZ*
  commentId: Overload:LagaRhino.PointData.SortPointsByZ
  name: SortPointsByZ
  nameWithType: PointData.SortPointsByZ
  fullName: LagaRhino.PointData.SortPointsByZ
- uid: LagaRhino.PointData.SortPointsByXY*
  commentId: Overload:LagaRhino.PointData.SortPointsByXY
  name: SortPointsByXY
  nameWithType: PointData.SortPointsByXY
  fullName: LagaRhino.PointData.SortPointsByXY
- uid: LagaRhino.PointData.GroupByZ*
  commentId: Overload:LagaRhino.PointData.GroupByZ
  name: GroupByZ
  nameWithType: PointData.GroupByZ
  fullName: LagaRhino.PointData.GroupByZ
- uid: System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
  commentId: T:System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Point3d[]>
  nameWithType: List<Point3d[]>
  fullName: System.Collections.Generic.List<Rhino.Geometry.Point3d[]>
  nameWithType.vb: List(Of Point3d())
  fullName.vb: System.Collections.Generic.List(Of Rhino.Geometry.Point3d())
  name.vb: List(Of Point3d())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Rhino.Geometry.Point3d
    name: Point3d
    nameWithType: Point3d
    fullName: Rhino.Geometry.Point3d
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: LagaRhino.PointData.TwoPointsInterpolation*
  commentId: Overload:LagaRhino.PointData.TwoPointsInterpolation
  name: TwoPointsInterpolation
  nameWithType: PointData.TwoPointsInterpolation
  fullName: LagaRhino.PointData.TwoPointsInterpolation
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: LagaRhino.PointData.VectorToPoint3d*
  commentId: Overload:LagaRhino.PointData.VectorToPoint3d
  name: VectorToPoint3d
  nameWithType: PointData.VectorToPoint3d
  fullName: LagaRhino.PointData.VectorToPoint3d
- uid: Laga.Geometry.Vector
  commentId: T:Laga.Geometry.Vector
  parent: Laga.Geometry
  name: Vector
  nameWithType: Vector
  fullName: Laga.Geometry.Vector
- uid: Laga.Geometry
  commentId: N:Laga.Geometry
  name: Laga.Geometry
  nameWithType: Laga.Geometry
  fullName: Laga.Geometry
- uid: LagaRhino.PointData.Point3dToVector*
  commentId: Overload:LagaRhino.PointData.Point3dToVector
  name: Point3dToVector
  nameWithType: PointData.Point3dToVector
  fullName: LagaRhino.PointData.Point3dToVector
