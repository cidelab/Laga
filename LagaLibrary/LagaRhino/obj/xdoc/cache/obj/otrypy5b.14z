id: LagaRhino
language: CSharp
name:
  Default: LagaRhino
qualifiedName:
  Default: LagaRhino
type: Assembly
modifiers: {}
items:
- id: LagaRhino
  commentId: N:LagaRhino
  language: CSharp
  name:
    CSharp: LagaRhino
    VB: LagaRhino
  nameWithType:
    CSharp: LagaRhino
    VB: LagaRhino
  qualifiedName:
    CSharp: LagaRhino
    VB: LagaRhino
  type: Namespace
  assemblies:
  - LagaRhino
  modifiers: {}
  items:
  - id: LagaRhino.CurveData
    commentId: T:LagaRhino.CurveData
    language: CSharp
    name:
      CSharp: CurveData
      VB: CurveData
    nameWithType:
      CSharp: CurveData
      VB: CurveData
    qualifiedName:
      CSharp: LagaRhino.CurveData
      VB: LagaRhino.CurveData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      id: CurveData
      path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
      startLine: 12
    summary: "\nSimple Manipulations on Rhino Curves\n"
    example: []
    syntax:
      content:
        CSharp: public class CurveData
        VB: Public Class CurveData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
      commentId: M:LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
      language: CSharp
      name:
        CSharp: GetPointFromCurves(List<Curve>, Double)
        VB: GetPointFromCurves(List(Of Curve), Double)
      nameWithType:
        CSharp: CurveData.GetPointFromCurves(List<Curve>, Double)
        VB: CurveData.GetPointFromCurves(List(Of Curve), Double)
      qualifiedName:
        CSharp: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List<Rhino.Geometry.Curve>, System.Double)
        VB: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List(Of Rhino.Geometry.Curve), System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: GetPointFromCurves
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
        startLine: 22
      summary: "\nApply the same t parameter to a list of curves to return an array of points\n"
      example: []
      syntax:
        content:
          CSharp: public static Point3d[] GetPointFromCurves(List<Curve> lstCrvs, double t)
          VB: Public Shared Function GetPointFromCurves(lstCrvs As List(Of Curve), t As Double) As Point3d()
        parameters:
        - id: lstCrvs
          type: System.Collections.Generic.List{Rhino.Geometry.Curve}
          description: The list of curves
        - id: t
          type: System.Double
          description: t param
        return:
          type: Rhino.Geometry.Point3d[]
          description: Point3d[]
      overload: LagaRhino.CurveData.GetPointFromCurves*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
      commentId: M:LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
      language: CSharp
      name:
        CSharp: DeepCopyListCurve(List<Curve>)
        VB: DeepCopyListCurve(List(Of Curve))
      nameWithType:
        CSharp: CurveData.DeepCopyListCurve(List<Curve>)
        VB: CurveData.DeepCopyListCurve(List(Of Curve))
      qualifiedName:
        CSharp: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List<Rhino.Geometry.Curve>)
        VB: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List(Of Rhino.Geometry.Curve))
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: DeepCopyListCurve
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
        startLine: 42
      syntax:
        content:
          CSharp: public static List<Curve> DeepCopyListCurve(List<Curve> lstToCopy)
          VB: Public Shared Function DeepCopyListCurve(lstToCopy As List(Of Curve)) As List(Of Curve)
        parameters:
        - id: lstToCopy
          type: System.Collections.Generic.List{Rhino.Geometry.Curve}
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Curve}
      overload: LagaRhino.CurveData.DeepCopyListCurve*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
      commentId: M:LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
      language: CSharp
      name:
        CSharp: CorrectPlaneOnCurveByParam(Curve, Double)
        VB: CorrectPlaneOnCurveByParam(Curve, Double)
      nameWithType:
        CSharp: CurveData.CorrectPlaneOnCurveByParam(Curve, Double)
        VB: CurveData.CorrectPlaneOnCurveByParam(Curve, Double)
      qualifiedName:
        CSharp: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve, System.Double)
        VB: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve, System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: CorrectPlaneOnCurveByParam
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\CurveData.cs
        startLine: 60
      summary: "\nAlign Perpendicular frames in the Curve\n"
      example: []
      syntax:
        content:
          CSharp: public static Plane CorrectPlaneOnCurveByParam(Curve crv, double t)
          VB: Public Shared Function CorrectPlaneOnCurveByParam(crv As Curve, t As Double) As Plane
        parameters:
        - id: crv
          type: Rhino.Geometry.Curve
          description: the curve in the analysis
        - id: t
          type: System.Double
          description: the t param on the curve
        return:
          type: Rhino.Geometry.Plane
          description: ''
      overload: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: LagaRhino.LineCurveData
    commentId: T:LagaRhino.LineCurveData
    language: CSharp
    name:
      CSharp: LineCurveData
      VB: LineCurveData
    nameWithType:
      CSharp: LineCurveData
      VB: LineCurveData
    qualifiedName:
      CSharp: LagaRhino.LineCurveData
      VB: LagaRhino.LineCurveData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      id: LineCurveData
      path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\LineCurveData.cs
      startLine: 7
    summary: "\nSimple manipulations on Rhino LineCurves\n"
    example: []
    syntax:
      content:
        CSharp: public class LineCurveData
        VB: Public Class LineCurveData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
      commentId: M:LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
      language: CSharp
      name:
        CSharp: Axis(LineCurve)
        VB: Axis(LineCurve)
      nameWithType:
        CSharp: LineCurveData.Axis(LineCurve)
        VB: LineCurveData.Axis(LineCurve)
      qualifiedName:
        CSharp: LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
        VB: LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: Axis
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\LineCurveData.cs
        startLine: 14
      summary: "\nTransform a LineCurve to an Axis, The origin of the axis is the further point from the (0,0,0)\n"
      example: []
      syntax:
        content:
          CSharp: public static LineCurve Axis(LineCurve axis)
          VB: Public Shared Function Axis(axis As LineCurve) As LineCurve
        parameters:
        - id: axis
          type: Rhino.Geometry.LineCurve
          description: LineCurve
        return:
          type: Rhino.Geometry.LineCurve
          description: LineCurve
      overload: LagaRhino.LineCurveData.Axis*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: LagaRhino.PointData
    commentId: T:LagaRhino.PointData
    language: CSharp
    name:
      CSharp: PointData
      VB: PointData
    nameWithType:
      CSharp: PointData
      VB: PointData
    qualifiedName:
      CSharp: LagaRhino.PointData
      VB: LagaRhino.PointData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      id: PointData
      path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class PointData
        VB: Public Class PointData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
      commentId: M:LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
      language: CSharp
      name:
        CSharp: MirrorPointQuadrant(Point3d)
        VB: MirrorPointQuadrant(Point3d)
      nameWithType:
        CSharp: PointData.MirrorPointQuadrant(Point3d)
        VB: PointData.MirrorPointQuadrant(Point3d)
      qualifiedName:
        CSharp: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
        VB: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: MirrorPointQuadrant
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 18
      summary: "\nMirror a point by the 4 quadrants\n"
      example: []
      syntax:
        content:
          CSharp: public static Point3d[] MirrorPointQuadrant(Point3d point)
          VB: Public Shared Function MirrorPointQuadrant(point As Point3d) As Point3d()
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
          description: point to mirror
        return:
          type: Rhino.Geometry.Point3d[]
          description: Point3d[]
      overload: LagaRhino.PointData.MirrorPointQuadrant*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
      commentId: M:LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
      language: CSharp
      name:
        CSharp: PointQuadrant(Point3d)
        VB: PointQuadrant(Point3d)
      nameWithType:
        CSharp: PointData.PointQuadrant(Point3d)
        VB: PointData.PointQuadrant(Point3d)
      qualifiedName:
        CSharp: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
        VB: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: PointQuadrant
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 39
      summary: "\ndetermine in which quadrant is the point, if 0:++, 1:+-, 2:--, 3:-+.\n"
      example: []
      syntax:
        content:
          CSharp: public static int PointQuadrant(Point3d point)
          VB: Public Shared Function PointQuadrant(point As Point3d) As Integer
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
          description: Test point
        return:
          type: System.Int32
          description: int
      overload: LagaRhino.PointData.PointQuadrant*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
      commentId: M:LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
      language: CSharp
      name:
        CSharp: SortPointsByZ(Point3d[])
        VB: SortPointsByZ(Point3d())
      nameWithType:
        CSharp: PointData.SortPointsByZ(Point3d[])
        VB: PointData.SortPointsByZ(Point3d())
      qualifiedName:
        CSharp: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
        VB: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d())
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: SortPointsByZ
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 70
      summary: "\nSort points by Z coordinate\n"
      example: []
      syntax:
        content:
          CSharp: public static Point3d[] SortPointsByZ(Point3d[] points)
          VB: Public Shared Function SortPointsByZ(points As Point3d()) As Point3d()
        parameters:
        - id: points
          type: Rhino.Geometry.Point3d[]
          description: The points to sort
        return:
          type: Rhino.Geometry.Point3d[]
          description: point3d[]
      overload: LagaRhino.PointData.SortPointsByZ*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
      commentId: M:LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
      language: CSharp
      name:
        CSharp: SortPointsByXY(Point3d[])
        VB: SortPointsByXY(Point3d())
      nameWithType:
        CSharp: PointData.SortPointsByXY(Point3d[])
        VB: PointData.SortPointsByXY(Point3d())
      qualifiedName:
        CSharp: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
        VB: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d())
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: SortPointsByXY
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 80
      summary: "\nSort points by the coordinate X and then by the coordinate Y.\n"
      example: []
      syntax:
        content:
          CSharp: public static Point3d[] SortPointsByXY(Point3d[] points)
          VB: Public Shared Function SortPointsByXY(points As Point3d()) As Point3d()
        parameters:
        - id: points
          type: Rhino.Geometry.Point3d[]
          description: The points to sort
        return:
          type: Rhino.Geometry.Point3d[]
          description: point3d[]
      overload: LagaRhino.PointData.SortPointsByXY*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
      commentId: M:LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
      language: CSharp
      name:
        CSharp: GroupByZ(Point3d[])
        VB: GroupByZ(Point3d())
      nameWithType:
        CSharp: PointData.GroupByZ(Point3d[])
        VB: PointData.GroupByZ(Point3d())
      qualifiedName:
        CSharp: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
        VB: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d())
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: GroupByZ
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 92
      syntax:
        content:
          CSharp: public static List<Point3d[]> GroupByZ(Point3d[] points)
          VB: Public Shared Function GroupByZ(points As Point3d()) As List(Of Point3d())
        parameters:
        - id: points
          type: Rhino.Geometry.Point3d[]
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
      overload: LagaRhino.PointData.GroupByZ*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
      commentId: M:LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
      language: CSharp
      name:
        CSharp: TwoPointsInterpolation(Point3d, Point3d, Double)
        VB: TwoPointsInterpolation(Point3d, Point3d, Double)
      nameWithType:
        CSharp: PointData.TwoPointsInterpolation(Point3d, Point3d, Double)
        VB: PointData.TwoPointsInterpolation(Point3d, Point3d, Double)
      qualifiedName:
        CSharp: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
        VB: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: TwoPointsInterpolation
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 121
      summary: "\nInterpolate 2 points by span distance\n"
      example: []
      syntax:
        content:
          CSharp: public static Point3d[] TwoPointsInterpolation(Point3d pointA, Point3d pointB, double span)
          VB: Public Shared Function TwoPointsInterpolation(pointA As Point3d, pointB As Point3d, span As Double) As Point3d()
        parameters:
        - id: pointA
          type: Rhino.Geometry.Point3d
          description: Start point
        - id: pointB
          type: Rhino.Geometry.Point3d
          description: End point
        - id: span
          type: System.Double
          description: span distance
        return:
          type: Rhino.Geometry.Point3d[]
          description: Point3d[]
      overload: LagaRhino.PointData.TwoPointsInterpolation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
      commentId: M:LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
      language: CSharp
      name:
        CSharp: VectorToPoint3d(Vector)
        VB: VectorToPoint3d(Vector)
      nameWithType:
        CSharp: PointData.VectorToPoint3d(Vector)
        VB: PointData.VectorToPoint3d(Vector)
      qualifiedName:
        CSharp: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
        VB: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: VectorToPoint3d
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 140
      summary: "\nConvert Laga Vector to Rhino Point3d\n"
      example: []
      syntax:
        content:
          CSharp: public static Point3d VectorToPoint3d(Vector vector)
          VB: Public Shared Function VectorToPoint3d(vector As Vector) As Point3d
        parameters:
        - id: vector
          type: Laga.Geometry.Vector
          description: The Vector to convert
        return:
          type: Rhino.Geometry.Point3d
          description: Point3d
      overload: LagaRhino.PointData.VectorToPoint3d*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
      commentId: M:LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
      language: CSharp
      name:
        CSharp: Point3dToVector(Point3d)
        VB: Point3dToVector(Point3d)
      nameWithType:
        CSharp: PointData.Point3dToVector(Point3d)
        VB: PointData.Point3dToVector(Point3d)
      qualifiedName:
        CSharp: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
        VB: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: Point3dToVector
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\PointData.cs
        startLine: 151
      summary: "\nConvert Rhino Point3d to Laga Vector\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector Point3dToVector(Point3d point)
          VB: Public Shared Function Point3dToVector(point As Point3d) As Vector
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
          description: The point to convert
        return:
          type: Laga.Geometry.Vector
          description: Vector
      overload: LagaRhino.PointData.Point3dToVector*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: LagaRhino.Shoebox
    commentId: T:LagaRhino.Shoebox
    language: CSharp
    name:
      CSharp: Shoebox
      VB: Shoebox
    nameWithType:
      CSharp: Shoebox
      VB: Shoebox
    qualifiedName:
      CSharp: LagaRhino.Shoebox
      VB: LagaRhino.Shoebox
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      id: Shoebox
      path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\Shoebox.cs
      startLine: 4
    syntax:
      content:
        CSharp: 'public class Shoebox : Brep, IDisposable, ISerializable'
        VB: >-
          Public Class Shoebox

              Inherits Brep

              Implements IDisposable, ISerializable
    inheritance:
    - System.Object
    - Rhino.Runtime.CommonObject
    - Rhino.Geometry.GeometryBase
    - Rhino.Geometry.Brep
    implements:
    - System.IDisposable
    - System.Runtime.Serialization.ISerializable
    inheritedMembers:
    - Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
    - Rhino.Geometry.Brep.IsBox
    - Rhino.Geometry.Brep.IsBox(System.Double)
    - Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
    - Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
    - Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
    - Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
    - Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
    - Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
    - Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
    - Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
    - Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
    - Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
    - Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
    - Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
    - Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    - Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    - Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
    - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
    - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
    - Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
    - Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
    - Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    - Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    - Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
    - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
    - Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
    - Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
    - Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
    - Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
    - Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
    - Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
    - Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
    - Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    - Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    - Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    - Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
    - Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
    - Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
    - Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
    - Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
    - Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    - Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    - Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
    - Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    - Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
    - Rhino.Geometry.Brep.RemoveFins
    - Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
    - Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
    - Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
    - Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
    - Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
    - Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    - Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    - Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
    - Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    - Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    - Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
    - Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
    - Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
    - Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
    - Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
    - Rhino.Geometry.Brep.DestroyRegionTopology
    - Rhino.Geometry.Brep.GetRegions
    - Rhino.Geometry.Brep.Duplicate
    - Rhino.Geometry.Brep.DuplicateBrep
    - Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
    - Rhino.Geometry.Brep.DuplicateEdgeCurves
    - Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
    - Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
    - Rhino.Geometry.Brep.GetConnectedComponents
    - Rhino.Geometry.Brep.GetWireframe(System.Int32)
    - Rhino.Geometry.Brep.DuplicateVertices
    - Rhino.Geometry.Brep.Flip
    - Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
    - Rhino.Geometry.Brep.IsValidTopology(System.String@)
    - Rhino.Geometry.Brep.IsValidGeometry(System.String@)
    - Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
    - Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
    - Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
    - Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
    - Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
    - Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
    - Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
    - Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
    - Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
    - Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Double,System.Double)
    - Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Int32,System.Double,System.Double)
    - Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
    - Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
    - Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
    - Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
    - Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
    - Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
    - Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
    - Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
    - Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
    - Rhino.Geometry.Brep.GetArea
    - Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
    - Rhino.Geometry.Brep.GetVolume
    - Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
    - Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
    - Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
    - Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
    - Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
    - Rhino.Geometry.Brep.SetVertices
    - Rhino.Geometry.Brep.SetTrimIsoFlags
    - Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
    - Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    - Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
    - Rhino.Geometry.Brep.MakeValidForV2
    - Rhino.Geometry.Brep.Compact
    - Rhino.Geometry.Brep.Repair(System.Double)
    - Rhino.Geometry.Brep.RemoveHoles(System.Double)
    - Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
    - Rhino.Geometry.Brep.CullUnusedFaces
    - Rhino.Geometry.Brep.CullUnusedLoops
    - Rhino.Geometry.Brep.CullUnusedTrims
    - Rhino.Geometry.Brep.CullUnusedEdges
    - Rhino.Geometry.Brep.CullUnusedVertices
    - Rhino.Geometry.Brep.CullUnused3dCurves
    - Rhino.Geometry.Brep.CullUnused2dCurves
    - Rhino.Geometry.Brep.CullUnusedSurfaces
    - Rhino.Geometry.Brep.Standardize
    - Rhino.Geometry.Brep.Vertices
    - Rhino.Geometry.Brep.Surfaces
    - Rhino.Geometry.Brep.Edges
    - Rhino.Geometry.Brep.Trims
    - Rhino.Geometry.Brep.Loops
    - Rhino.Geometry.Brep.Faces
    - Rhino.Geometry.Brep.Curves2D
    - Rhino.Geometry.Brep.Curves3D
    - Rhino.Geometry.Brep.IsSolid
    - Rhino.Geometry.Brep.SolidOrientation
    - Rhino.Geometry.Brep.IsManifold
    - Rhino.Geometry.Brep.IsSurface
    - Rhino.Geometry.Brep.HasRegionTopology
    - Rhino.Geometry.GeometryBase.OnSwitchToNonConst
    - Rhino.Geometry.GeometryBase.DuplicateShallow
    - Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
    - Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
    - Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
    - Rhino.Geometry.GeometryBase.Scale(System.Double)
    - Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
    - Rhino.Geometry.GeometryBase.MemoryEstimate
    - Rhino.Geometry.GeometryBase.DataCRC(System.UInt32)
    - Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
    - Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
    - Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
    - Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
    - Rhino.Geometry.GeometryBase.MakeDeformable
    - Rhino.Geometry.GeometryBase.ComponentIndex
    - Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
    - Rhino.Geometry.GeometryBase.GetUserString(System.String)
    - Rhino.Geometry.GeometryBase.GetUserStrings
    - Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
    - Rhino.Geometry.GeometryBase.NonConstOperation
    - Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
    - Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
    - Rhino.Geometry.GeometryBase.IsDocumentControlled
    - Rhino.Geometry.GeometryBase.ObjectType
    - Rhino.Geometry.GeometryBase.IsDeformable
    - Rhino.Geometry.GeometryBase.HasBrepForm
    - Rhino.Geometry.GeometryBase.UserStringCount
    - Rhino.Runtime.CommonObject.EnsurePrivateCopy
    - Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
    - Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
    - Rhino.Runtime.CommonObject.Dispose
    - Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
    - Rhino.Runtime.CommonObject.FromJSON(System.String)
    - Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
    - Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
    - Rhino.Runtime.CommonObject.PerformCorruptionTesting
    - Rhino.Runtime.CommonObject.IsValid
    - Rhino.Runtime.CommonObject.Disposed
    - Rhino.Runtime.CommonObject.HasUserData
    - Rhino.Runtime.CommonObject.UserData
    - Rhino.Runtime.CommonObject.UserDictionary
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.Shoebox.ShoeBox
      commentId: P:LagaRhino.Shoebox.ShoeBox
      language: CSharp
      name:
        CSharp: ShoeBox
        VB: ShoeBox
      nameWithType:
        CSharp: Shoebox.ShoeBox
        VB: Shoebox.ShoeBox
      qualifiedName:
        CSharp: LagaRhino.Shoebox.ShoeBox
        VB: LagaRhino.Shoebox.ShoeBox
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: ShoeBox
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\Shoebox.cs
        startLine: 16
      summary: "\nGet the ShoeBox geometry.\n"
      example: []
      syntax:
        content:
          CSharp: public Brep ShoeBox { get; }
          VB: Public ReadOnly Property ShoeBox As Brep
        parameters: []
        return:
          type: Rhino.Geometry.Brep
      overload: LagaRhino.Shoebox.ShoeBox*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: LagaRhino.Shoebox.Volume
      commentId: P:LagaRhino.Shoebox.Volume
      language: CSharp
      name:
        CSharp: Volume
        VB: Volume
      nameWithType:
        CSharp: Shoebox.Volume
        VB: Shoebox.Volume
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Volume
        VB: LagaRhino.Shoebox.Volume
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: Volume
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\Shoebox.cs
        startLine: 21
      summary: "\nLength Shoebox Property\n"
      example: []
      syntax:
        content:
          CSharp: public double Volume { get; }
          VB: Public ReadOnly Property Volume As Double
        parameters: []
        return:
          type: System.Double
      overload: LagaRhino.Shoebox.Volume*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: LagaRhino.Shoebox.Area
      commentId: P:LagaRhino.Shoebox.Area
      language: CSharp
      name:
        CSharp: Area
        VB: Area
      nameWithType:
        CSharp: Shoebox.Area
        VB: Shoebox.Area
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Area
        VB: LagaRhino.Shoebox.Area
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: Area
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\Shoebox.cs
        startLine: 27
      summary: "\nWidth Shoebox property\n"
      example: []
      syntax:
        content:
          CSharp: public double Area { get; }
          VB: Public ReadOnly Property Area As Double
        parameters: []
        return:
          type: System.Double
      overload: LagaRhino.Shoebox.Area*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double)
      commentId: M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Shoebox(Point3d, Double, Double, Double, Double)
        VB: Shoebox(Point3d, Double, Double, Double, Double)
      nameWithType:
        CSharp: Shoebox.Shoebox(Point3d, Double, Double, Double, Double)
        VB: Shoebox.Shoebox(Point3d, Double, Double, Double, Double)
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double)
        VB: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double)
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: .ctor
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\Shoebox.cs
        startLine: 38
      summary: "\nShoebox by length, width and height\n"
      example: []
      syntax:
        content:
          CSharp: public Shoebox(Point3d point, double length, double width, double height, double rotate = 0)
          VB: Public Sub New(point As Point3d, length As Double, width As Double, height As Double, rotate As Double = 0)
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
          description: Base point location
        - id: length
          type: System.Double
          description: Length
        - id: width
          type: System.Double
          description: Width
        - id: height
          type: System.Double
          description: Height
        - id: rotate
          type: System.Double
          description: Rotate parameter
      overload: LagaRhino.Shoebox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
      commentId: M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
        VB: Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
      nameWithType:
        CSharp: Shoebox.Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
        VB: Shoebox.Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
        VB: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: .ctor
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\Shoebox.cs
        startLine: 67
      summary: "\nShoebox with the free Z top points\n"
      example: []
      syntax:
        content:
          CSharp: public Shoebox(Point3d point, double length, double width, double eHeight, double fHeight, double gHeight, double hHeight, double rotate = 0)
          VB: Public Sub New(point As Point3d, length As Double, width As Double, eHeight As Double, fHeight As Double, gHeight As Double, hHeight As Double, rotate As Double = 0)
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
          description: Base point location
        - id: length
          type: System.Double
          description: Length
        - id: width
          type: System.Double
          description: Width
        - id: eHeight
          type: System.Double
          description: Z parameter for e point
        - id: fHeight
          type: System.Double
          description: Z parameter for f point
        - id: gHeight
          type: System.Double
          description: Z parameter for g point
        - id: hHeight
          type: System.Double
          description: Z parameter for h point
        - id: rotate
          type: System.Double
          description: Rotate parameter
      overload: LagaRhino.Shoebox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: LagaRhino.SurfaceData
    commentId: T:LagaRhino.SurfaceData
    language: CSharp
    name:
      CSharp: SurfaceData
      VB: SurfaceData
    nameWithType:
      CSharp: SurfaceData
      VB: SurfaceData
    qualifiedName:
      CSharp: LagaRhino.SurfaceData
      VB: LagaRhino.SurfaceData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      id: SurfaceData
      path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\SurfaceData.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class SurfaceData
        VB: Public Class SurfaceData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.SurfaceData.SurfacePoints
      commentId: P:LagaRhino.SurfaceData.SurfacePoints
      language: CSharp
      name:
        CSharp: SurfacePoints
        VB: SurfacePoints
      nameWithType:
        CSharp: SurfaceData.SurfacePoints
        VB: SurfaceData.SurfacePoints
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.SurfacePoints
        VB: LagaRhino.SurfaceData.SurfacePoints
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: SurfacePoints
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\SurfaceData.cs
        startLine: 17
      summary: "\nThe points on the surface\n"
      example: []
      syntax:
        content:
          CSharp: public List<Point3d> SurfacePoints { get; }
          VB: Public ReadOnly Property SurfacePoints As List(Of Point3d)
        parameters: []
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Point3d}
      overload: LagaRhino.SurfaceData.SurfacePoints*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: LagaRhino.SurfaceData.#ctor(Rhino.Geometry.Surface,System.Int32,System.Int32)
      commentId: M:LagaRhino.SurfaceData.#ctor(Rhino.Geometry.Surface,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SurfaceData(Surface, Int32, Int32)
        VB: SurfaceData(Surface, Int32, Int32)
      nameWithType:
        CSharp: SurfaceData.SurfaceData(Surface, Int32, Int32)
        VB: SurfaceData.SurfaceData(Surface, Int32, Int32)
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.SurfaceData(Rhino.Geometry.Surface, System.Int32, System.Int32)
        VB: LagaRhino.SurfaceData.SurfaceData(Rhino.Geometry.Surface, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: .ctor
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\SurfaceData.cs
        startLine: 28
      summary: "\nConstruct a SurfaceData object\n"
      example: []
      syntax:
        content:
          CSharp: public SurfaceData(Surface surface, int uCount, int vCount)
          VB: Public Sub New(surface As Surface, uCount As Integer, vCount As Integer)
        parameters:
        - id: surface
          type: Rhino.Geometry.Surface
          description: The base surface
        - id: uCount
          type: System.Int32
          description: number of points in u direction
        - id: vCount
          type: System.Int32
          description: number of points in v direction
      overload: LagaRhino.SurfaceData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve,System.Double)
      commentId: M:LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve,System.Double)
      language: CSharp
      name:
        CSharp: PlaneSurfaceAxis(LineCurve, Double)
        VB: PlaneSurfaceAxis(LineCurve, Double)
      nameWithType:
        CSharp: SurfaceData.PlaneSurfaceAxis(LineCurve, Double)
        VB: SurfaceData.PlaneSurfaceAxis(LineCurve, Double)
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve, System.Double)
        VB: LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve, System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        id: PlaneSurfaceAxis
        path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\LagaRhino\SurfaceData.cs
        startLine: 54
      summary: "\nBuild a vertical planar surface from a LineCurve axis.\n"
      example: []
      syntax:
        content:
          CSharp: public static Surface PlaneSurfaceAxis(LineCurve axis, double height = 100)
          VB: Public Shared Function PlaneSurfaceAxis(axis As LineCurve, height As Double = 100) As Surface
        parameters:
        - id: axis
          type: Rhino.Geometry.LineCurve
          description: the axis
        - id: height
          type: System.Double
          description: the height of the surface
        return:
          type: Rhino.Geometry.Surface
          description: Surface
      overload: LagaRhino.SurfaceData.PlaneSurfaceAxis*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Rhino.Geometry.Point3d[]:
    name:
      CSharp:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Rhino.Geometry.Curve}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Curve}
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  LagaRhino.CurveData.GetPointFromCurves*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.GetPointFromCurves*
        name: GetPointFromCurves
        nameWithType: CurveData.GetPointFromCurves
        qualifiedName: LagaRhino.CurveData.GetPointFromCurves
      VB:
      - id: LagaRhino.CurveData.GetPointFromCurves*
        name: GetPointFromCurves
        nameWithType: CurveData.GetPointFromCurves
        qualifiedName: LagaRhino.CurveData.GetPointFromCurves
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.GetPointFromCurves
  LagaRhino.CurveData.DeepCopyListCurve*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.DeepCopyListCurve*
        name: DeepCopyListCurve
        nameWithType: CurveData.DeepCopyListCurve
        qualifiedName: LagaRhino.CurveData.DeepCopyListCurve
      VB:
      - id: LagaRhino.CurveData.DeepCopyListCurve*
        name: DeepCopyListCurve
        nameWithType: CurveData.DeepCopyListCurve
        qualifiedName: LagaRhino.CurveData.DeepCopyListCurve
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.DeepCopyListCurve
  Rhino.Geometry:
    name:
      CSharp:
      - name: Rhino.Geometry
        nameWithType: Rhino.Geometry
        qualifiedName: Rhino.Geometry
        isExternal: true
      VB:
      - name: Rhino.Geometry
        nameWithType: Rhino.Geometry
        qualifiedName: Rhino.Geometry
    isDefinition: true
    commentId: N:Rhino.Geometry
  Rhino.Geometry.Plane:
    name:
      CSharp:
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      VB:
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.Plane
  Rhino.Geometry.Curve:
    name:
      CSharp:
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      VB:
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.Curve
  LagaRhino.CurveData.CorrectPlaneOnCurveByParam*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
        name: CorrectPlaneOnCurveByParam
        nameWithType: CurveData.CorrectPlaneOnCurveByParam
        qualifiedName: LagaRhino.CurveData.CorrectPlaneOnCurveByParam
      VB:
      - id: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
        name: CorrectPlaneOnCurveByParam
        nameWithType: CurveData.CorrectPlaneOnCurveByParam
        qualifiedName: LagaRhino.CurveData.CorrectPlaneOnCurveByParam
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.CorrectPlaneOnCurveByParam
  LagaRhino.CurveData:
    name:
      CSharp:
      - id: LagaRhino.CurveData
        name: CurveData
        nameWithType: CurveData
        qualifiedName: LagaRhino.CurveData
      VB:
      - id: LagaRhino.CurveData
        name: CurveData
        nameWithType: CurveData
        qualifiedName: LagaRhino.CurveData
    isDefinition: true
    commentId: T:LagaRhino.CurveData
  Rhino.Geometry.LineCurve:
    name:
      CSharp:
      - id: Rhino.Geometry.LineCurve
        name: LineCurve
        nameWithType: LineCurve
        qualifiedName: Rhino.Geometry.LineCurve
        isExternal: true
      VB:
      - id: Rhino.Geometry.LineCurve
        name: LineCurve
        nameWithType: LineCurve
        qualifiedName: Rhino.Geometry.LineCurve
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.LineCurve
  LagaRhino.LineCurveData.Axis*:
    name:
      CSharp:
      - id: LagaRhino.LineCurveData.Axis*
        name: Axis
        nameWithType: LineCurveData.Axis
        qualifiedName: LagaRhino.LineCurveData.Axis
      VB:
      - id: LagaRhino.LineCurveData.Axis*
        name: Axis
        nameWithType: LineCurveData.Axis
        qualifiedName: LagaRhino.LineCurveData.Axis
    isDefinition: true
    commentId: Overload:LagaRhino.LineCurveData.Axis
  LagaRhino.LineCurveData:
    name:
      CSharp:
      - id: LagaRhino.LineCurveData
        name: LineCurveData
        nameWithType: LineCurveData
        qualifiedName: LagaRhino.LineCurveData
      VB:
      - id: LagaRhino.LineCurveData
        name: LineCurveData
        nameWithType: LineCurveData
        qualifiedName: LagaRhino.LineCurveData
    isDefinition: true
    commentId: T:LagaRhino.LineCurveData
  Rhino.Geometry.Point3d:
    name:
      CSharp:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      VB:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.Point3d
  LagaRhino.PointData.MirrorPointQuadrant*:
    name:
      CSharp:
      - id: LagaRhino.PointData.MirrorPointQuadrant*
        name: MirrorPointQuadrant
        nameWithType: PointData.MirrorPointQuadrant
        qualifiedName: LagaRhino.PointData.MirrorPointQuadrant
      VB:
      - id: LagaRhino.PointData.MirrorPointQuadrant*
        name: MirrorPointQuadrant
        nameWithType: PointData.MirrorPointQuadrant
        qualifiedName: LagaRhino.PointData.MirrorPointQuadrant
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.MirrorPointQuadrant
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  LagaRhino.PointData.PointQuadrant*:
    name:
      CSharp:
      - id: LagaRhino.PointData.PointQuadrant*
        name: PointQuadrant
        nameWithType: PointData.PointQuadrant
        qualifiedName: LagaRhino.PointData.PointQuadrant
      VB:
      - id: LagaRhino.PointData.PointQuadrant*
        name: PointQuadrant
        nameWithType: PointData.PointQuadrant
        qualifiedName: LagaRhino.PointData.PointQuadrant
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.PointQuadrant
  LagaRhino.PointData.SortPointsByZ*:
    name:
      CSharp:
      - id: LagaRhino.PointData.SortPointsByZ*
        name: SortPointsByZ
        nameWithType: PointData.SortPointsByZ
        qualifiedName: LagaRhino.PointData.SortPointsByZ
      VB:
      - id: LagaRhino.PointData.SortPointsByZ*
        name: SortPointsByZ
        nameWithType: PointData.SortPointsByZ
        qualifiedName: LagaRhino.PointData.SortPointsByZ
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.SortPointsByZ
  LagaRhino.PointData.SortPointsByXY*:
    name:
      CSharp:
      - id: LagaRhino.PointData.SortPointsByXY*
        name: SortPointsByXY
        nameWithType: PointData.SortPointsByXY
        qualifiedName: LagaRhino.PointData.SortPointsByXY
      VB:
      - id: LagaRhino.PointData.SortPointsByXY*
        name: SortPointsByXY
        nameWithType: PointData.SortPointsByXY
        qualifiedName: LagaRhino.PointData.SortPointsByXY
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.SortPointsByXY
  System.Collections.Generic.List{Rhino.Geometry.Point3d[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
  LagaRhino.PointData.GroupByZ*:
    name:
      CSharp:
      - id: LagaRhino.PointData.GroupByZ*
        name: GroupByZ
        nameWithType: PointData.GroupByZ
        qualifiedName: LagaRhino.PointData.GroupByZ
      VB:
      - id: LagaRhino.PointData.GroupByZ*
        name: GroupByZ
        nameWithType: PointData.GroupByZ
        qualifiedName: LagaRhino.PointData.GroupByZ
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.GroupByZ
  LagaRhino.PointData.TwoPointsInterpolation*:
    name:
      CSharp:
      - id: LagaRhino.PointData.TwoPointsInterpolation*
        name: TwoPointsInterpolation
        nameWithType: PointData.TwoPointsInterpolation
        qualifiedName: LagaRhino.PointData.TwoPointsInterpolation
      VB:
      - id: LagaRhino.PointData.TwoPointsInterpolation*
        name: TwoPointsInterpolation
        nameWithType: PointData.TwoPointsInterpolation
        qualifiedName: LagaRhino.PointData.TwoPointsInterpolation
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.TwoPointsInterpolation
  Laga.Geometry:
    name:
      CSharp:
      - name: Laga.Geometry
        nameWithType: Laga.Geometry
        qualifiedName: Laga.Geometry
      VB:
      - name: Laga.Geometry
        nameWithType: Laga.Geometry
        qualifiedName: Laga.Geometry
    isDefinition: true
    commentId: N:Laga.Geometry
  Laga.Geometry.Vector:
    name:
      CSharp:
      - id: Laga.Geometry.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Laga.Geometry.Vector
      VB:
      - id: Laga.Geometry.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Laga.Geometry.Vector
    isDefinition: true
    parent: Laga.Geometry
    commentId: T:Laga.Geometry.Vector
  LagaRhino.PointData.VectorToPoint3d*:
    name:
      CSharp:
      - id: LagaRhino.PointData.VectorToPoint3d*
        name: VectorToPoint3d
        nameWithType: PointData.VectorToPoint3d
        qualifiedName: LagaRhino.PointData.VectorToPoint3d
      VB:
      - id: LagaRhino.PointData.VectorToPoint3d*
        name: VectorToPoint3d
        nameWithType: PointData.VectorToPoint3d
        qualifiedName: LagaRhino.PointData.VectorToPoint3d
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.VectorToPoint3d
  LagaRhino.PointData.Point3dToVector*:
    name:
      CSharp:
      - id: LagaRhino.PointData.Point3dToVector*
        name: Point3dToVector
        nameWithType: PointData.Point3dToVector
        qualifiedName: LagaRhino.PointData.Point3dToVector
      VB:
      - id: LagaRhino.PointData.Point3dToVector*
        name: Point3dToVector
        nameWithType: PointData.Point3dToVector
        qualifiedName: LagaRhino.PointData.Point3dToVector
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.Point3dToVector
  LagaRhino.PointData:
    name:
      CSharp:
      - id: LagaRhino.PointData
        name: PointData
        nameWithType: PointData
        qualifiedName: LagaRhino.PointData
      VB:
      - id: LagaRhino.PointData
        name: PointData
        nameWithType: PointData
        qualifiedName: LagaRhino.PointData
    isDefinition: true
    commentId: T:LagaRhino.PointData
  Rhino.Geometry.Brep:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.Brep
  Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
        name: TryConvertBrep
        nameWithType: Brep.TryConvertBrep
        qualifiedName: Rhino.Geometry.Brep.TryConvertBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
        name: TryConvertBrep
        nameWithType: Brep.TryConvertBrep
        qualifiedName: Rhino.Geometry.Brep.TryConvertBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.TryConvertBrep(Rhino.Geometry.GeometryBase)
  Rhino.Geometry.Brep.IsBox:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsBox
        name: IsBox
        nameWithType: Brep.IsBox
        qualifiedName: Rhino.Geometry.Brep.IsBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsBox
        name: IsBox
        nameWithType: Brep.IsBox
        qualifiedName: Rhino.Geometry.Brep.IsBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsBox
  Rhino.Geometry.Brep.IsBox(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsBox(System.Double)
        name: IsBox
        nameWithType: Brep.IsBox
        qualifiedName: Rhino.Geometry.Brep.IsBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsBox(System.Double)
        name: IsBox
        nameWithType: Brep.IsBox
        qualifiedName: Rhino.Geometry.Brep.IsBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsBox(System.Double)
  Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
        name: ChangeSeam
        nameWithType: Brep.ChangeSeam
        qualifiedName: Rhino.Geometry.Brep.ChangeSeam
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
        name: ChangeSeam
        nameWithType: Brep.ChangeSeam
        qualifiedName: Rhino.Geometry.Brep.ChangeSeam
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.ChangeSeam(Rhino.Geometry.BrepFace,System.Int32,System.Double,System.Double)
  Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
        name: CopyTrimCurves
        nameWithType: Brep.CopyTrimCurves
        qualifiedName: Rhino.Geometry.Brep.CopyTrimCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
        name: CopyTrimCurves
        nameWithType: Brep.CopyTrimCurves
        qualifiedName: Rhino.Geometry.Brep.CopyTrimCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CopyTrimCurves(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
        name: CreateBaseballSphere
        nameWithType: Brep.CreateBaseballSphere
        qualifiedName: Rhino.Geometry.Brep.CreateBaseballSphere
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
        name: CreateBaseballSphere
        nameWithType: Brep.CreateBaseballSphere
        qualifiedName: Rhino.Geometry.Brep.CreateBaseballSphere
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBaseballSphere(Rhino.Geometry.Point3d,System.Double,System.Double)
  Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
        name: CreateDevelopableLoft
        nameWithType: Brep.CreateDevelopableLoft
        qualifiedName: Rhino.Geometry.Brep.CreateDevelopableLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
        name: CreateDevelopableLoft
        nameWithType: Brep.CreateDevelopableLoft
        qualifiedName: Rhino.Geometry.Brep.CreateDevelopableLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Boolean,System.Int32)
  ? Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
        name: CreateDevelopableLoft
        nameWithType: Brep.CreateDevelopableLoft
        qualifiedName: Rhino.Geometry.Brep.CreateDevelopableLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.NurbsCurve
        name: NurbsCurve
        nameWithType: NurbsCurve
        qualifiedName: Rhino.Geometry.NurbsCurve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.NurbsCurve
        name: NurbsCurve
        nameWithType: NurbsCurve
        qualifiedName: Rhino.Geometry.NurbsCurve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
        name: CreateDevelopableLoft
        nameWithType: Brep.CreateDevelopableLoft
        qualifiedName: Rhino.Geometry.Brep.CreateDevelopableLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.NurbsCurve
        name: NurbsCurve
        nameWithType: NurbsCurve
        qualifiedName: Rhino.Geometry.NurbsCurve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.NurbsCurve
        name: NurbsCurve
        nameWithType: NurbsCurve
        qualifiedName: Rhino.Geometry.NurbsCurve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateDevelopableLoft(Rhino.Geometry.NurbsCurve,Rhino.Geometry.NurbsCurve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d})
  Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
        name: CreateFromMesh
        nameWithType: Brep.CreateFromMesh
        qualifiedName: Rhino.Geometry.Brep.CreateFromMesh
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Rhino.Geometry.Mesh
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
        name: CreateFromMesh
        nameWithType: Brep.CreateFromMesh
        qualifiedName: Rhino.Geometry.Brep.CreateFromMesh
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Rhino.Geometry.Mesh
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromMesh(Rhino.Geometry.Mesh,System.Boolean)
  Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
        name: CreateFromBox
        nameWithType: Brep.CreateFromBox
        qualifiedName: Rhino.Geometry.Brep.CreateFromBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BoundingBox
        name: BoundingBox
        nameWithType: BoundingBox
        qualifiedName: Rhino.Geometry.BoundingBox
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
        name: CreateFromBox
        nameWithType: Brep.CreateFromBox
        qualifiedName: Rhino.Geometry.Brep.CreateFromBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BoundingBox
        name: BoundingBox
        nameWithType: BoundingBox
        qualifiedName: Rhino.Geometry.BoundingBox
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.BoundingBox)
  Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
        name: CreateFromBox
        nameWithType: Brep.CreateFromBox
        qualifiedName: Rhino.Geometry.Brep.CreateFromBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Box
        name: Box
        nameWithType: Box
        qualifiedName: Rhino.Geometry.Box
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
        name: CreateFromBox
        nameWithType: Brep.CreateFromBox
        qualifiedName: Rhino.Geometry.Brep.CreateFromBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Box
        name: Box
        nameWithType: Box
        qualifiedName: Rhino.Geometry.Box
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromBox(Rhino.Geometry.Box)
  Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d}):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
        name: CreateFromBox
        nameWithType: Brep.CreateFromBox
        qualifiedName: Rhino.Geometry.Brep.CreateFromBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
        name: CreateFromBox
        nameWithType: Brep.CreateFromBox
        qualifiedName: Rhino.Geometry.Brep.CreateFromBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromBox(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})
  Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
        name: CreateFromCylinder
        nameWithType: Brep.CreateFromCylinder
        qualifiedName: Rhino.Geometry.Brep.CreateFromCylinder
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Cylinder
        name: Cylinder
        nameWithType: Cylinder
        qualifiedName: Rhino.Geometry.Cylinder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
        name: CreateFromCylinder
        nameWithType: Brep.CreateFromCylinder
        qualifiedName: Rhino.Geometry.Brep.CreateFromCylinder
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Cylinder
        name: Cylinder
        nameWithType: Cylinder
        qualifiedName: Rhino.Geometry.Cylinder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromCylinder(Rhino.Geometry.Cylinder,System.Boolean,System.Boolean)
  Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
        name: CreateFromSphere
        nameWithType: Brep.CreateFromSphere
        qualifiedName: Rhino.Geometry.Brep.CreateFromSphere
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Sphere
        name: Sphere
        nameWithType: Sphere
        qualifiedName: Rhino.Geometry.Sphere
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
        name: CreateFromSphere
        nameWithType: Brep.CreateFromSphere
        qualifiedName: Rhino.Geometry.Brep.CreateFromSphere
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Sphere
        name: Sphere
        nameWithType: Sphere
        qualifiedName: Rhino.Geometry.Sphere
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSphere(Rhino.Geometry.Sphere)
  Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
        name: CreateQuadSphere
        nameWithType: Brep.CreateQuadSphere
        qualifiedName: Rhino.Geometry.Brep.CreateQuadSphere
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Sphere
        name: Sphere
        nameWithType: Sphere
        qualifiedName: Rhino.Geometry.Sphere
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
        name: CreateQuadSphere
        nameWithType: Brep.CreateQuadSphere
        qualifiedName: Rhino.Geometry.Brep.CreateQuadSphere
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Sphere
        name: Sphere
        nameWithType: Sphere
        qualifiedName: Rhino.Geometry.Sphere
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateQuadSphere(Rhino.Geometry.Sphere)
  Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
        name: CreateFromCone
        nameWithType: Brep.CreateFromCone
        qualifiedName: Rhino.Geometry.Brep.CreateFromCone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Cone
        name: Cone
        nameWithType: Cone
        qualifiedName: Rhino.Geometry.Cone
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
        name: CreateFromCone
        nameWithType: Brep.CreateFromCone
        qualifiedName: Rhino.Geometry.Brep.CreateFromCone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Cone
        name: Cone
        nameWithType: Cone
        qualifiedName: Rhino.Geometry.Cone
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromCone(Rhino.Geometry.Cone,System.Boolean)
  Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
        name: CreateFromRevSurface
        nameWithType: Brep.CreateFromRevSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFromRevSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.RevSurface
        name: RevSurface
        nameWithType: RevSurface
        qualifiedName: Rhino.Geometry.RevSurface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
        name: CreateFromRevSurface
        nameWithType: Brep.CreateFromRevSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFromRevSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.RevSurface
        name: RevSurface
        nameWithType: RevSurface
        qualifiedName: Rhino.Geometry.RevSurface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromRevSurface(Rhino.Geometry.RevSurface,System.Boolean,System.Boolean)
  Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
        name: CreateFromSurface
        nameWithType: Brep.CreateFromSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFromSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
        name: CreateFromSurface
        nameWithType: Brep.CreateFromSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFromSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSurface(Rhino.Geometry.Surface)
  Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
        name: CreateTrimmedPlane
        nameWithType: Brep.CreateTrimmedPlane
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedPlane
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
        name: CreateTrimmedPlane
        nameWithType: Brep.CreateTrimmedPlane
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedPlane
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,Rhino.Geometry.Curve)
  Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve}):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
        name: CreateTrimmedPlane
        nameWithType: Brep.CreateTrimmedPlane
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedPlane
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
        name: CreateTrimmedPlane
        nameWithType: Brep.CreateTrimmedPlane
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedPlane
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateTrimmedPlane(Rhino.Geometry.Plane,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve}):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve)
  Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Geometry.Curve,System.Double)
  Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
        name: CreateTrimmedSurface
        nameWithType: Brep.CreateTrimmedSurface
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
        name: CreateTrimmedSurface
        nameWithType: Brep.CreateTrimmedSurface
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface)
  Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
        name: CreateTrimmedSurface
        nameWithType: Brep.CreateTrimmedSurface
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
        name: CreateTrimmedSurface
        nameWithType: Brep.CreateTrimmedSurface
        qualifiedName: Rhino.Geometry.Brep.CreateTrimmedSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateTrimmedSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Surface,System.Double)
  Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
        name: CreateFromCornerPoints
        nameWithType: Brep.CreateFromCornerPoints
        qualifiedName: Rhino.Geometry.Brep.CreateFromCornerPoints
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
        name: CreateFromCornerPoints
        nameWithType: Brep.CreateFromCornerPoints
        qualifiedName: Rhino.Geometry.Brep.CreateFromCornerPoints
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  ? Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
        name: CreateFromCornerPoints
        nameWithType: Brep.CreateFromCornerPoints
        qualifiedName: Rhino.Geometry.Brep.CreateFromCornerPoints
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
        name: CreateFromCornerPoints
        nameWithType: Brep.CreateFromCornerPoints
        qualifiedName: Rhino.Geometry.Brep.CreateFromCornerPoints
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromCornerPoints(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve}):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
        name: CreateEdgeSurface
        nameWithType: Brep.CreateEdgeSurface
        qualifiedName: Rhino.Geometry.Brep.CreateEdgeSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
        name: CreateEdgeSurface
        nameWithType: Brep.CreateEdgeSurface
        qualifiedName: Rhino.Geometry.Brep.CreateEdgeSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateEdgeSurface(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})
  Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Collections.CurveList
        name: CurveList
        nameWithType: CurveList
        qualifiedName: Rhino.Collections.CurveList
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Collections.CurveList
        name: CurveList
        nameWithType: CurveList
        qualifiedName: Rhino.Collections.CurveList
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList)
  Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Collections.CurveList
        name: CurveList
        nameWithType: CurveList
        qualifiedName: Rhino.Collections.CurveList
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
        name: CreatePlanarBreps
        nameWithType: Brep.CreatePlanarBreps
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Collections.CurveList
        name: CurveList
        nameWithType: CurveList
        qualifiedName: Rhino.Collections.CurveList
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarBreps(Rhino.Collections.CurveList,System.Double)
  Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
        name: CreateFromOffsetFace
        nameWithType: Brep.CreateFromOffsetFace
        qualifiedName: Rhino.Geometry.Brep.CreateFromOffsetFace
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
        name: CreateFromOffsetFace
        nameWithType: Brep.CreateFromOffsetFace
        qualifiedName: Rhino.Geometry.Brep.CreateFromOffsetFace
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromOffsetFace(Rhino.Geometry.BrepFace,System.Double,System.Double,System.Boolean,System.Boolean)
  Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateSolid
        nameWithType: Brep.CreateSolid
        qualifiedName: Rhino.Geometry.Brep.CreateSolid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateSolid
        nameWithType: Brep.CreateSolid
        qualifiedName: Rhino.Geometry.Brep.CreateSolid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateSolid(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
        name: MergeSurfaces
        nameWithType: Brep.MergeSurfaces
        qualifiedName: Rhino.Geometry.Brep.MergeSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
        name: MergeSurfaces
        nameWithType: Brep.MergeSurfaces
        qualifiedName: Rhino.Geometry.Brep.MergeSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Surface,Rhino.Geometry.Surface,System.Double,System.Double)
  Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
        name: MergeSurfaces
        nameWithType: Brep.MergeSurfaces
        qualifiedName: Rhino.Geometry.Brep.MergeSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
        name: MergeSurfaces
        nameWithType: Brep.MergeSurfaces
        qualifiedName: Rhino.Geometry.Brep.MergeSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double)
  ? Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
        name: MergeSurfaces
        nameWithType: Brep.MergeSurfaces
        qualifiedName: Rhino.Geometry.Brep.MergeSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
        name: MergeSurfaces
        nameWithType: Brep.MergeSurfaces
        qualifiedName: Rhino.Geometry.Brep.MergeSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeSurfaces(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Double,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,System.Double,System.Boolean)
  ? Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
        name: CreatePatch
        nameWithType: Brep.CreatePatch
        qualifiedName: Rhino.Geometry.Brep.CreatePatch
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
        name: CreatePatch
        nameWithType: Brep.CreatePatch
        qualifiedName: Rhino.Geometry.Brep.CreatePatch
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Double)
  ? Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
        name: CreatePatch
        nameWithType: Brep.CreatePatch
        qualifiedName: Rhino.Geometry.Brep.CreatePatch
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
        name: CreatePatch
        nameWithType: Brep.CreatePatch
        qualifiedName: Rhino.Geometry.Brep.CreatePatch
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},System.Int32,System.Int32,System.Double)
  ? Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
        name: CreatePatch
        nameWithType: Brep.CreatePatch
        qualifiedName: Rhino.Geometry.Brep.CreatePatch
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
        name: CreatePatch
        nameWithType: Brep.CreatePatch
        qualifiedName: Rhino.Geometry.Brep.CreatePatch
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePatch(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Surface,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Boolean[],System.Double)
  ? Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreatePipe
        nameWithType: Brep.CreatePipe
        qualifiedName: Rhino.Geometry.Brep.CreatePipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreatePipe
        nameWithType: Brep.CreatePipe
        qualifiedName: Rhino.Geometry.Brep.CreatePipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  ? Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreatePipe
        nameWithType: Brep.CreatePipe
        qualifiedName: Rhino.Geometry.Brep.CreatePipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreatePipe
        nameWithType: Brep.CreatePipe
        qualifiedName: Rhino.Geometry.Brep.CreatePipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  ? Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreateThickPipe
        nameWithType: Brep.CreateThickPipe
        qualifiedName: Rhino.Geometry.Brep.CreateThickPipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreateThickPipe
        nameWithType: Brep.CreateThickPipe
        qualifiedName: Rhino.Geometry.Brep.CreateThickPipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Double,System.Double,System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  ? Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreateThickPipe
        nameWithType: Brep.CreateThickPipe
        qualifiedName: Rhino.Geometry.Brep.CreateThickPipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
        name: CreateThickPipe
        nameWithType: Brep.CreateThickPipe
        qualifiedName: Rhino.Geometry.Brep.CreateThickPipe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.PipeCapMode
        name: PipeCapMode
        nameWithType: PipeCapMode
        qualifiedName: Rhino.Geometry.PipeCapMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateThickPipe(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Boolean,Rhino.Geometry.PipeCapMode,System.Boolean,System.Double,System.Double)
  Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepFrame
        name: SweepFrame
        nameWithType: SweepFrame
        qualifiedName: Rhino.Geometry.SweepFrame
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepBlend
        name: SweepBlend
        nameWithType: SweepBlend
        qualifiedName: Rhino.Geometry.SweepBlend
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepMiter
        name: SweepMiter
        nameWithType: SweepMiter
        qualifiedName: Rhino.Geometry.SweepMiter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepFrame
        name: SweepFrame
        nameWithType: SweepFrame
        qualifiedName: Rhino.Geometry.SweepFrame
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepBlend
        name: SweepBlend
        nameWithType: SweepBlend
        qualifiedName: Rhino.Geometry.SweepBlend
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepMiter
        name: SweepMiter
        nameWithType: SweepMiter
        qualifiedName: Rhino.Geometry.SweepMiter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
        name: CreateFromSweepSegmented
        nameWithType: Brep.CreateFromSweepSegmented
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepSegmented
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
        name: CreateFromSweepSegmented
        nameWithType: Brep.CreateFromSweepSegmented
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepSegmented
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
        name: CreateFromSweepSegmented
        nameWithType: Brep.CreateFromSweepSegmented
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepSegmented
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
        name: CreateFromSweepSegmented
        nameWithType: Brep.CreateFromSweepSegmented
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepSegmented
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
        name: CreateFromSweepSegmented
        nameWithType: Brep.CreateFromSweepSegmented
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepSegmented
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepFrame
        name: SweepFrame
        nameWithType: SweepFrame
        qualifiedName: Rhino.Geometry.SweepFrame
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepBlend
        name: SweepBlend
        nameWithType: SweepBlend
        qualifiedName: Rhino.Geometry.SweepBlend
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepMiter
        name: SweepMiter
        nameWithType: SweepMiter
        qualifiedName: Rhino.Geometry.SweepMiter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
        name: CreateFromSweepSegmented
        nameWithType: Brep.CreateFromSweepSegmented
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepSegmented
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepFrame
        name: SweepFrame
        nameWithType: SweepFrame
        qualifiedName: Rhino.Geometry.SweepFrame
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepBlend
        name: SweepBlend
        nameWithType: SweepBlend
        qualifiedName: Rhino.Geometry.SweepBlend
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepMiter
        name: SweepMiter
        nameWithType: SweepMiter
        qualifiedName: Rhino.Geometry.SweepMiter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweepSegmented(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.SweepFrame,Rhino.Geometry.Vector3d,System.Boolean,Rhino.Geometry.SweepBlend,Rhino.Geometry.SweepMiter,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double)
  Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean)
  ? Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean,System.Boolean)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean,System.Boolean)
        name: CreateFromSweep
        nameWithType: Brep.CreateFromSweep
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.SweepRebuild
        name: SweepRebuild
        nameWithType: SweepRebuild
        qualifiedName: Rhino.Geometry.SweepRebuild
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweep(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Double,Rhino.Geometry.SweepRebuild,System.Int32,System.Double,System.Boolean,System.Boolean)
  ? Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
        name: CreateFromSweepInParts
        nameWithType: Brep.CreateFromSweepInParts
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepInParts
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
        name: CreateFromSweepInParts
        nameWithType: Brep.CreateFromSweepInParts
        qualifiedName: Rhino.Geometry.Brep.CreateFromSweepInParts
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromSweepInParts(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Collections.Generic.IEnumerable{Rhino.Geometry.Point2d},System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
        name: CreateFromTaperedExtrude
        nameWithType: Brep.CreateFromTaperedExtrude
        qualifiedName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.ExtrudeCornerType
        name: ExtrudeCornerType
        nameWithType: ExtrudeCornerType
        qualifiedName: Rhino.Geometry.ExtrudeCornerType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
        name: CreateFromTaperedExtrude
        nameWithType: Brep.CreateFromTaperedExtrude
        qualifiedName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.ExtrudeCornerType
        name: ExtrudeCornerType
        nameWithType: ExtrudeCornerType
        qualifiedName: Rhino.Geometry.ExtrudeCornerType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType,System.Double,System.Double)
  ? Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
        name: CreateFromTaperedExtrude
        nameWithType: Brep.CreateFromTaperedExtrude
        qualifiedName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.ExtrudeCornerType
        name: ExtrudeCornerType
        nameWithType: ExtrudeCornerType
        qualifiedName: Rhino.Geometry.ExtrudeCornerType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
        name: CreateFromTaperedExtrude
        nameWithType: Brep.CreateFromTaperedExtrude
        qualifiedName: Rhino.Geometry.Brep.CreateFromTaperedExtrude
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.ExtrudeCornerType
        name: ExtrudeCornerType
        nameWithType: ExtrudeCornerType
        qualifiedName: Rhino.Geometry.ExtrudeCornerType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromTaperedExtrude(Rhino.Geometry.Curve,System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d,System.Double,Rhino.Geometry.ExtrudeCornerType)
  ? Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
        name: CreateFromTaperedExtrudeWithRef
        nameWithType: Brep.CreateFromTaperedExtrudeWithRef
        qualifiedName: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
        name: CreateFromTaperedExtrudeWithRef
        nameWithType: Brep.CreateFromTaperedExtrudeWithRef
        qualifiedName: Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromTaperedExtrudeWithRef(Rhino.Geometry.Curve,Rhino.Geometry.Vector3d,System.Double,System.Double,Rhino.Geometry.Plane,System.Double)
  ? Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
        name: CreateBlendSurface
        nameWithType: Brep.CreateBlendSurface
        qualifiedName: Rhino.Geometry.Brep.CreateBlendSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Interval
        name: Interval
        nameWithType: Interval
        qualifiedName: Rhino.Geometry.Interval
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Interval
        name: Interval
        nameWithType: Interval
        qualifiedName: Rhino.Geometry.Interval
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
        name: CreateBlendSurface
        nameWithType: Brep.CreateBlendSurface
        qualifiedName: Rhino.Geometry.Brep.CreateBlendSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Interval
        name: Interval
        nameWithType: Interval
        qualifiedName: Rhino.Geometry.Interval
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Interval
        name: Interval
        nameWithType: Interval
        qualifiedName: Rhino.Geometry.Interval
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBlendSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,Rhino.Geometry.Interval,System.Boolean,Rhino.Geometry.BlendContinuity)
  ? Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
        name: CreateBlendShape
        nameWithType: Brep.CreateBlendShape
        qualifiedName: Rhino.Geometry.Brep.CreateBlendShape
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
        name: CreateBlendShape
        nameWithType: Brep.CreateBlendShape
        qualifiedName: Rhino.Geometry.Brep.CreateBlendShape
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepEdge
        name: BrepEdge
        nameWithType: BrepEdge
        qualifiedName: Rhino.Geometry.BrepEdge
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendContinuity
        name: BlendContinuity
        nameWithType: BlendContinuity
        qualifiedName: Rhino.Geometry.BlendContinuity
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBlendShape(Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity,Rhino.Geometry.BrepFace,Rhino.Geometry.BrepEdge,System.Double,System.Boolean,Rhino.Geometry.BlendContinuity)
  ? Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
        name: CreateFilletSurface
        nameWithType: Brep.CreateFilletSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFilletSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
        name: CreateFilletSurface
        nameWithType: Brep.CreateFilletSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFilletSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateFilletSurface
        nameWithType: Brep.CreateFilletSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFilletSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateFilletSurface
        nameWithType: Brep.CreateFilletSurface
        qualifiedName: Rhino.Geometry.Brep.CreateFilletSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFilletSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  ? Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
        name: CreateChamferSurface
        nameWithType: Brep.CreateChamferSurface
        qualifiedName: Rhino.Geometry.Brep.CreateChamferSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
        name: CreateChamferSurface
        nameWithType: Brep.CreateChamferSurface
        qualifiedName: Rhino.Geometry.Brep.CreateChamferSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateChamferSurface
        nameWithType: Brep.CreateChamferSurface
        qualifiedName: Rhino.Geometry.Brep.CreateChamferSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateChamferSurface
        nameWithType: Brep.CreateChamferSurface
        qualifiedName: Rhino.Geometry.Brep.CreateChamferSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point2d
        name: Point2d
        nameWithType: Point2d
        qualifiedName: Rhino.Geometry.Point2d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateChamferSurface(Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,Rhino.Geometry.BrepFace,Rhino.Geometry.Point2d,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  ? Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
        name: CreateFilletEdges
        nameWithType: Brep.CreateFilletEdges
        qualifiedName: Rhino.Geometry.Brep.CreateFilletEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendType
        name: BlendType
        nameWithType: BlendType
        qualifiedName: Rhino.Geometry.BlendType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.RailType
        name: RailType
        nameWithType: RailType
        qualifiedName: Rhino.Geometry.RailType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
        name: CreateFilletEdges
        nameWithType: Brep.CreateFilletEdges
        qualifiedName: Rhino.Geometry.Brep.CreateFilletEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BlendType
        name: BlendType
        nameWithType: BlendType
        qualifiedName: Rhino.Geometry.BlendType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.RailType
        name: RailType
        nameWithType: RailType
        qualifiedName: Rhino.Geometry.RailType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFilletEdges(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},Rhino.Geometry.BlendType,Rhino.Geometry.RailType,System.Double)
  ? Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateOffsetBrep
        nameWithType: Brep.CreateOffsetBrep
        qualifiedName: Rhino.Geometry.Brep.CreateOffsetBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateOffsetBrep
        nameWithType: Brep.CreateOffsetBrep
        qualifiedName: Rhino.Geometry.Brep.CreateOffsetBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  ? Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateOffsetBrep
        nameWithType: Brep.CreateOffsetBrep
        qualifiedName: Rhino.Geometry.Brep.CreateOffsetBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
        name: CreateOffsetBrep
        nameWithType: Brep.CreateOffsetBrep
        qualifiedName: Rhino.Geometry.Brep.CreateOffsetBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateOffsetBrep(Rhino.Geometry.Brep,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,Rhino.Geometry.Brep[]@,Rhino.Geometry.Brep[]@)
  Rhino.Geometry.Brep.RemoveFins:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.RemoveFins
        name: RemoveFins
        nameWithType: Brep.RemoveFins
        qualifiedName: Rhino.Geometry.Brep.RemoveFins
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.RemoveFins
        name: RemoveFins
        nameWithType: Brep.RemoveFins
        qualifiedName: Rhino.Geometry.Brep.RemoveFins
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.RemoveFins
  Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
        name: CreateFromJoinedEdges
        nameWithType: Brep.CreateFromJoinedEdges
        qualifiedName: Rhino.Geometry.Brep.CreateFromJoinedEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
        name: CreateFromJoinedEdges
        nameWithType: Brep.CreateFromJoinedEdges
        qualifiedName: Rhino.Geometry.Brep.CreateFromJoinedEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromJoinedEdges(Rhino.Geometry.Brep,System.Int32,Rhino.Geometry.Brep,System.Int32,System.Double)
  ? Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
        name: CreateFromLoft
        nameWithType: Brep.CreateFromLoft
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
        name: CreateFromLoft
        nameWithType: Brep.CreateFromLoft
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)
  ? Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
        name: CreateFromLoftRebuild
        nameWithType: Brep.CreateFromLoftRebuild
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoftRebuild
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
        name: CreateFromLoftRebuild
        nameWithType: Brep.CreateFromLoftRebuild
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoftRebuild
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromLoftRebuild(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Int32)
  ? Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
        name: CreateFromLoftRefit
        nameWithType: Brep.CreateFromLoftRefit
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoftRefit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
        name: CreateFromLoftRefit
        nameWithType: Brep.CreateFromLoftRefit
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoftRefit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromLoftRefit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean,System.Double)
  ? Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
        name: CreateFromLoft
        nameWithType: Brep.CreateFromLoft
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepTrim
        name: BrepTrim
        nameWithType: BrepTrim
        qualifiedName: Rhino.Geometry.BrepTrim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepTrim
        name: BrepTrim
        nameWithType: BrepTrim
        qualifiedName: Rhino.Geometry.BrepTrim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
        name: CreateFromLoft
        nameWithType: Brep.CreateFromLoft
        qualifiedName: Rhino.Geometry.Brep.CreateFromLoft
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepTrim
        name: BrepTrim
        nameWithType: BrepTrim
        qualifiedName: Rhino.Geometry.BrepTrim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.BrepTrim
        name: BrepTrim
        nameWithType: BrepTrim
        qualifiedName: Rhino.Geometry.BrepTrim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.LoftType
        name: LoftType
        nameWithType: LoftType
        qualifiedName: Rhino.Geometry.LoftType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Boolean,System.Boolean,Rhino.Geometry.BrepTrim,Rhino.Geometry.BrepTrim,Rhino.Geometry.LoftType,System.Boolean)
  ? Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarUnion
        nameWithType: Brep.CreatePlanarUnion
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarUnion
        nameWithType: Brep.CreatePlanarUnion
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},Rhino.Geometry.Plane,System.Double)
  Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarUnion
        nameWithType: Brep.CreatePlanarUnion
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarUnion
        nameWithType: Brep.CreatePlanarUnion
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarUnion(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarDifference
        nameWithType: Brep.CreatePlanarDifference
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarDifference
        nameWithType: Brep.CreatePlanarDifference
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarIntersection
        nameWithType: Brep.CreatePlanarIntersection
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
        name: CreatePlanarIntersection
        nameWithType: Brep.CreatePlanarIntersection
        qualifiedName: Rhino.Geometry.Brep.CreatePlanarIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreatePlanarIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,Rhino.Geometry.Plane,System.Double)
  Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanUnion
        nameWithType: Brep.CreateBooleanUnion
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanUnion
        nameWithType: Brep.CreateBooleanUnion
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
        name: CreateBooleanUnion
        nameWithType: Brep.CreateBooleanUnion
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
        name: CreateBooleanUnion
        nameWithType: Brep.CreateBooleanUnion
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanUnion
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanUnion(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  ? Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  ? Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
        name: CreateBooleanIntersection
        nameWithType: Brep.CreateBooleanIntersection
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanIntersection
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanIntersection(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  ? Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  ? Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double,System.Boolean)
  Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
        name: CreateBooleanDifference
        nameWithType: Brep.CreateBooleanDifference
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanDifference
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanDifference(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double,System.Boolean)
  Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
        name: CreateBooleanSplit
        nameWithType: Brep.CreateBooleanSplit
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanSplit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
        name: CreateBooleanSplit
        nameWithType: Brep.CreateBooleanSplit
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanSplit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanSplit(Rhino.Geometry.Brep,Rhino.Geometry.Brep,System.Double)
  ? Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanSplit
        nameWithType: Brep.CreateBooleanSplit
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanSplit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: CreateBooleanSplit
        nameWithType: Brep.CreateBooleanSplit
        qualifiedName: Rhino.Geometry.Brep.CreateBooleanSplit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateBooleanSplit(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  ? Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
        name: CreateShell
        nameWithType: Brep.CreateShell
        qualifiedName: Rhino.Geometry.Brep.CreateShell
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
        name: CreateShell
        nameWithType: Brep.CreateShell
        qualifiedName: Rhino.Geometry.Brep.CreateShell
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateShell(Rhino.Geometry.Brep,System.Collections.Generic.IEnumerable{System.Int32},System.Double,System.Double)
  Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: JoinBreps
        nameWithType: Brep.JoinBreps
        qualifiedName: Rhino.Geometry.Brep.JoinBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: JoinBreps
        nameWithType: Brep.JoinBreps
        qualifiedName: Rhino.Geometry.Brep.JoinBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.JoinBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: MergeBreps
        nameWithType: Brep.MergeBreps
        qualifiedName: Rhino.Geometry.Brep.MergeBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: MergeBreps
        nameWithType: Brep.MergeBreps
        qualifiedName: Rhino.Geometry.Brep.MergeBreps
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeBreps(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
        name: CreateContourCurves
        nameWithType: Brep.CreateContourCurves
        qualifiedName: Rhino.Geometry.Brep.CreateContourCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
        name: CreateContourCurves
        nameWithType: Brep.CreateContourCurves
        qualifiedName: Rhino.Geometry.Brep.CreateContourCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
  Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
        name: CreateContourCurves
        nameWithType: Brep.CreateContourCurves
        qualifiedName: Rhino.Geometry.Brep.CreateContourCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
        name: CreateContourCurves
        nameWithType: Brep.CreateContourCurves
        qualifiedName: Rhino.Geometry.Brep.CreateContourCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateContourCurves(Rhino.Geometry.Brep,Rhino.Geometry.Plane)
  Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
        name: CreateCurvatureAnalysisMesh
        nameWithType: Brep.CreateCurvatureAnalysisMesh
        qualifiedName: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
        name: CurvatureAnalysisSettingsState
        nameWithType: CurvatureAnalysisSettingsState
        qualifiedName: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
        name: CreateCurvatureAnalysisMesh
        nameWithType: Brep.CreateCurvatureAnalysisMesh
        qualifiedName: Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
        name: CurvatureAnalysisSettingsState
        nameWithType: CurvatureAnalysisSettingsState
        qualifiedName: Rhino.ApplicationSettings.CurvatureAnalysisSettingsState
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CreateCurvatureAnalysisMesh(Rhino.Geometry.Brep,Rhino.ApplicationSettings.CurvatureAnalysisSettingsState)
  Rhino.Geometry.Brep.DestroyRegionTopology:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DestroyRegionTopology
        name: DestroyRegionTopology
        nameWithType: Brep.DestroyRegionTopology
        qualifiedName: Rhino.Geometry.Brep.DestroyRegionTopology
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DestroyRegionTopology
        name: DestroyRegionTopology
        nameWithType: Brep.DestroyRegionTopology
        qualifiedName: Rhino.Geometry.Brep.DestroyRegionTopology
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DestroyRegionTopology
  Rhino.Geometry.Brep.GetRegions:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetRegions
        name: GetRegions
        nameWithType: Brep.GetRegions
        qualifiedName: Rhino.Geometry.Brep.GetRegions
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetRegions
        name: GetRegions
        nameWithType: Brep.GetRegions
        qualifiedName: Rhino.Geometry.Brep.GetRegions
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetRegions
  Rhino.Geometry.Brep.Duplicate:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Duplicate
        name: Duplicate
        nameWithType: Brep.Duplicate
        qualifiedName: Rhino.Geometry.Brep.Duplicate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Duplicate
        name: Duplicate
        nameWithType: Brep.Duplicate
        qualifiedName: Rhino.Geometry.Brep.Duplicate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Duplicate
  Rhino.Geometry.Brep.DuplicateBrep:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DuplicateBrep
        name: DuplicateBrep
        nameWithType: Brep.DuplicateBrep
        qualifiedName: Rhino.Geometry.Brep.DuplicateBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DuplicateBrep
        name: DuplicateBrep
        nameWithType: Brep.DuplicateBrep
        qualifiedName: Rhino.Geometry.Brep.DuplicateBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DuplicateBrep
  Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32}):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
        name: DuplicateSubBrep
        nameWithType: Brep.DuplicateSubBrep
        qualifiedName: Rhino.Geometry.Brep.DuplicateSubBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
        name: DuplicateSubBrep
        nameWithType: Brep.DuplicateSubBrep
        qualifiedName: Rhino.Geometry.Brep.DuplicateSubBrep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DuplicateSubBrep(System.Collections.Generic.IEnumerable{System.Int32})
  Rhino.Geometry.Brep.DuplicateEdgeCurves:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DuplicateEdgeCurves
        name: DuplicateEdgeCurves
        nameWithType: Brep.DuplicateEdgeCurves
        qualifiedName: Rhino.Geometry.Brep.DuplicateEdgeCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DuplicateEdgeCurves
        name: DuplicateEdgeCurves
        nameWithType: Brep.DuplicateEdgeCurves
        qualifiedName: Rhino.Geometry.Brep.DuplicateEdgeCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DuplicateEdgeCurves
  Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
        name: DuplicateEdgeCurves
        nameWithType: Brep.DuplicateEdgeCurves
        qualifiedName: Rhino.Geometry.Brep.DuplicateEdgeCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
        name: DuplicateEdgeCurves
        nameWithType: Brep.DuplicateEdgeCurves
        qualifiedName: Rhino.Geometry.Brep.DuplicateEdgeCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DuplicateEdgeCurves(System.Boolean)
  Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
        name: DuplicateNakedEdgeCurves
        nameWithType: Brep.DuplicateNakedEdgeCurves
        qualifiedName: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
        name: DuplicateNakedEdgeCurves
        nameWithType: Brep.DuplicateNakedEdgeCurves
        qualifiedName: Rhino.Geometry.Brep.DuplicateNakedEdgeCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DuplicateNakedEdgeCurves(System.Boolean,System.Boolean)
  Rhino.Geometry.Brep.GetConnectedComponents:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetConnectedComponents
        name: GetConnectedComponents
        nameWithType: Brep.GetConnectedComponents
        qualifiedName: Rhino.Geometry.Brep.GetConnectedComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetConnectedComponents
        name: GetConnectedComponents
        nameWithType: Brep.GetConnectedComponents
        qualifiedName: Rhino.Geometry.Brep.GetConnectedComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetConnectedComponents
  Rhino.Geometry.Brep.GetWireframe(System.Int32):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetWireframe(System.Int32)
        name: GetWireframe
        nameWithType: Brep.GetWireframe
        qualifiedName: Rhino.Geometry.Brep.GetWireframe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetWireframe(System.Int32)
        name: GetWireframe
        nameWithType: Brep.GetWireframe
        qualifiedName: Rhino.Geometry.Brep.GetWireframe
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetWireframe(System.Int32)
  Rhino.Geometry.Brep.DuplicateVertices:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.DuplicateVertices
        name: DuplicateVertices
        nameWithType: Brep.DuplicateVertices
        qualifiedName: Rhino.Geometry.Brep.DuplicateVertices
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.DuplicateVertices
        name: DuplicateVertices
        nameWithType: Brep.DuplicateVertices
        qualifiedName: Rhino.Geometry.Brep.DuplicateVertices
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.DuplicateVertices
  Rhino.Geometry.Brep.Flip:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Flip
        name: Flip
        nameWithType: Brep.Flip
        qualifiedName: Rhino.Geometry.Brep.Flip
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Flip
        name: Flip
        nameWithType: Brep.Flip
        qualifiedName: Rhino.Geometry.Brep.Flip
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Flip
  Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
        name: IsDuplicate
        nameWithType: Brep.IsDuplicate
        qualifiedName: Rhino.Geometry.Brep.IsDuplicate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
        name: IsDuplicate
        nameWithType: Brep.IsDuplicate
        qualifiedName: Rhino.Geometry.Brep.IsDuplicate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsDuplicate(Rhino.Geometry.Brep,System.Double)
  Rhino.Geometry.Brep.IsValidTopology(System.String@):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsValidTopology(System.String@)
        name: IsValidTopology
        nameWithType: Brep.IsValidTopology
        qualifiedName: Rhino.Geometry.Brep.IsValidTopology
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsValidTopology(System.String@)
        name: IsValidTopology
        nameWithType: Brep.IsValidTopology
        qualifiedName: Rhino.Geometry.Brep.IsValidTopology
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsValidTopology(System.String@)
  Rhino.Geometry.Brep.IsValidGeometry(System.String@):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsValidGeometry(System.String@)
        name: IsValidGeometry
        nameWithType: Brep.IsValidGeometry
        qualifiedName: Rhino.Geometry.Brep.IsValidGeometry
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsValidGeometry(System.String@)
        name: IsValidGeometry
        nameWithType: Brep.IsValidGeometry
        qualifiedName: Rhino.Geometry.Brep.IsValidGeometry
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsValidGeometry(System.String@)
  Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
        name: IsValidTolerancesAndFlags
        nameWithType: Brep.IsValidTolerancesAndFlags
        qualifiedName: Rhino.Geometry.Brep.IsValidTolerancesAndFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
        name: IsValidTolerancesAndFlags
        nameWithType: Brep.IsValidTolerancesAndFlags
        qualifiedName: Rhino.Geometry.Brep.IsValidTolerancesAndFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsValidTolerancesAndFlags(System.String@)
  Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
        name: ClosestPoint
        nameWithType: Brep.ClosestPoint
        qualifiedName: Rhino.Geometry.Brep.ClosestPoint
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
        name: ClosestPoint
        nameWithType: Brep.ClosestPoint
        qualifiedName: Rhino.Geometry.Brep.ClosestPoint
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d)
  ? Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
        name: ClosestPoint
        nameWithType: Brep.ClosestPoint
        qualifiedName: Rhino.Geometry.Brep.ClosestPoint
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.ComponentIndex
        name: ComponentIndex
        nameWithType: ComponentIndex
        qualifiedName: Rhino.Geometry.ComponentIndex
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
        name: ClosestPoint
        nameWithType: Brep.ClosestPoint
        qualifiedName: Rhino.Geometry.Brep.ClosestPoint
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.ComponentIndex
        name: ComponentIndex
        nameWithType: ComponentIndex
        qualifiedName: Rhino.Geometry.ComponentIndex
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.ClosestPoint(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@,Rhino.Geometry.ComponentIndex@,System.Double@,System.Double@,System.Double,Rhino.Geometry.Vector3d@)
  ? Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
        name: FindCoincidentBrepComponents
        nameWithType: Brep.FindCoincidentBrepComponents
        qualifiedName: Rhino.Geometry.Brep.FindCoincidentBrepComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
        name: FindCoincidentBrepComponents
        nameWithType: Brep.FindCoincidentBrepComponents
        qualifiedName: Rhino.Geometry.Brep.FindCoincidentBrepComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.FindCoincidentBrepComponents(Rhino.Geometry.Point3d,System.Double,System.Int32[]@,System.Int32[]@,System.Int32[]@)
  Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
        name: IsPointInside
        nameWithType: Brep.IsPointInside
        qualifiedName: Rhino.Geometry.Brep.IsPointInside
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
        name: IsPointInside
        nameWithType: Brep.IsPointInside
        qualifiedName: Rhino.Geometry.Brep.IsPointInside
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.IsPointInside(Rhino.Geometry.Point3d,System.Double,System.Boolean)
  Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
        name: GetPointInside
        nameWithType: Brep.GetPointInside
        qualifiedName: Rhino.Geometry.Brep.GetPointInside
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
        name: GetPointInside
        nameWithType: Brep.GetPointInside
        qualifiedName: Rhino.Geometry.Brep.GetPointInside
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetPointInside(System.Double,Rhino.Geometry.Point3d@)
  Rhino.Geometry.Brep.CapPlanarHoles(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
        name: CapPlanarHoles
        nameWithType: Brep.CapPlanarHoles
        qualifiedName: Rhino.Geometry.Brep.CapPlanarHoles
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
        name: CapPlanarHoles
        nameWithType: Brep.CapPlanarHoles
        qualifiedName: Rhino.Geometry.Brep.CapPlanarHoles
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CapPlanarHoles(System.Double)
  Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
        name: Join
        nameWithType: Brep.Join
        qualifiedName: Rhino.Geometry.Brep.Join
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
        name: Join
        nameWithType: Brep.Join
        qualifiedName: Rhino.Geometry.Brep.Join
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Join(Rhino.Geometry.Brep,System.Double,System.Boolean)
  Rhino.Geometry.Brep.JoinNakedEdges(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
        name: JoinNakedEdges
        nameWithType: Brep.JoinNakedEdges
        qualifiedName: Rhino.Geometry.Brep.JoinNakedEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
        name: JoinNakedEdges
        nameWithType: Brep.JoinNakedEdges
        qualifiedName: Rhino.Geometry.Brep.JoinNakedEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.JoinNakedEdges(System.Double)
  Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double)
  Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeCoplanarFaces(System.Double,System.Double)
  Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Double,System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Double,System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Double,System.Double)
  Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Int32,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Int32,System.Double,System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Int32,System.Double,System.Double)
        name: MergeCoplanarFaces
        nameWithType: Brep.MergeCoplanarFaces
        qualifiedName: Rhino.Geometry.Brep.MergeCoplanarFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MergeCoplanarFaces(System.Int32,System.Int32,System.Double,System.Double)
  Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double)
  Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Split(Rhino.Geometry.Brep,System.Double,System.Boolean@)
  Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Brep},System.Double)
  Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},System.Double)
  ? Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
        name: Split
        nameWithType: Brep.Split
        qualifiedName: Rhino.Geometry.Brep.Split
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Split(System.Collections.Generic.IEnumerable{Rhino.Geometry.GeometryBase},Rhino.Geometry.Vector3d,System.Boolean,System.Double)
  Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
        name: Trim
        nameWithType: Brep.Trim
        qualifiedName: Rhino.Geometry.Brep.Trim
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
        name: Trim
        nameWithType: Brep.Trim
        qualifiedName: Rhino.Geometry.Brep.Trim
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Trim(Rhino.Geometry.Brep,System.Double)
  Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
        name: Trim
        nameWithType: Brep.Trim
        qualifiedName: Rhino.Geometry.Brep.Trim
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
        name: Trim
        nameWithType: Brep.Trim
        qualifiedName: Rhino.Geometry.Brep.Trim
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Trim(Rhino.Geometry.Plane,System.Double)
  Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32}):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
        name: UnjoinEdges
        nameWithType: Brep.UnjoinEdges
        qualifiedName: Rhino.Geometry.Brep.UnjoinEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
        name: UnjoinEdges
        nameWithType: Brep.UnjoinEdges
        qualifiedName: Rhino.Geometry.Brep.UnjoinEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.UnjoinEdges(System.Collections.Generic.IEnumerable{System.Int32})
  Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
        name: JoinEdges
        nameWithType: Brep.JoinEdges
        qualifiedName: Rhino.Geometry.Brep.JoinEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
        name: JoinEdges
        nameWithType: Brep.JoinEdges
        qualifiedName: Rhino.Geometry.Brep.JoinEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.JoinEdges(System.Int32,System.Int32,System.Double,System.Boolean)
  ? Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
        name: TransformComponent
        nameWithType: Brep.TransformComponent
        qualifiedName: Rhino.Geometry.Brep.TransformComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.ComponentIndex
        name: ComponentIndex
        nameWithType: ComponentIndex
        qualifiedName: Rhino.Geometry.ComponentIndex
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Rhino.Geometry.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
        name: TransformComponent
        nameWithType: Brep.TransformComponent
        qualifiedName: Rhino.Geometry.Brep.TransformComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.ComponentIndex
        name: ComponentIndex
        nameWithType: ComponentIndex
        qualifiedName: Rhino.Geometry.ComponentIndex
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Rhino.Geometry.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.TransformComponent(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},Rhino.Geometry.Transform,System.Double,System.Double,System.Boolean)
  Rhino.Geometry.Brep.GetArea:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetArea
        name: GetArea
        nameWithType: Brep.GetArea
        qualifiedName: Rhino.Geometry.Brep.GetArea
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetArea
        name: GetArea
        nameWithType: Brep.GetArea
        qualifiedName: Rhino.Geometry.Brep.GetArea
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetArea
  Rhino.Geometry.Brep.GetArea(System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
        name: GetArea
        nameWithType: Brep.GetArea
        qualifiedName: Rhino.Geometry.Brep.GetArea
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
        name: GetArea
        nameWithType: Brep.GetArea
        qualifiedName: Rhino.Geometry.Brep.GetArea
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetArea(System.Double,System.Double)
  Rhino.Geometry.Brep.GetVolume:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetVolume
        name: GetVolume
        nameWithType: Brep.GetVolume
        qualifiedName: Rhino.Geometry.Brep.GetVolume
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetVolume
        name: GetVolume
        nameWithType: Brep.GetVolume
        qualifiedName: Rhino.Geometry.Brep.GetVolume
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetVolume
  Rhino.Geometry.Brep.GetVolume(System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
        name: GetVolume
        nameWithType: Brep.GetVolume
        qualifiedName: Rhino.Geometry.Brep.GetVolume
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
        name: GetVolume
        nameWithType: Brep.GetVolume
        qualifiedName: Rhino.Geometry.Brep.GetVolume
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.GetVolume(System.Double,System.Double)
  Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
        name: AddTrimCurve
        nameWithType: Brep.AddTrimCurve
        qualifiedName: Rhino.Geometry.Brep.AddTrimCurve
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
        name: AddTrimCurve
        nameWithType: Brep.AddTrimCurve
        qualifiedName: Rhino.Geometry.Brep.AddTrimCurve
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.AddTrimCurve(Rhino.Geometry.Curve)
  Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
        name: AddEdgeCurve
        nameWithType: Brep.AddEdgeCurve
        qualifiedName: Rhino.Geometry.Brep.AddEdgeCurve
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
        name: AddEdgeCurve
        nameWithType: Brep.AddEdgeCurve
        qualifiedName: Rhino.Geometry.Brep.AddEdgeCurve
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.AddEdgeCurve(Rhino.Geometry.Curve)
  Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
        name: AddSurface
        nameWithType: Brep.AddSurface
        qualifiedName: Rhino.Geometry.Brep.AddSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
        name: AddSurface
        nameWithType: Brep.AddSurface
        qualifiedName: Rhino.Geometry.Brep.AddSurface
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.AddSurface(Rhino.Geometry.Surface)
  Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
        name: Append
        nameWithType: Brep.Append
        qualifiedName: Rhino.Geometry.Brep.Append
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
        name: Append
        nameWithType: Brep.Append
        qualifiedName: Rhino.Geometry.Brep.Append
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Append(Rhino.Geometry.Brep)
  Rhino.Geometry.Brep.SetVertices:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.SetVertices
        name: SetVertices
        nameWithType: Brep.SetVertices
        qualifiedName: Rhino.Geometry.Brep.SetVertices
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.SetVertices
        name: SetVertices
        nameWithType: Brep.SetVertices
        qualifiedName: Rhino.Geometry.Brep.SetVertices
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.SetVertices
  Rhino.Geometry.Brep.SetTrimIsoFlags:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.SetTrimIsoFlags
        name: SetTrimIsoFlags
        nameWithType: Brep.SetTrimIsoFlags
        qualifiedName: Rhino.Geometry.Brep.SetTrimIsoFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.SetTrimIsoFlags
        name: SetTrimIsoFlags
        nameWithType: Brep.SetTrimIsoFlags
        qualifiedName: Rhino.Geometry.Brep.SetTrimIsoFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.SetTrimIsoFlags
  Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
        name: SetTolerancesBoxesAndFlags
        nameWithType: Brep.SetTolerancesBoxesAndFlags
        qualifiedName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
        name: SetTolerancesBoxesAndFlags
        nameWithType: Brep.SetTolerancesBoxesAndFlags
        qualifiedName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
  ? Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
        name: SetTolerancesBoxesAndFlags
        nameWithType: Brep.SetTolerancesBoxesAndFlags
        qualifiedName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
        name: SetTolerancesBoxesAndFlags
        nameWithType: Brep.SetTolerancesBoxesAndFlags
        qualifiedName: Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.SetTolerancesBoxesAndFlags(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
        name: RebuildTrimsForV2
        nameWithType: Brep.RebuildTrimsForV2
        qualifiedName: Rhino.Geometry.Brep.RebuildTrimsForV2
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.NurbsSurface
        name: NurbsSurface
        nameWithType: NurbsSurface
        qualifiedName: Rhino.Geometry.NurbsSurface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
        name: RebuildTrimsForV2
        nameWithType: Brep.RebuildTrimsForV2
        qualifiedName: Rhino.Geometry.Brep.RebuildTrimsForV2
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.BrepFace
        name: BrepFace
        nameWithType: BrepFace
        qualifiedName: Rhino.Geometry.BrepFace
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.NurbsSurface
        name: NurbsSurface
        nameWithType: NurbsSurface
        qualifiedName: Rhino.Geometry.NurbsSurface
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.RebuildTrimsForV2(Rhino.Geometry.BrepFace,Rhino.Geometry.NurbsSurface)
  Rhino.Geometry.Brep.MakeValidForV2:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.MakeValidForV2
        name: MakeValidForV2
        nameWithType: Brep.MakeValidForV2
        qualifiedName: Rhino.Geometry.Brep.MakeValidForV2
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.MakeValidForV2
        name: MakeValidForV2
        nameWithType: Brep.MakeValidForV2
        qualifiedName: Rhino.Geometry.Brep.MakeValidForV2
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.MakeValidForV2
  Rhino.Geometry.Brep.Compact:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Compact
        name: Compact
        nameWithType: Brep.Compact
        qualifiedName: Rhino.Geometry.Brep.Compact
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Compact
        name: Compact
        nameWithType: Brep.Compact
        qualifiedName: Rhino.Geometry.Brep.Compact
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Compact
  Rhino.Geometry.Brep.Repair(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Repair(System.Double)
        name: Repair
        nameWithType: Brep.Repair
        qualifiedName: Rhino.Geometry.Brep.Repair
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Repair(System.Double)
        name: Repair
        nameWithType: Brep.Repair
        qualifiedName: Rhino.Geometry.Brep.Repair
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Repair(System.Double)
  Rhino.Geometry.Brep.RemoveHoles(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.RemoveHoles(System.Double)
        name: RemoveHoles
        nameWithType: Brep.RemoveHoles
        qualifiedName: Rhino.Geometry.Brep.RemoveHoles
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.RemoveHoles(System.Double)
        name: RemoveHoles
        nameWithType: Brep.RemoveHoles
        qualifiedName: Rhino.Geometry.Brep.RemoveHoles
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.RemoveHoles(System.Double)
  Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
        name: RemoveHoles
        nameWithType: Brep.RemoveHoles
        qualifiedName: Rhino.Geometry.Brep.RemoveHoles
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.ComponentIndex
        name: ComponentIndex
        nameWithType: ComponentIndex
        qualifiedName: Rhino.Geometry.ComponentIndex
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
        name: RemoveHoles
        nameWithType: Brep.RemoveHoles
        qualifiedName: Rhino.Geometry.Brep.RemoveHoles
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.ComponentIndex
        name: ComponentIndex
        nameWithType: ComponentIndex
        qualifiedName: Rhino.Geometry.ComponentIndex
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.RemoveHoles(System.Collections.Generic.IEnumerable{Rhino.Geometry.ComponentIndex},System.Double)
  Rhino.Geometry.Brep.CullUnusedFaces:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnusedFaces
        name: CullUnusedFaces
        nameWithType: Brep.CullUnusedFaces
        qualifiedName: Rhino.Geometry.Brep.CullUnusedFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnusedFaces
        name: CullUnusedFaces
        nameWithType: Brep.CullUnusedFaces
        qualifiedName: Rhino.Geometry.Brep.CullUnusedFaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnusedFaces
  Rhino.Geometry.Brep.CullUnusedLoops:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnusedLoops
        name: CullUnusedLoops
        nameWithType: Brep.CullUnusedLoops
        qualifiedName: Rhino.Geometry.Brep.CullUnusedLoops
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnusedLoops
        name: CullUnusedLoops
        nameWithType: Brep.CullUnusedLoops
        qualifiedName: Rhino.Geometry.Brep.CullUnusedLoops
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnusedLoops
  Rhino.Geometry.Brep.CullUnusedTrims:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnusedTrims
        name: CullUnusedTrims
        nameWithType: Brep.CullUnusedTrims
        qualifiedName: Rhino.Geometry.Brep.CullUnusedTrims
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnusedTrims
        name: CullUnusedTrims
        nameWithType: Brep.CullUnusedTrims
        qualifiedName: Rhino.Geometry.Brep.CullUnusedTrims
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnusedTrims
  Rhino.Geometry.Brep.CullUnusedEdges:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnusedEdges
        name: CullUnusedEdges
        nameWithType: Brep.CullUnusedEdges
        qualifiedName: Rhino.Geometry.Brep.CullUnusedEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnusedEdges
        name: CullUnusedEdges
        nameWithType: Brep.CullUnusedEdges
        qualifiedName: Rhino.Geometry.Brep.CullUnusedEdges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnusedEdges
  Rhino.Geometry.Brep.CullUnusedVertices:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnusedVertices
        name: CullUnusedVertices
        nameWithType: Brep.CullUnusedVertices
        qualifiedName: Rhino.Geometry.Brep.CullUnusedVertices
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnusedVertices
        name: CullUnusedVertices
        nameWithType: Brep.CullUnusedVertices
        qualifiedName: Rhino.Geometry.Brep.CullUnusedVertices
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnusedVertices
  Rhino.Geometry.Brep.CullUnused3dCurves:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnused3dCurves
        name: CullUnused3dCurves
        nameWithType: Brep.CullUnused3dCurves
        qualifiedName: Rhino.Geometry.Brep.CullUnused3dCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnused3dCurves
        name: CullUnused3dCurves
        nameWithType: Brep.CullUnused3dCurves
        qualifiedName: Rhino.Geometry.Brep.CullUnused3dCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnused3dCurves
  Rhino.Geometry.Brep.CullUnused2dCurves:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnused2dCurves
        name: CullUnused2dCurves
        nameWithType: Brep.CullUnused2dCurves
        qualifiedName: Rhino.Geometry.Brep.CullUnused2dCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnused2dCurves
        name: CullUnused2dCurves
        nameWithType: Brep.CullUnused2dCurves
        qualifiedName: Rhino.Geometry.Brep.CullUnused2dCurves
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnused2dCurves
  Rhino.Geometry.Brep.CullUnusedSurfaces:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.CullUnusedSurfaces
        name: CullUnusedSurfaces
        nameWithType: Brep.CullUnusedSurfaces
        qualifiedName: Rhino.Geometry.Brep.CullUnusedSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.CullUnusedSurfaces
        name: CullUnusedSurfaces
        nameWithType: Brep.CullUnusedSurfaces
        qualifiedName: Rhino.Geometry.Brep.CullUnusedSurfaces
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.CullUnusedSurfaces
  Rhino.Geometry.Brep.Standardize:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Standardize
        name: Standardize
        nameWithType: Brep.Standardize
        qualifiedName: Rhino.Geometry.Brep.Standardize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.Brep.Standardize
        name: Standardize
        nameWithType: Brep.Standardize
        qualifiedName: Rhino.Geometry.Brep.Standardize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: M:Rhino.Geometry.Brep.Standardize
  Rhino.Geometry.Brep.Vertices:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Vertices
        name: Vertices
        nameWithType: Brep.Vertices
        qualifiedName: Rhino.Geometry.Brep.Vertices
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Vertices
        name: Vertices
        nameWithType: Brep.Vertices
        qualifiedName: Rhino.Geometry.Brep.Vertices
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Vertices
  Rhino.Geometry.Brep.Surfaces:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Surfaces
        name: Surfaces
        nameWithType: Brep.Surfaces
        qualifiedName: Rhino.Geometry.Brep.Surfaces
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Surfaces
        name: Surfaces
        nameWithType: Brep.Surfaces
        qualifiedName: Rhino.Geometry.Brep.Surfaces
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Surfaces
  Rhino.Geometry.Brep.Edges:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Edges
        name: Edges
        nameWithType: Brep.Edges
        qualifiedName: Rhino.Geometry.Brep.Edges
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Edges
        name: Edges
        nameWithType: Brep.Edges
        qualifiedName: Rhino.Geometry.Brep.Edges
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Edges
  Rhino.Geometry.Brep.Trims:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Trims
        name: Trims
        nameWithType: Brep.Trims
        qualifiedName: Rhino.Geometry.Brep.Trims
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Trims
        name: Trims
        nameWithType: Brep.Trims
        qualifiedName: Rhino.Geometry.Brep.Trims
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Trims
  Rhino.Geometry.Brep.Loops:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Loops
        name: Loops
        nameWithType: Brep.Loops
        qualifiedName: Rhino.Geometry.Brep.Loops
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Loops
        name: Loops
        nameWithType: Brep.Loops
        qualifiedName: Rhino.Geometry.Brep.Loops
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Loops
  Rhino.Geometry.Brep.Faces:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Faces
        name: Faces
        nameWithType: Brep.Faces
        qualifiedName: Rhino.Geometry.Brep.Faces
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Faces
        name: Faces
        nameWithType: Brep.Faces
        qualifiedName: Rhino.Geometry.Brep.Faces
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Faces
  Rhino.Geometry.Brep.Curves2D:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Curves2D
        name: Curves2D
        nameWithType: Brep.Curves2D
        qualifiedName: Rhino.Geometry.Brep.Curves2D
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Curves2D
        name: Curves2D
        nameWithType: Brep.Curves2D
        qualifiedName: Rhino.Geometry.Brep.Curves2D
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Curves2D
  Rhino.Geometry.Brep.Curves3D:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.Curves3D
        name: Curves3D
        nameWithType: Brep.Curves3D
        qualifiedName: Rhino.Geometry.Brep.Curves3D
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.Curves3D
        name: Curves3D
        nameWithType: Brep.Curves3D
        qualifiedName: Rhino.Geometry.Brep.Curves3D
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.Curves3D
  Rhino.Geometry.Brep.IsSolid:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsSolid
        name: IsSolid
        nameWithType: Brep.IsSolid
        qualifiedName: Rhino.Geometry.Brep.IsSolid
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.IsSolid
        name: IsSolid
        nameWithType: Brep.IsSolid
        qualifiedName: Rhino.Geometry.Brep.IsSolid
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.IsSolid
  Rhino.Geometry.Brep.SolidOrientation:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.SolidOrientation
        name: SolidOrientation
        nameWithType: Brep.SolidOrientation
        qualifiedName: Rhino.Geometry.Brep.SolidOrientation
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.SolidOrientation
        name: SolidOrientation
        nameWithType: Brep.SolidOrientation
        qualifiedName: Rhino.Geometry.Brep.SolidOrientation
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.SolidOrientation
  Rhino.Geometry.Brep.IsManifold:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsManifold
        name: IsManifold
        nameWithType: Brep.IsManifold
        qualifiedName: Rhino.Geometry.Brep.IsManifold
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.IsManifold
        name: IsManifold
        nameWithType: Brep.IsManifold
        qualifiedName: Rhino.Geometry.Brep.IsManifold
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.IsManifold
  Rhino.Geometry.Brep.IsSurface:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.IsSurface
        name: IsSurface
        nameWithType: Brep.IsSurface
        qualifiedName: Rhino.Geometry.Brep.IsSurface
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.IsSurface
        name: IsSurface
        nameWithType: Brep.IsSurface
        qualifiedName: Rhino.Geometry.Brep.IsSurface
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.IsSurface
  Rhino.Geometry.Brep.HasRegionTopology:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep.HasRegionTopology
        name: HasRegionTopology
        nameWithType: Brep.HasRegionTopology
        qualifiedName: Rhino.Geometry.Brep.HasRegionTopology
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep.HasRegionTopology
        name: HasRegionTopology
        nameWithType: Brep.HasRegionTopology
        qualifiedName: Rhino.Geometry.Brep.HasRegionTopology
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.Brep
    commentId: P:Rhino.Geometry.Brep.HasRegionTopology
  Rhino.Geometry.GeometryBase:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      VB:
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.GeometryBase
  Rhino.Geometry.GeometryBase.OnSwitchToNonConst:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
        name: OnSwitchToNonConst
        nameWithType: GeometryBase.OnSwitchToNonConst
        qualifiedName: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
        name: OnSwitchToNonConst
        nameWithType: GeometryBase.OnSwitchToNonConst
        qualifiedName: Rhino.Geometry.GeometryBase.OnSwitchToNonConst
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.OnSwitchToNonConst
  Rhino.Geometry.GeometryBase.DuplicateShallow:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.DuplicateShallow
        name: DuplicateShallow
        nameWithType: GeometryBase.DuplicateShallow
        qualifiedName: Rhino.Geometry.GeometryBase.DuplicateShallow
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.DuplicateShallow
        name: DuplicateShallow
        nameWithType: GeometryBase.DuplicateShallow
        qualifiedName: Rhino.Geometry.GeometryBase.DuplicateShallow
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.DuplicateShallow
  Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
        name: Transform
        nameWithType: GeometryBase.Transform
        qualifiedName: Rhino.Geometry.GeometryBase.Transform
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Rhino.Geometry.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
        name: Transform
        nameWithType: GeometryBase.Transform
        qualifiedName: Rhino.Geometry.GeometryBase.Transform
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Rhino.Geometry.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.Transform(Rhino.Geometry.Transform)
  Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
        name: Translate
        nameWithType: GeometryBase.Translate
        qualifiedName: Rhino.Geometry.GeometryBase.Translate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
        name: Translate
        nameWithType: GeometryBase.Translate
        qualifiedName: Rhino.Geometry.GeometryBase.Translate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.Translate(Rhino.Geometry.Vector3d)
  Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
        name: Translate
        nameWithType: GeometryBase.Translate
        qualifiedName: Rhino.Geometry.GeometryBase.Translate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
        name: Translate
        nameWithType: GeometryBase.Translate
        qualifiedName: Rhino.Geometry.GeometryBase.Translate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.Translate(System.Double,System.Double,System.Double)
  Rhino.Geometry.GeometryBase.Scale(System.Double):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.Scale(System.Double)
        name: Scale
        nameWithType: GeometryBase.Scale
        qualifiedName: Rhino.Geometry.GeometryBase.Scale
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.Scale(System.Double)
        name: Scale
        nameWithType: GeometryBase.Scale
        qualifiedName: Rhino.Geometry.GeometryBase.Scale
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.Scale(System.Double)
  Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
        name: Rotate
        nameWithType: GeometryBase.Rotate
        qualifiedName: Rhino.Geometry.GeometryBase.Rotate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
        name: Rotate
        nameWithType: GeometryBase.Rotate
        qualifiedName: Rhino.Geometry.GeometryBase.Rotate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Rhino.Geometry.Vector3d
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.Rotate(System.Double,Rhino.Geometry.Vector3d,Rhino.Geometry.Point3d)
  Rhino.Geometry.GeometryBase.MemoryEstimate:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.MemoryEstimate
        name: MemoryEstimate
        nameWithType: GeometryBase.MemoryEstimate
        qualifiedName: Rhino.Geometry.GeometryBase.MemoryEstimate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.MemoryEstimate
        name: MemoryEstimate
        nameWithType: GeometryBase.MemoryEstimate
        qualifiedName: Rhino.Geometry.GeometryBase.MemoryEstimate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.MemoryEstimate
  Rhino.Geometry.GeometryBase.DataCRC(System.UInt32):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.DataCRC(System.UInt32)
        name: DataCRC
        nameWithType: GeometryBase.DataCRC
        qualifiedName: Rhino.Geometry.GeometryBase.DataCRC
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.DataCRC(System.UInt32)
        name: DataCRC
        nameWithType: GeometryBase.DataCRC
        qualifiedName: Rhino.Geometry.GeometryBase.DataCRC
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.DataCRC(System.UInt32)
  Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(System.Boolean)
  Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Rhino.Geometry.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Rhino.Geometry.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Transform)
  Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)
  Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Box
        name: Box
        nameWithType: Box
        qualifiedName: Rhino.Geometry.Box
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
        name: GetBoundingBox
        nameWithType: GeometryBase.GetBoundingBox
        qualifiedName: Rhino.Geometry.GeometryBase.GetBoundingBox
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.Box
        name: Box
        nameWithType: Box
        qualifiedName: Rhino.Geometry.Box
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane,Rhino.Geometry.Box@)
  Rhino.Geometry.GeometryBase.MakeDeformable:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.MakeDeformable
        name: MakeDeformable
        nameWithType: GeometryBase.MakeDeformable
        qualifiedName: Rhino.Geometry.GeometryBase.MakeDeformable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.MakeDeformable
        name: MakeDeformable
        nameWithType: GeometryBase.MakeDeformable
        qualifiedName: Rhino.Geometry.GeometryBase.MakeDeformable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.MakeDeformable
  Rhino.Geometry.GeometryBase.ComponentIndex:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.ComponentIndex
        name: ComponentIndex
        nameWithType: GeometryBase.ComponentIndex
        qualifiedName: Rhino.Geometry.GeometryBase.ComponentIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.ComponentIndex
        name: ComponentIndex
        nameWithType: GeometryBase.ComponentIndex
        qualifiedName: Rhino.Geometry.GeometryBase.ComponentIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.ComponentIndex
  Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
        name: SetUserString
        nameWithType: GeometryBase.SetUserString
        qualifiedName: Rhino.Geometry.GeometryBase.SetUserString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
        name: SetUserString
        nameWithType: GeometryBase.SetUserString
        qualifiedName: Rhino.Geometry.GeometryBase.SetUserString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.SetUserString(System.String,System.String)
  Rhino.Geometry.GeometryBase.GetUserString(System.String):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GetUserString(System.String)
        name: GetUserString
        nameWithType: GeometryBase.GetUserString
        qualifiedName: Rhino.Geometry.GeometryBase.GetUserString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GetUserString(System.String)
        name: GetUserString
        nameWithType: GeometryBase.GetUserString
        qualifiedName: Rhino.Geometry.GeometryBase.GetUserString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GetUserString(System.String)
  Rhino.Geometry.GeometryBase.GetUserStrings:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GetUserStrings
        name: GetUserStrings
        nameWithType: GeometryBase.GetUserStrings
        qualifiedName: Rhino.Geometry.GeometryBase.GetUserStrings
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GetUserStrings
        name: GetUserStrings
        nameWithType: GeometryBase.GetUserStrings
        qualifiedName: Rhino.Geometry.GeometryBase.GetUserStrings
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GetUserStrings
  Rhino.Geometry.GeometryBase.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
        name: Dispose
        nameWithType: GeometryBase.Dispose
        qualifiedName: Rhino.Geometry.GeometryBase.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
        name: Dispose
        nameWithType: GeometryBase.Dispose
        qualifiedName: Rhino.Geometry.GeometryBase.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.Dispose(System.Boolean)
  Rhino.Geometry.GeometryBase.NonConstOperation:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.NonConstOperation
        name: NonConstOperation
        nameWithType: GeometryBase.NonConstOperation
        qualifiedName: Rhino.Geometry.GeometryBase.NonConstOperation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.NonConstOperation
        name: NonConstOperation
        nameWithType: GeometryBase.NonConstOperation
        qualifiedName: Rhino.Geometry.GeometryBase.NonConstOperation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.NonConstOperation
  Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
        name: GeometryEquals
        nameWithType: GeometryBase.GeometryEquals
        qualifiedName: Rhino.Geometry.GeometryBase.GeometryEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
        name: GeometryEquals
        nameWithType: GeometryBase.GeometryEquals
        qualifiedName: Rhino.Geometry.GeometryBase.GeometryEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GeometryEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase):
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
        name: GeometryReferenceEquals
        nameWithType: GeometryBase.GeometryReferenceEquals
        qualifiedName: Rhino.Geometry.GeometryBase.GeometryReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
        name: GeometryReferenceEquals
        nameWithType: GeometryBase.GeometryReferenceEquals
        qualifiedName: Rhino.Geometry.GeometryBase.GeometryReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Rhino.Geometry.GeometryBase
        name: GeometryBase
        nameWithType: GeometryBase
        qualifiedName: Rhino.Geometry.GeometryBase
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: M:Rhino.Geometry.GeometryBase.GeometryReferenceEquals(Rhino.Geometry.GeometryBase,Rhino.Geometry.GeometryBase)
  Rhino.Geometry.GeometryBase.IsDocumentControlled:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.IsDocumentControlled
        name: IsDocumentControlled
        nameWithType: GeometryBase.IsDocumentControlled
        qualifiedName: Rhino.Geometry.GeometryBase.IsDocumentControlled
        isExternal: true
      VB:
      - id: Rhino.Geometry.GeometryBase.IsDocumentControlled
        name: IsDocumentControlled
        nameWithType: GeometryBase.IsDocumentControlled
        qualifiedName: Rhino.Geometry.GeometryBase.IsDocumentControlled
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: P:Rhino.Geometry.GeometryBase.IsDocumentControlled
  Rhino.Geometry.GeometryBase.ObjectType:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.ObjectType
        name: ObjectType
        nameWithType: GeometryBase.ObjectType
        qualifiedName: Rhino.Geometry.GeometryBase.ObjectType
        isExternal: true
      VB:
      - id: Rhino.Geometry.GeometryBase.ObjectType
        name: ObjectType
        nameWithType: GeometryBase.ObjectType
        qualifiedName: Rhino.Geometry.GeometryBase.ObjectType
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: P:Rhino.Geometry.GeometryBase.ObjectType
  Rhino.Geometry.GeometryBase.IsDeformable:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.IsDeformable
        name: IsDeformable
        nameWithType: GeometryBase.IsDeformable
        qualifiedName: Rhino.Geometry.GeometryBase.IsDeformable
        isExternal: true
      VB:
      - id: Rhino.Geometry.GeometryBase.IsDeformable
        name: IsDeformable
        nameWithType: GeometryBase.IsDeformable
        qualifiedName: Rhino.Geometry.GeometryBase.IsDeformable
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: P:Rhino.Geometry.GeometryBase.IsDeformable
  Rhino.Geometry.GeometryBase.HasBrepForm:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.HasBrepForm
        name: HasBrepForm
        nameWithType: GeometryBase.HasBrepForm
        qualifiedName: Rhino.Geometry.GeometryBase.HasBrepForm
        isExternal: true
      VB:
      - id: Rhino.Geometry.GeometryBase.HasBrepForm
        name: HasBrepForm
        nameWithType: GeometryBase.HasBrepForm
        qualifiedName: Rhino.Geometry.GeometryBase.HasBrepForm
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: P:Rhino.Geometry.GeometryBase.HasBrepForm
  Rhino.Geometry.GeometryBase.UserStringCount:
    name:
      CSharp:
      - id: Rhino.Geometry.GeometryBase.UserStringCount
        name: UserStringCount
        nameWithType: GeometryBase.UserStringCount
        qualifiedName: Rhino.Geometry.GeometryBase.UserStringCount
        isExternal: true
      VB:
      - id: Rhino.Geometry.GeometryBase.UserStringCount
        name: UserStringCount
        nameWithType: GeometryBase.UserStringCount
        qualifiedName: Rhino.Geometry.GeometryBase.UserStringCount
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry.GeometryBase
    commentId: P:Rhino.Geometry.GeometryBase.UserStringCount
  Rhino.Runtime:
    name:
      CSharp:
      - name: Rhino.Runtime
        nameWithType: Rhino.Runtime
        qualifiedName: Rhino.Runtime
        isExternal: true
      VB:
      - name: Rhino.Runtime
        nameWithType: Rhino.Runtime
        qualifiedName: Rhino.Runtime
    isDefinition: true
    commentId: N:Rhino.Runtime
  Rhino.Runtime.CommonObject:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject
        name: CommonObject
        nameWithType: CommonObject
        qualifiedName: Rhino.Runtime.CommonObject
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject
        name: CommonObject
        nameWithType: CommonObject
        qualifiedName: Rhino.Runtime.CommonObject
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime
    commentId: T:Rhino.Runtime.CommonObject
  Rhino.Runtime.CommonObject.EnsurePrivateCopy:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.EnsurePrivateCopy
        name: EnsurePrivateCopy
        nameWithType: CommonObject.EnsurePrivateCopy
        qualifiedName: Rhino.Runtime.CommonObject.EnsurePrivateCopy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.EnsurePrivateCopy
        name: EnsurePrivateCopy
        nameWithType: CommonObject.EnsurePrivateCopy
        qualifiedName: Rhino.Runtime.CommonObject.EnsurePrivateCopy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.EnsurePrivateCopy
  Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32):
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
        name: ConstructConstObject
        nameWithType: CommonObject.ConstructConstObject
        qualifiedName: Rhino.Runtime.CommonObject.ConstructConstObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
        name: ConstructConstObject
        nameWithType: CommonObject.ConstructConstObject
        qualifiedName: Rhino.Runtime.CommonObject.ConstructConstObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.ConstructConstObject(System.Object,System.Int32)
  Rhino.Runtime.CommonObject.IsValidWithLog(System.String@):
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
        name: IsValidWithLog
        nameWithType: CommonObject.IsValidWithLog
        qualifiedName: Rhino.Runtime.CommonObject.IsValidWithLog
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
        name: IsValidWithLog
        nameWithType: CommonObject.IsValidWithLog
        qualifiedName: Rhino.Runtime.CommonObject.IsValidWithLog
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.IsValidWithLog(System.String@)
  Rhino.Runtime.CommonObject.Dispose:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.Dispose
        name: Dispose
        nameWithType: CommonObject.Dispose
        qualifiedName: Rhino.Runtime.CommonObject.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.Dispose
        name: Dispose
        nameWithType: CommonObject.Dispose
        qualifiedName: Rhino.Runtime.CommonObject.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.Dispose
  ? Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  : name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: CommonObject.GetObjectData
        qualifiedName: Rhino.Runtime.CommonObject.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: CommonObject.GetObjectData
        qualifiedName: Rhino.Runtime.CommonObject.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String):
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
        name: FromBase64String
        nameWithType: CommonObject.FromBase64String
        qualifiedName: Rhino.Runtime.CommonObject.FromBase64String
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
        name: FromBase64String
        nameWithType: CommonObject.FromBase64String
        qualifiedName: Rhino.Runtime.CommonObject.FromBase64String
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.FromBase64String(System.Int32,System.Int32,System.String)
  Rhino.Runtime.CommonObject.FromJSON(System.String):
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.FromJSON(System.String)
        name: FromJSON
        nameWithType: CommonObject.FromJSON
        qualifiedName: Rhino.Runtime.CommonObject.FromJSON
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.FromJSON(System.String)
        name: FromJSON
        nameWithType: CommonObject.FromJSON
        qualifiedName: Rhino.Runtime.CommonObject.FromJSON
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.FromJSON(System.String)
  Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String}):
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
        name: FromJSON
        nameWithType: CommonObject.FromJSON
        qualifiedName: Rhino.Runtime.CommonObject.FromJSON
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
        name: FromJSON
        nameWithType: CommonObject.FromJSON
        qualifiedName: Rhino.Runtime.CommonObject.FromJSON
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.FromJSON(System.Collections.Generic.Dictionary{System.String,System.String})
  Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions):
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
        name: ToJSON
        nameWithType: CommonObject.ToJSON
        qualifiedName: Rhino.Runtime.CommonObject.ToJSON
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.FileIO.SerializationOptions
        name: SerializationOptions
        nameWithType: SerializationOptions
        qualifiedName: Rhino.FileIO.SerializationOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
        name: ToJSON
        nameWithType: CommonObject.ToJSON
        qualifiedName: Rhino.Runtime.CommonObject.ToJSON
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Rhino.FileIO.SerializationOptions
        name: SerializationOptions
        nameWithType: SerializationOptions
        qualifiedName: Rhino.FileIO.SerializationOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: M:Rhino.Runtime.CommonObject.ToJSON(Rhino.FileIO.SerializationOptions)
  Rhino.Runtime.CommonObject.PerformCorruptionTesting:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.PerformCorruptionTesting
        name: PerformCorruptionTesting
        nameWithType: CommonObject.PerformCorruptionTesting
        qualifiedName: Rhino.Runtime.CommonObject.PerformCorruptionTesting
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject.PerformCorruptionTesting
        name: PerformCorruptionTesting
        nameWithType: CommonObject.PerformCorruptionTesting
        qualifiedName: Rhino.Runtime.CommonObject.PerformCorruptionTesting
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: P:Rhino.Runtime.CommonObject.PerformCorruptionTesting
  Rhino.Runtime.CommonObject.IsValid:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.IsValid
        name: IsValid
        nameWithType: CommonObject.IsValid
        qualifiedName: Rhino.Runtime.CommonObject.IsValid
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject.IsValid
        name: IsValid
        nameWithType: CommonObject.IsValid
        qualifiedName: Rhino.Runtime.CommonObject.IsValid
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: P:Rhino.Runtime.CommonObject.IsValid
  Rhino.Runtime.CommonObject.Disposed:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.Disposed
        name: Disposed
        nameWithType: CommonObject.Disposed
        qualifiedName: Rhino.Runtime.CommonObject.Disposed
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject.Disposed
        name: Disposed
        nameWithType: CommonObject.Disposed
        qualifiedName: Rhino.Runtime.CommonObject.Disposed
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: P:Rhino.Runtime.CommonObject.Disposed
  Rhino.Runtime.CommonObject.HasUserData:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.HasUserData
        name: HasUserData
        nameWithType: CommonObject.HasUserData
        qualifiedName: Rhino.Runtime.CommonObject.HasUserData
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject.HasUserData
        name: HasUserData
        nameWithType: CommonObject.HasUserData
        qualifiedName: Rhino.Runtime.CommonObject.HasUserData
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: P:Rhino.Runtime.CommonObject.HasUserData
  Rhino.Runtime.CommonObject.UserData:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.UserData
        name: UserData
        nameWithType: CommonObject.UserData
        qualifiedName: Rhino.Runtime.CommonObject.UserData
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject.UserData
        name: UserData
        nameWithType: CommonObject.UserData
        qualifiedName: Rhino.Runtime.CommonObject.UserData
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: P:Rhino.Runtime.CommonObject.UserData
  Rhino.Runtime.CommonObject.UserDictionary:
    name:
      CSharp:
      - id: Rhino.Runtime.CommonObject.UserDictionary
        name: UserDictionary
        nameWithType: CommonObject.UserDictionary
        qualifiedName: Rhino.Runtime.CommonObject.UserDictionary
        isExternal: true
      VB:
      - id: Rhino.Runtime.CommonObject.UserDictionary
        name: UserDictionary
        nameWithType: CommonObject.UserDictionary
        qualifiedName: Rhino.Runtime.CommonObject.UserDictionary
        isExternal: true
    isDefinition: true
    parent: Rhino.Runtime.CommonObject
    commentId: P:Rhino.Runtime.CommonObject.UserDictionary
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.ISerializable:
    name:
      CSharp:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.ISerializable
  LagaRhino.Shoebox.ShoeBox*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.ShoeBox*
        name: ShoeBox
        nameWithType: Shoebox.ShoeBox
        qualifiedName: LagaRhino.Shoebox.ShoeBox
      VB:
      - id: LagaRhino.Shoebox.ShoeBox*
        name: ShoeBox
        nameWithType: Shoebox.ShoeBox
        qualifiedName: LagaRhino.Shoebox.ShoeBox
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.ShoeBox
  LagaRhino.Shoebox.Volume*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.Volume*
        name: Volume
        nameWithType: Shoebox.Volume
        qualifiedName: LagaRhino.Shoebox.Volume
      VB:
      - id: LagaRhino.Shoebox.Volume*
        name: Volume
        nameWithType: Shoebox.Volume
        qualifiedName: LagaRhino.Shoebox.Volume
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.Volume
  LagaRhino.Shoebox.Area*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.Area*
        name: Area
        nameWithType: Shoebox.Area
        qualifiedName: LagaRhino.Shoebox.Area
      VB:
      - id: LagaRhino.Shoebox.Area*
        name: Area
        nameWithType: Shoebox.Area
        qualifiedName: LagaRhino.Shoebox.Area
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.Area
  LagaRhino.Shoebox.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.#ctor*
        name: Shoebox
        nameWithType: Shoebox.Shoebox
        qualifiedName: LagaRhino.Shoebox.Shoebox
      VB:
      - id: LagaRhino.Shoebox.#ctor*
        name: Shoebox
        nameWithType: Shoebox.Shoebox
        qualifiedName: LagaRhino.Shoebox.Shoebox
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.#ctor
  LagaRhino.Shoebox:
    name:
      CSharp:
      - id: LagaRhino.Shoebox
        name: Shoebox
        nameWithType: Shoebox
        qualifiedName: LagaRhino.Shoebox
      VB:
      - id: LagaRhino.Shoebox
        name: Shoebox
        nameWithType: Shoebox
        qualifiedName: LagaRhino.Shoebox
    isDefinition: true
    commentId: T:LagaRhino.Shoebox
  System.Collections.Generic.List{Rhino.Geometry.Point3d}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Point3d}
  LagaRhino.SurfaceData.SurfacePoints*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.SurfacePoints*
        name: SurfacePoints
        nameWithType: SurfaceData.SurfacePoints
        qualifiedName: LagaRhino.SurfaceData.SurfacePoints
      VB:
      - id: LagaRhino.SurfaceData.SurfacePoints*
        name: SurfacePoints
        nameWithType: SurfaceData.SurfacePoints
        qualifiedName: LagaRhino.SurfaceData.SurfacePoints
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.SurfacePoints
  Rhino.Geometry.Surface:
    name:
      CSharp:
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      VB:
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
    isDefinition: true
    parent: Rhino.Geometry
    commentId: T:Rhino.Geometry.Surface
  LagaRhino.SurfaceData.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.#ctor*
        name: SurfaceData
        nameWithType: SurfaceData.SurfaceData
        qualifiedName: LagaRhino.SurfaceData.SurfaceData
      VB:
      - id: LagaRhino.SurfaceData.#ctor*
        name: SurfaceData
        nameWithType: SurfaceData.SurfaceData
        qualifiedName: LagaRhino.SurfaceData.SurfaceData
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.#ctor
  LagaRhino.SurfaceData.PlaneSurfaceAxis*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.PlaneSurfaceAxis*
        name: PlaneSurfaceAxis
        nameWithType: SurfaceData.PlaneSurfaceAxis
        qualifiedName: LagaRhino.SurfaceData.PlaneSurfaceAxis
      VB:
      - id: LagaRhino.SurfaceData.PlaneSurfaceAxis*
        name: PlaneSurfaceAxis
        nameWithType: SurfaceData.PlaneSurfaceAxis
        qualifiedName: LagaRhino.SurfaceData.PlaneSurfaceAxis
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.PlaneSurfaceAxis
  LagaRhino.SurfaceData:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData
        name: SurfaceData
        nameWithType: SurfaceData
        qualifiedName: LagaRhino.SurfaceData
      VB:
      - id: LagaRhino.SurfaceData
        name: SurfaceData
        nameWithType: SurfaceData
        qualifiedName: LagaRhino.SurfaceData
    isDefinition: true
    commentId: T:LagaRhino.SurfaceData
  LagaRhino:
    name:
      CSharp:
      - name: LagaRhino
        nameWithType: LagaRhino
        qualifiedName: LagaRhino
      VB:
      - name: LagaRhino
        nameWithType: LagaRhino
        qualifiedName: LagaRhino
    isDefinition: true
    commentId: N:LagaRhino
