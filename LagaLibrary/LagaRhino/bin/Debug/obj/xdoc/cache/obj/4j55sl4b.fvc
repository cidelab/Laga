id: LagaRhino
language: CSharp
name:
  Default: LagaRhino
qualifiedName:
  Default: LagaRhino
type: Assembly
modifiers: {}
items:
- id: LagaRhino
  commentId: N:LagaRhino
  language: CSharp
  name:
    CSharp: LagaRhino
    VB: LagaRhino
  nameWithType:
    CSharp: LagaRhino
    VB: LagaRhino
  qualifiedName:
    CSharp: LagaRhino
    VB: LagaRhino
  type: Namespace
  assemblies:
  - LagaRhino
  modifiers: {}
  items:
  - id: LagaRhino.CurveData
    commentId: T:LagaRhino.CurveData
    language: CSharp
    name:
      CSharp: CurveData
      VB: CurveData
    nameWithType:
      CSharp: CurveData
      VB: CurveData
    qualifiedName:
      CSharp: LagaRhino.CurveData
      VB: LagaRhino.CurveData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      path: LagaRhino
      isExternal: true
    syntax:
      content:
        CSharp: public class CurveData
        VB: Public Class CurveData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
      commentId: M:LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List{Rhino.Geometry.Curve},System.Double)
      language: CSharp
      name:
        CSharp: GetPointFromCurves(List<Curve>, Double)
        VB: GetPointFromCurves(List(Of Curve), Double)
      nameWithType:
        CSharp: CurveData.GetPointFromCurves(List<Curve>, Double)
        VB: CurveData.GetPointFromCurves(List(Of Curve), Double)
      qualifiedName:
        CSharp: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List<Rhino.Geometry.Curve>, System.Double)
        VB: LagaRhino.CurveData.GetPointFromCurves(System.Collections.Generic.List(Of Rhino.Geometry.Curve), System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Point3d[] GetPointFromCurves(List<Curve> lstCrvs, double t)
          VB: Public Shared Function GetPointFromCurves(lstCrvs As List(Of Curve), t As Double) As Point3d()
        parameters:
        - id: lstCrvs
          type: System.Collections.Generic.List{Rhino.Geometry.Curve}
        - id: t
          type: System.Double
        return:
          type: Rhino.Geometry.Point3d[]
      overload: LagaRhino.CurveData.GetPointFromCurves*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
      commentId: M:LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List{Rhino.Geometry.Curve})
      language: CSharp
      name:
        CSharp: DeepCopyListCurve(List<Curve>)
        VB: DeepCopyListCurve(List(Of Curve))
      nameWithType:
        CSharp: CurveData.DeepCopyListCurve(List<Curve>)
        VB: CurveData.DeepCopyListCurve(List(Of Curve))
      qualifiedName:
        CSharp: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List<Rhino.Geometry.Curve>)
        VB: LagaRhino.CurveData.DeepCopyListCurve(System.Collections.Generic.List(Of Rhino.Geometry.Curve))
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static List<Curve> DeepCopyListCurve(List<Curve> lstToCopy)
          VB: Public Shared Function DeepCopyListCurve(lstToCopy As List(Of Curve)) As List(Of Curve)
        parameters:
        - id: lstToCopy
          type: System.Collections.Generic.List{Rhino.Geometry.Curve}
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Curve}
      overload: LagaRhino.CurveData.DeepCopyListCurve*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
      commentId: M:LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve,System.Double)
      language: CSharp
      name:
        CSharp: CorrectPlaneOnCurveByParam(Curve, Double)
        VB: CorrectPlaneOnCurveByParam(Curve, Double)
      nameWithType:
        CSharp: CurveData.CorrectPlaneOnCurveByParam(Curve, Double)
        VB: CurveData.CorrectPlaneOnCurveByParam(Curve, Double)
      qualifiedName:
        CSharp: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve, System.Double)
        VB: LagaRhino.CurveData.CorrectPlaneOnCurveByParam(Rhino.Geometry.Curve, System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Plane CorrectPlaneOnCurveByParam(Curve crv, double t)
          VB: Public Shared Function CorrectPlaneOnCurveByParam(crv As Curve, t As Double) As Plane
        parameters:
        - id: crv
          type: Rhino.Geometry.Curve
        - id: t
          type: System.Double
        return:
          type: Rhino.Geometry.Plane
      overload: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.CurveData.#ctor
      commentId: M:LagaRhino.CurveData.#ctor
      language: CSharp
      name:
        CSharp: CurveData()
        VB: CurveData()
      nameWithType:
        CSharp: CurveData.CurveData()
        VB: CurveData.CurveData()
      qualifiedName:
        CSharp: LagaRhino.CurveData.CurveData()
        VB: LagaRhino.CurveData.CurveData()
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public CurveData()
          VB: Public Sub New
      overload: LagaRhino.CurveData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: LagaRhino.LineCurveData
    commentId: T:LagaRhino.LineCurveData
    language: CSharp
    name:
      CSharp: LineCurveData
      VB: LineCurveData
    nameWithType:
      CSharp: LineCurveData
      VB: LineCurveData
    qualifiedName:
      CSharp: LagaRhino.LineCurveData
      VB: LagaRhino.LineCurveData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      path: LagaRhino
      isExternal: true
    syntax:
      content:
        CSharp: public class LineCurveData
        VB: Public Class LineCurveData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
      commentId: M:LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
      language: CSharp
      name:
        CSharp: Axis(LineCurve)
        VB: Axis(LineCurve)
      nameWithType:
        CSharp: LineCurveData.Axis(LineCurve)
        VB: LineCurveData.Axis(LineCurve)
      qualifiedName:
        CSharp: LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
        VB: LagaRhino.LineCurveData.Axis(Rhino.Geometry.LineCurve)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static LineCurve Axis(LineCurve axis)
          VB: Public Shared Function Axis(axis As LineCurve) As LineCurve
        parameters:
        - id: axis
          type: Rhino.Geometry.LineCurve
        return:
          type: Rhino.Geometry.LineCurve
      overload: LagaRhino.LineCurveData.Axis*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.LineCurveData.#ctor
      commentId: M:LagaRhino.LineCurveData.#ctor
      language: CSharp
      name:
        CSharp: LineCurveData()
        VB: LineCurveData()
      nameWithType:
        CSharp: LineCurveData.LineCurveData()
        VB: LineCurveData.LineCurveData()
      qualifiedName:
        CSharp: LagaRhino.LineCurveData.LineCurveData()
        VB: LagaRhino.LineCurveData.LineCurveData()
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public LineCurveData()
          VB: Public Sub New
      overload: LagaRhino.LineCurveData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: LagaRhino.PointData
    commentId: T:LagaRhino.PointData
    language: CSharp
    name:
      CSharp: PointData
      VB: PointData
    nameWithType:
      CSharp: PointData
      VB: PointData
    qualifiedName:
      CSharp: LagaRhino.PointData
      VB: LagaRhino.PointData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      path: LagaRhino
      isExternal: true
    syntax:
      content:
        CSharp: public class PointData
        VB: Public Class PointData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
      commentId: M:LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
      language: CSharp
      name:
        CSharp: MirrorPointQuadrant(Point3d)
        VB: MirrorPointQuadrant(Point3d)
      nameWithType:
        CSharp: PointData.MirrorPointQuadrant(Point3d)
        VB: PointData.MirrorPointQuadrant(Point3d)
      qualifiedName:
        CSharp: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
        VB: LagaRhino.PointData.MirrorPointQuadrant(Rhino.Geometry.Point3d)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Point3d[] MirrorPointQuadrant(Point3d point)
          VB: Public Shared Function MirrorPointQuadrant(point As Point3d) As Point3d()
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
        return:
          type: Rhino.Geometry.Point3d[]
      overload: LagaRhino.PointData.MirrorPointQuadrant*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
      commentId: M:LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
      language: CSharp
      name:
        CSharp: PointQuadrant(Point3d)
        VB: PointQuadrant(Point3d)
      nameWithType:
        CSharp: PointData.PointQuadrant(Point3d)
        VB: PointData.PointQuadrant(Point3d)
      qualifiedName:
        CSharp: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
        VB: LagaRhino.PointData.PointQuadrant(Rhino.Geometry.Point3d)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static int PointQuadrant(Point3d point)
          VB: Public Shared Function PointQuadrant(point As Point3d) As Integer
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
        return:
          type: System.Int32
      overload: LagaRhino.PointData.PointQuadrant*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
      commentId: M:LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
      language: CSharp
      name:
        CSharp: SortPointsByZ(Point3d[])
        VB: SortPointsByZ(Point3d())
      nameWithType:
        CSharp: PointData.SortPointsByZ(Point3d[])
        VB: PointData.SortPointsByZ(Point3d())
      qualifiedName:
        CSharp: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d[])
        VB: LagaRhino.PointData.SortPointsByZ(Rhino.Geometry.Point3d())
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Point3d[] SortPointsByZ(Point3d[] points)
          VB: Public Shared Function SortPointsByZ(points As Point3d()) As Point3d()
        parameters:
        - id: points
          type: Rhino.Geometry.Point3d[]
        return:
          type: Rhino.Geometry.Point3d[]
      overload: LagaRhino.PointData.SortPointsByZ*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
      commentId: M:LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
      language: CSharp
      name:
        CSharp: SortPointsByXY(Point3d[])
        VB: SortPointsByXY(Point3d())
      nameWithType:
        CSharp: PointData.SortPointsByXY(Point3d[])
        VB: PointData.SortPointsByXY(Point3d())
      qualifiedName:
        CSharp: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d[])
        VB: LagaRhino.PointData.SortPointsByXY(Rhino.Geometry.Point3d())
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Point3d[] SortPointsByXY(Point3d[] points)
          VB: Public Shared Function SortPointsByXY(points As Point3d()) As Point3d()
        parameters:
        - id: points
          type: Rhino.Geometry.Point3d[]
        return:
          type: Rhino.Geometry.Point3d[]
      overload: LagaRhino.PointData.SortPointsByXY*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
      commentId: M:LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
      language: CSharp
      name:
        CSharp: GroupByZ(Point3d[])
        VB: GroupByZ(Point3d())
      nameWithType:
        CSharp: PointData.GroupByZ(Point3d[])
        VB: PointData.GroupByZ(Point3d())
      qualifiedName:
        CSharp: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d[])
        VB: LagaRhino.PointData.GroupByZ(Rhino.Geometry.Point3d())
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static List<Point3d[]> GroupByZ(Point3d[] points)
          VB: Public Shared Function GroupByZ(points As Point3d()) As List(Of Point3d())
        parameters:
        - id: points
          type: Rhino.Geometry.Point3d[]
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
      overload: LagaRhino.PointData.GroupByZ*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
      commentId: M:LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,System.Double)
      language: CSharp
      name:
        CSharp: TwoPointsInterpolation(Point3d, Point3d, Double)
        VB: TwoPointsInterpolation(Point3d, Point3d, Double)
      nameWithType:
        CSharp: PointData.TwoPointsInterpolation(Point3d, Point3d, Double)
        VB: PointData.TwoPointsInterpolation(Point3d, Point3d, Double)
      qualifiedName:
        CSharp: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
        VB: LagaRhino.PointData.TwoPointsInterpolation(Rhino.Geometry.Point3d, Rhino.Geometry.Point3d, System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Point3d[] TwoPointsInterpolation(Point3d pointA, Point3d pointB, double span)
          VB: Public Shared Function TwoPointsInterpolation(pointA As Point3d, pointB As Point3d, span As Double) As Point3d()
        parameters:
        - id: pointA
          type: Rhino.Geometry.Point3d
        - id: pointB
          type: Rhino.Geometry.Point3d
        - id: span
          type: System.Double
        return:
          type: Rhino.Geometry.Point3d[]
      overload: LagaRhino.PointData.TwoPointsInterpolation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
      commentId: M:LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
      language: CSharp
      name:
        CSharp: VectorToPoint3d(Vector)
        VB: VectorToPoint3d(Vector)
      nameWithType:
        CSharp: PointData.VectorToPoint3d(Vector)
        VB: PointData.VectorToPoint3d(Vector)
      qualifiedName:
        CSharp: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
        VB: LagaRhino.PointData.VectorToPoint3d(Laga.Geometry.Vector)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Point3d VectorToPoint3d(Vector vector)
          VB: Public Shared Function VectorToPoint3d(vector As Vector) As Point3d
        parameters:
        - id: vector
          type: Laga.Geometry.Vector
        return:
          type: Rhino.Geometry.Point3d
      overload: LagaRhino.PointData.VectorToPoint3d*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
      commentId: M:LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
      language: CSharp
      name:
        CSharp: Point3dToVector(Point3d)
        VB: Point3dToVector(Point3d)
      nameWithType:
        CSharp: PointData.Point3dToVector(Point3d)
        VB: PointData.Point3dToVector(Point3d)
      qualifiedName:
        CSharp: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
        VB: LagaRhino.PointData.Point3dToVector(Rhino.Geometry.Point3d)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Vector Point3dToVector(Point3d point)
          VB: Public Shared Function Point3dToVector(point As Point3d) As Vector
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
        return:
          type: Laga.Geometry.Vector
      overload: LagaRhino.PointData.Point3dToVector*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.PointData.#ctor
      commentId: M:LagaRhino.PointData.#ctor
      language: CSharp
      name:
        CSharp: PointData()
        VB: PointData()
      nameWithType:
        CSharp: PointData.PointData()
        VB: PointData.PointData()
      qualifiedName:
        CSharp: LagaRhino.PointData.PointData()
        VB: LagaRhino.PointData.PointData()
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public PointData()
          VB: Public Sub New
      overload: LagaRhino.PointData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: LagaRhino.Shoebox
    commentId: T:LagaRhino.Shoebox
    language: CSharp
    name:
      CSharp: Shoebox
      VB: Shoebox
    nameWithType:
      CSharp: Shoebox
      VB: Shoebox
    qualifiedName:
      CSharp: LagaRhino.Shoebox
      VB: LagaRhino.Shoebox
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      path: LagaRhino
      isExternal: true
    syntax:
      content:
        CSharp: 'public class Shoebox : Brep'
        VB: >-
          Public Class Shoebox

              Inherits Brep
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double)
      commentId: M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Shoebox(Point3d, Double, Double, Double, Double)
        VB: Shoebox(Point3d, Double, Double, Double, Double)
      nameWithType:
        CSharp: Shoebox.Shoebox(Point3d, Double, Double, Double, Double)
        VB: Shoebox.Shoebox(Point3d, Double, Double, Double, Double)
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double)
        VB: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double)
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public Shoebox(Point3d point, double length, double width, double height, double rotate = 0)
          VB: Public Sub New(point As Point3d, length As Double, width As Double, height As Double, rotate As Double = 0)
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
        - id: length
          type: System.Double
        - id: width
          type: System.Double
        - id: height
          type: System.Double
        - id: rotate
          type: System.Double
      overload: LagaRhino.Shoebox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
      commentId: M:LagaRhino.Shoebox.#ctor(Rhino.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
        VB: Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
      nameWithType:
        CSharp: Shoebox.Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
        VB: Shoebox.Shoebox(Point3d, Double, Double, Double, Double, Double, Double, Double)
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
        VB: LagaRhino.Shoebox.Shoebox(Rhino.Geometry.Point3d, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double)
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public Shoebox(Point3d point, double length, double width, double eHeight, double fHeight, double gHeight, double hHeight, double rotate = 0)
          VB: Public Sub New(point As Point3d, length As Double, width As Double, eHeight As Double, fHeight As Double, gHeight As Double, hHeight As Double, rotate As Double = 0)
        parameters:
        - id: point
          type: Rhino.Geometry.Point3d
        - id: length
          type: System.Double
        - id: width
          type: System.Double
        - id: eHeight
          type: System.Double
        - id: fHeight
          type: System.Double
        - id: gHeight
          type: System.Double
        - id: hHeight
          type: System.Double
        - id: rotate
          type: System.Double
      overload: LagaRhino.Shoebox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.Shoebox.ShoeBox
      commentId: P:LagaRhino.Shoebox.ShoeBox
      language: CSharp
      name:
        CSharp: ShoeBox
        VB: ShoeBox
      nameWithType:
        CSharp: Shoebox.ShoeBox
        VB: Shoebox.ShoeBox
      qualifiedName:
        CSharp: LagaRhino.Shoebox.ShoeBox
        VB: LagaRhino.Shoebox.ShoeBox
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public Brep ShoeBox { get; }
          VB: Public ReadOnly Property ShoeBox As Brep
        parameters: []
        return:
          type: Rhino.Geometry.Brep
      overload: LagaRhino.Shoebox.ShoeBox*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: LagaRhino.Shoebox.Volume
      commentId: P:LagaRhino.Shoebox.Volume
      language: CSharp
      name:
        CSharp: Volume
        VB: Volume
      nameWithType:
        CSharp: Shoebox.Volume
        VB: Shoebox.Volume
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Volume
        VB: LagaRhino.Shoebox.Volume
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public double Volume { get; }
          VB: Public ReadOnly Property Volume As Double
        parameters: []
        return:
          type: System.Double
      overload: LagaRhino.Shoebox.Volume*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: LagaRhino.Shoebox.Area
      commentId: P:LagaRhino.Shoebox.Area
      language: CSharp
      name:
        CSharp: Area
        VB: Area
      nameWithType:
        CSharp: Shoebox.Area
        VB: Shoebox.Area
      qualifiedName:
        CSharp: LagaRhino.Shoebox.Area
        VB: LagaRhino.Shoebox.Area
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public double Area { get; }
          VB: Public ReadOnly Property Area As Double
        parameters: []
        return:
          type: System.Double
      overload: LagaRhino.Shoebox.Area*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: LagaRhino.SurfaceData
    commentId: T:LagaRhino.SurfaceData
    language: CSharp
    name:
      CSharp: SurfaceData
      VB: SurfaceData
    nameWithType:
      CSharp: SurfaceData
      VB: SurfaceData
    qualifiedName:
      CSharp: LagaRhino.SurfaceData
      VB: LagaRhino.SurfaceData
    type: Class
    assemblies:
    - LagaRhino
    namespace: LagaRhino
    source:
      path: LagaRhino
      isExternal: true
    syntax:
      content:
        CSharp: public class SurfaceData
        VB: Public Class SurfaceData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaRhino.SurfaceData.#ctor(Rhino.Geometry.Surface,System.Int32,System.Int32)
      commentId: M:LagaRhino.SurfaceData.#ctor(Rhino.Geometry.Surface,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SurfaceData(Surface, Int32, Int32)
        VB: SurfaceData(Surface, Int32, Int32)
      nameWithType:
        CSharp: SurfaceData.SurfaceData(Surface, Int32, Int32)
        VB: SurfaceData.SurfaceData(Surface, Int32, Int32)
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.SurfaceData(Rhino.Geometry.Surface, System.Int32, System.Int32)
        VB: LagaRhino.SurfaceData.SurfaceData(Rhino.Geometry.Surface, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public SurfaceData(Surface surface, int uCount, int vCount)
          VB: Public Sub New(surface As Surface, uCount As Integer, vCount As Integer)
        parameters:
        - id: surface
          type: Rhino.Geometry.Surface
        - id: uCount
          type: System.Int32
        - id: vCount
          type: System.Int32
      overload: LagaRhino.SurfaceData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.SurfaceData.CustomPattern
      commentId: M:LagaRhino.SurfaceData.CustomPattern
      language: CSharp
      name:
        CSharp: CustomPattern()
        VB: CustomPattern()
      nameWithType:
        CSharp: SurfaceData.CustomPattern()
        VB: SurfaceData.CustomPattern()
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.CustomPattern()
        VB: LagaRhino.SurfaceData.CustomPattern()
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public void CustomPattern()
          VB: Public Sub CustomPattern
      overload: LagaRhino.SurfaceData.CustomPattern*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.SurfaceData.TriangularPatter
      commentId: M:LagaRhino.SurfaceData.TriangularPatter
      language: CSharp
      name:
        CSharp: TriangularPatter()
        VB: TriangularPatter()
      nameWithType:
        CSharp: SurfaceData.TriangularPatter()
        VB: SurfaceData.TriangularPatter()
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.TriangularPatter()
        VB: LagaRhino.SurfaceData.TriangularPatter()
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public void TriangularPatter()
          VB: Public Sub TriangularPatter
      overload: LagaRhino.SurfaceData.TriangularPatter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.SurfaceData.QuadPattern
      commentId: M:LagaRhino.SurfaceData.QuadPattern
      language: CSharp
      name:
        CSharp: QuadPattern()
        VB: QuadPattern()
      nameWithType:
        CSharp: SurfaceData.QuadPattern()
        VB: SurfaceData.QuadPattern()
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.QuadPattern()
        VB: LagaRhino.SurfaceData.QuadPattern()
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public List<Polyline> QuadPattern()
          VB: Public Function QuadPattern As List(Of Polyline)
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Polyline}
      overload: LagaRhino.SurfaceData.QuadPattern*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve,System.Double)
      commentId: M:LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve,System.Double)
      language: CSharp
      name:
        CSharp: PlaneSurfaceAxis(LineCurve, Double)
        VB: PlaneSurfaceAxis(LineCurve, Double)
      nameWithType:
        CSharp: SurfaceData.PlaneSurfaceAxis(LineCurve, Double)
        VB: SurfaceData.PlaneSurfaceAxis(LineCurve, Double)
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve, System.Double)
        VB: LagaRhino.SurfaceData.PlaneSurfaceAxis(Rhino.Geometry.LineCurve, System.Double)
      type: Method
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public static Surface PlaneSurfaceAxis(LineCurve axis, double height = 100)
          VB: Public Shared Function PlaneSurfaceAxis(axis As LineCurve, height As Double = 100) As Surface
        parameters:
        - id: axis
          type: Rhino.Geometry.LineCurve
        - id: height
          type: System.Double
        return:
          type: Rhino.Geometry.Surface
      overload: LagaRhino.SurfaceData.PlaneSurfaceAxis*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: LagaRhino.SurfaceData.SurfacePoints
      commentId: P:LagaRhino.SurfaceData.SurfacePoints
      language: CSharp
      name:
        CSharp: SurfacePoints
        VB: SurfacePoints
      nameWithType:
        CSharp: SurfaceData.SurfacePoints
        VB: SurfaceData.SurfacePoints
      qualifiedName:
        CSharp: LagaRhino.SurfaceData.SurfacePoints
        VB: LagaRhino.SurfaceData.SurfacePoints
      type: Property
      assemblies:
      - LagaRhino
      namespace: LagaRhino
      source:
        path: LagaRhino
        isExternal: true
      syntax:
        content:
          CSharp: public List<Point3d> SurfacePoints { get; }
          VB: Public ReadOnly Property SurfacePoints As List(Of Point3d)
        parameters: []
        return:
          type: System.Collections.Generic.List{Rhino.Geometry.Point3d}
      overload: LagaRhino.SurfaceData.SurfacePoints*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Rhino.Geometry.Point3d[]:
    name:
      CSharp:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Rhino.Geometry.Curve}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Curve}
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  LagaRhino.CurveData.GetPointFromCurves*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.GetPointFromCurves*
        name: GetPointFromCurves
        nameWithType: CurveData.GetPointFromCurves
        qualifiedName: LagaRhino.CurveData.GetPointFromCurves
        isExternal: true
      VB:
      - id: LagaRhino.CurveData.GetPointFromCurves*
        name: GetPointFromCurves
        nameWithType: CurveData.GetPointFromCurves
        qualifiedName: LagaRhino.CurveData.GetPointFromCurves
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.GetPointFromCurves
  LagaRhino.CurveData.DeepCopyListCurve*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.DeepCopyListCurve*
        name: DeepCopyListCurve
        nameWithType: CurveData.DeepCopyListCurve
        qualifiedName: LagaRhino.CurveData.DeepCopyListCurve
        isExternal: true
      VB:
      - id: LagaRhino.CurveData.DeepCopyListCurve*
        name: DeepCopyListCurve
        nameWithType: CurveData.DeepCopyListCurve
        qualifiedName: LagaRhino.CurveData.DeepCopyListCurve
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.DeepCopyListCurve
  Rhino.Geometry.Plane:
    name:
      CSharp:
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
      VB:
      - id: Rhino.Geometry.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Rhino.Geometry.Plane
        isExternal: true
    isDefinition: true
    commentId: '!:Rhino.Geometry.Plane'
  Rhino.Geometry.Curve:
    name:
      CSharp:
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
      VB:
      - id: Rhino.Geometry.Curve
        name: Curve
        nameWithType: Curve
        qualifiedName: Rhino.Geometry.Curve
        isExternal: true
    isDefinition: true
    commentId: '!:Rhino.Geometry.Curve'
  LagaRhino.CurveData.CorrectPlaneOnCurveByParam*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
        name: CorrectPlaneOnCurveByParam
        nameWithType: CurveData.CorrectPlaneOnCurveByParam
        qualifiedName: LagaRhino.CurveData.CorrectPlaneOnCurveByParam
        isExternal: true
      VB:
      - id: LagaRhino.CurveData.CorrectPlaneOnCurveByParam*
        name: CorrectPlaneOnCurveByParam
        nameWithType: CurveData.CorrectPlaneOnCurveByParam
        qualifiedName: LagaRhino.CurveData.CorrectPlaneOnCurveByParam
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.CorrectPlaneOnCurveByParam
  LagaRhino.CurveData.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.CurveData.#ctor*
        name: CurveData
        nameWithType: CurveData.CurveData
        qualifiedName: LagaRhino.CurveData.CurveData
        isExternal: true
      VB:
      - id: LagaRhino.CurveData.#ctor*
        name: CurveData
        nameWithType: CurveData.CurveData
        qualifiedName: LagaRhino.CurveData.CurveData
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.CurveData.#ctor
  LagaRhino.CurveData:
    name:
      CSharp:
      - id: LagaRhino.CurveData
        name: CurveData
        nameWithType: CurveData
        qualifiedName: LagaRhino.CurveData
        isExternal: true
      VB:
      - id: LagaRhino.CurveData
        name: CurveData
        nameWithType: CurveData
        qualifiedName: LagaRhino.CurveData
        isExternal: true
    isDefinition: true
    commentId: T:LagaRhino.CurveData
  Rhino.Geometry.LineCurve:
    name:
      CSharp:
      - id: Rhino.Geometry.LineCurve
        name: LineCurve
        nameWithType: LineCurve
        qualifiedName: Rhino.Geometry.LineCurve
        isExternal: true
      VB:
      - id: Rhino.Geometry.LineCurve
        name: LineCurve
        nameWithType: LineCurve
        qualifiedName: Rhino.Geometry.LineCurve
        isExternal: true
    isDefinition: true
  LagaRhino.LineCurveData.Axis*:
    name:
      CSharp:
      - id: LagaRhino.LineCurveData.Axis*
        name: Axis
        nameWithType: LineCurveData.Axis
        qualifiedName: LagaRhino.LineCurveData.Axis
        isExternal: true
      VB:
      - id: LagaRhino.LineCurveData.Axis*
        name: Axis
        nameWithType: LineCurveData.Axis
        qualifiedName: LagaRhino.LineCurveData.Axis
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.LineCurveData.Axis
  LagaRhino.LineCurveData.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.LineCurveData.#ctor*
        name: LineCurveData
        nameWithType: LineCurveData.LineCurveData
        qualifiedName: LagaRhino.LineCurveData.LineCurveData
        isExternal: true
      VB:
      - id: LagaRhino.LineCurveData.#ctor*
        name: LineCurveData
        nameWithType: LineCurveData.LineCurveData
        qualifiedName: LagaRhino.LineCurveData.LineCurveData
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.LineCurveData.#ctor
  LagaRhino.LineCurveData:
    name:
      CSharp:
      - id: LagaRhino.LineCurveData
        name: LineCurveData
        nameWithType: LineCurveData
        qualifiedName: LagaRhino.LineCurveData
        isExternal: true
      VB:
      - id: LagaRhino.LineCurveData
        name: LineCurveData
        nameWithType: LineCurveData
        qualifiedName: LagaRhino.LineCurveData
        isExternal: true
    isDefinition: true
    commentId: T:LagaRhino.LineCurveData
  Rhino.Geometry.Point3d:
    name:
      CSharp:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      VB:
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
    isDefinition: true
  LagaRhino.PointData.MirrorPointQuadrant*:
    name:
      CSharp:
      - id: LagaRhino.PointData.MirrorPointQuadrant*
        name: MirrorPointQuadrant
        nameWithType: PointData.MirrorPointQuadrant
        qualifiedName: LagaRhino.PointData.MirrorPointQuadrant
        isExternal: true
      VB:
      - id: LagaRhino.PointData.MirrorPointQuadrant*
        name: MirrorPointQuadrant
        nameWithType: PointData.MirrorPointQuadrant
        qualifiedName: LagaRhino.PointData.MirrorPointQuadrant
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.MirrorPointQuadrant
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  LagaRhino.PointData.PointQuadrant*:
    name:
      CSharp:
      - id: LagaRhino.PointData.PointQuadrant*
        name: PointQuadrant
        nameWithType: PointData.PointQuadrant
        qualifiedName: LagaRhino.PointData.PointQuadrant
        isExternal: true
      VB:
      - id: LagaRhino.PointData.PointQuadrant*
        name: PointQuadrant
        nameWithType: PointData.PointQuadrant
        qualifiedName: LagaRhino.PointData.PointQuadrant
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.PointQuadrant
  LagaRhino.PointData.SortPointsByZ*:
    name:
      CSharp:
      - id: LagaRhino.PointData.SortPointsByZ*
        name: SortPointsByZ
        nameWithType: PointData.SortPointsByZ
        qualifiedName: LagaRhino.PointData.SortPointsByZ
        isExternal: true
      VB:
      - id: LagaRhino.PointData.SortPointsByZ*
        name: SortPointsByZ
        nameWithType: PointData.SortPointsByZ
        qualifiedName: LagaRhino.PointData.SortPointsByZ
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.SortPointsByZ
  LagaRhino.PointData.SortPointsByXY*:
    name:
      CSharp:
      - id: LagaRhino.PointData.SortPointsByXY*
        name: SortPointsByXY
        nameWithType: PointData.SortPointsByXY
        qualifiedName: LagaRhino.PointData.SortPointsByXY
        isExternal: true
      VB:
      - id: LagaRhino.PointData.SortPointsByXY*
        name: SortPointsByXY
        nameWithType: PointData.SortPointsByXY
        qualifiedName: LagaRhino.PointData.SortPointsByXY
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.SortPointsByXY
  System.Collections.Generic.List{Rhino.Geometry.Point3d[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Point3d[]}
  LagaRhino.PointData.GroupByZ*:
    name:
      CSharp:
      - id: LagaRhino.PointData.GroupByZ*
        name: GroupByZ
        nameWithType: PointData.GroupByZ
        qualifiedName: LagaRhino.PointData.GroupByZ
        isExternal: true
      VB:
      - id: LagaRhino.PointData.GroupByZ*
        name: GroupByZ
        nameWithType: PointData.GroupByZ
        qualifiedName: LagaRhino.PointData.GroupByZ
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.GroupByZ
  LagaRhino.PointData.TwoPointsInterpolation*:
    name:
      CSharp:
      - id: LagaRhino.PointData.TwoPointsInterpolation*
        name: TwoPointsInterpolation
        nameWithType: PointData.TwoPointsInterpolation
        qualifiedName: LagaRhino.PointData.TwoPointsInterpolation
        isExternal: true
      VB:
      - id: LagaRhino.PointData.TwoPointsInterpolation*
        name: TwoPointsInterpolation
        nameWithType: PointData.TwoPointsInterpolation
        qualifiedName: LagaRhino.PointData.TwoPointsInterpolation
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.TwoPointsInterpolation
  Laga.Geometry:
    name:
      CSharp:
      - name: Laga.Geometry
        nameWithType: Laga.Geometry
        qualifiedName: Laga.Geometry
        isExternal: true
      VB:
      - name: Laga.Geometry
        nameWithType: Laga.Geometry
        qualifiedName: Laga.Geometry
    isDefinition: true
    commentId: N:Laga.Geometry
  Laga.Geometry.Vector:
    name:
      CSharp:
      - id: Laga.Geometry.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Laga.Geometry.Vector
        isExternal: true
      VB:
      - id: Laga.Geometry.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Laga.Geometry.Vector
        isExternal: true
    isDefinition: true
    parent: Laga.Geometry
    commentId: T:Laga.Geometry.Vector
  LagaRhino.PointData.VectorToPoint3d*:
    name:
      CSharp:
      - id: LagaRhino.PointData.VectorToPoint3d*
        name: VectorToPoint3d
        nameWithType: PointData.VectorToPoint3d
        qualifiedName: LagaRhino.PointData.VectorToPoint3d
        isExternal: true
      VB:
      - id: LagaRhino.PointData.VectorToPoint3d*
        name: VectorToPoint3d
        nameWithType: PointData.VectorToPoint3d
        qualifiedName: LagaRhino.PointData.VectorToPoint3d
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.VectorToPoint3d
  LagaRhino.PointData.Point3dToVector*:
    name:
      CSharp:
      - id: LagaRhino.PointData.Point3dToVector*
        name: Point3dToVector
        nameWithType: PointData.Point3dToVector
        qualifiedName: LagaRhino.PointData.Point3dToVector
        isExternal: true
      VB:
      - id: LagaRhino.PointData.Point3dToVector*
        name: Point3dToVector
        nameWithType: PointData.Point3dToVector
        qualifiedName: LagaRhino.PointData.Point3dToVector
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.Point3dToVector
  LagaRhino.PointData.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.PointData.#ctor*
        name: PointData
        nameWithType: PointData.PointData
        qualifiedName: LagaRhino.PointData.PointData
        isExternal: true
      VB:
      - id: LagaRhino.PointData.#ctor*
        name: PointData
        nameWithType: PointData.PointData
        qualifiedName: LagaRhino.PointData.PointData
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.PointData.#ctor
  LagaRhino.PointData:
    name:
      CSharp:
      - id: LagaRhino.PointData
        name: PointData
        nameWithType: PointData
        qualifiedName: LagaRhino.PointData
        isExternal: true
      VB:
      - id: LagaRhino.PointData
        name: PointData
        nameWithType: PointData
        qualifiedName: LagaRhino.PointData
        isExternal: true
    isDefinition: true
    commentId: T:LagaRhino.PointData
  LagaRhino.Shoebox.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.#ctor*
        name: Shoebox
        nameWithType: Shoebox.Shoebox
        qualifiedName: LagaRhino.Shoebox.Shoebox
        isExternal: true
      VB:
      - id: LagaRhino.Shoebox.#ctor*
        name: Shoebox
        nameWithType: Shoebox.Shoebox
        qualifiedName: LagaRhino.Shoebox.Shoebox
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.#ctor
  Rhino.Geometry.Brep:
    name:
      CSharp:
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
      VB:
      - id: Rhino.Geometry.Brep
        name: Brep
        nameWithType: Brep
        qualifiedName: Rhino.Geometry.Brep
        isExternal: true
    isDefinition: true
    commentId: '!:Rhino.Geometry.Brep'
  LagaRhino.Shoebox.ShoeBox*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.ShoeBox*
        name: ShoeBox
        nameWithType: Shoebox.ShoeBox
        qualifiedName: LagaRhino.Shoebox.ShoeBox
        isExternal: true
      VB:
      - id: LagaRhino.Shoebox.ShoeBox*
        name: ShoeBox
        nameWithType: Shoebox.ShoeBox
        qualifiedName: LagaRhino.Shoebox.ShoeBox
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.ShoeBox
  LagaRhino.Shoebox.Volume*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.Volume*
        name: Volume
        nameWithType: Shoebox.Volume
        qualifiedName: LagaRhino.Shoebox.Volume
        isExternal: true
      VB:
      - id: LagaRhino.Shoebox.Volume*
        name: Volume
        nameWithType: Shoebox.Volume
        qualifiedName: LagaRhino.Shoebox.Volume
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.Volume
  LagaRhino.Shoebox.Area*:
    name:
      CSharp:
      - id: LagaRhino.Shoebox.Area*
        name: Area
        nameWithType: Shoebox.Area
        qualifiedName: LagaRhino.Shoebox.Area
        isExternal: true
      VB:
      - id: LagaRhino.Shoebox.Area*
        name: Area
        nameWithType: Shoebox.Area
        qualifiedName: LagaRhino.Shoebox.Area
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.Shoebox.Area
  LagaRhino.Shoebox:
    name:
      CSharp:
      - id: LagaRhino.Shoebox
        name: Shoebox
        nameWithType: Shoebox
        qualifiedName: LagaRhino.Shoebox
        isExternal: true
      VB:
      - id: LagaRhino.Shoebox
        name: Shoebox
        nameWithType: Shoebox
        qualifiedName: LagaRhino.Shoebox
        isExternal: true
    isDefinition: true
    commentId: T:LagaRhino.Shoebox
  Rhino.Geometry.Surface:
    name:
      CSharp:
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
      VB:
      - id: Rhino.Geometry.Surface
        name: Surface
        nameWithType: Surface
        qualifiedName: Rhino.Geometry.Surface
        isExternal: true
    isDefinition: true
  LagaRhino.SurfaceData.#ctor*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.#ctor*
        name: SurfaceData
        nameWithType: SurfaceData.SurfaceData
        qualifiedName: LagaRhino.SurfaceData.SurfaceData
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData.#ctor*
        name: SurfaceData
        nameWithType: SurfaceData.SurfaceData
        qualifiedName: LagaRhino.SurfaceData.SurfaceData
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.#ctor
  LagaRhino.SurfaceData.CustomPattern*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.CustomPattern*
        name: CustomPattern
        nameWithType: SurfaceData.CustomPattern
        qualifiedName: LagaRhino.SurfaceData.CustomPattern
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData.CustomPattern*
        name: CustomPattern
        nameWithType: SurfaceData.CustomPattern
        qualifiedName: LagaRhino.SurfaceData.CustomPattern
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.CustomPattern
  LagaRhino.SurfaceData.TriangularPatter*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.TriangularPatter*
        name: TriangularPatter
        nameWithType: SurfaceData.TriangularPatter
        qualifiedName: LagaRhino.SurfaceData.TriangularPatter
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData.TriangularPatter*
        name: TriangularPatter
        nameWithType: SurfaceData.TriangularPatter
        qualifiedName: LagaRhino.SurfaceData.TriangularPatter
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.TriangularPatter
  System.Collections.Generic.List{Rhino.Geometry.Polyline}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Polyline
        name: Polyline
        nameWithType: Polyline
        qualifiedName: Rhino.Geometry.Polyline
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Polyline
        name: Polyline
        nameWithType: Polyline
        qualifiedName: Rhino.Geometry.Polyline
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Polyline}
  LagaRhino.SurfaceData.QuadPattern*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.QuadPattern*
        name: QuadPattern
        nameWithType: SurfaceData.QuadPattern
        qualifiedName: LagaRhino.SurfaceData.QuadPattern
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData.QuadPattern*
        name: QuadPattern
        nameWithType: SurfaceData.QuadPattern
        qualifiedName: LagaRhino.SurfaceData.QuadPattern
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.QuadPattern
  LagaRhino.SurfaceData.PlaneSurfaceAxis*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.PlaneSurfaceAxis*
        name: PlaneSurfaceAxis
        nameWithType: SurfaceData.PlaneSurfaceAxis
        qualifiedName: LagaRhino.SurfaceData.PlaneSurfaceAxis
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData.PlaneSurfaceAxis*
        name: PlaneSurfaceAxis
        nameWithType: SurfaceData.PlaneSurfaceAxis
        qualifiedName: LagaRhino.SurfaceData.PlaneSurfaceAxis
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.PlaneSurfaceAxis
  System.Collections.Generic.List{Rhino.Geometry.Point3d}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Rhino.Geometry.Point3d
        name: Point3d
        nameWithType: Point3d
        qualifiedName: Rhino.Geometry.Point3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Rhino.Geometry.Point3d}
  LagaRhino.SurfaceData.SurfacePoints*:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData.SurfacePoints*
        name: SurfacePoints
        nameWithType: SurfaceData.SurfacePoints
        qualifiedName: LagaRhino.SurfaceData.SurfacePoints
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData.SurfacePoints*
        name: SurfacePoints
        nameWithType: SurfaceData.SurfacePoints
        qualifiedName: LagaRhino.SurfaceData.SurfacePoints
        isExternal: true
    isDefinition: true
    commentId: Overload:LagaRhino.SurfaceData.SurfacePoints
  LagaRhino.SurfaceData:
    name:
      CSharp:
      - id: LagaRhino.SurfaceData
        name: SurfaceData
        nameWithType: SurfaceData
        qualifiedName: LagaRhino.SurfaceData
        isExternal: true
      VB:
      - id: LagaRhino.SurfaceData
        name: SurfaceData
        nameWithType: SurfaceData
        qualifiedName: LagaRhino.SurfaceData
        isExternal: true
    isDefinition: true
    commentId: T:LagaRhino.SurfaceData
  LagaRhino:
    name:
      CSharp:
      - name: LagaRhino
        nameWithType: LagaRhino
        qualifiedName: LagaRhino
        isExternal: true
      VB:
      - name: LagaRhino
        nameWithType: LagaRhino
        qualifiedName: LagaRhino
    isDefinition: true
    commentId: N:LagaRhino
