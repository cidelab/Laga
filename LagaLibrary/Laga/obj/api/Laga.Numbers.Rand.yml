### YamlMime:ManagedReference
items:
- uid: Laga.Numbers.Rand
  commentId: T:Laga.Numbers.Rand
  id: Rand
  parent: Laga.Numbers
  children:
  - Laga.Numbers.Rand.DblNumber
  - Laga.Numbers.Rand.FltNumber(System.Single,System.Single)
  - Laga.Numbers.Rand.IntNumber(System.Int32,System.Int32)
  - Laga.Numbers.Rand.Numbers(System.Int32,System.Double,System.Double)
  - Laga.Numbers.Rand.Numbers(System.Int32,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Rand
  nameWithType: Rand
  fullName: Laga.Numbers.Rand
  type: Class
  source:
    id: Rand
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\Laga\Rand.cs
    startLine: 11
  assemblies:
  - Laga
  namespace: Laga.Numbers
  summary: "\nRandom number class\n"
  example: []
  syntax:
    content: public class Rand
    content.vb: Public Class Rand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Laga.Numbers.Rand.Numbers(System.Int32,System.Single,System.Single)
  commentId: M:Laga.Numbers.Rand.Numbers(System.Int32,System.Single,System.Single)
  id: Numbers(System.Int32,System.Single,System.Single)
  parent: Laga.Numbers.Rand
  langs:
  - csharp
  - vb
  name: Numbers(Int32, Single, Single)
  nameWithType: Rand.Numbers(Int32, Single, Single)
  fullName: Laga.Numbers.Rand.Numbers(System.Int32, System.Single, System.Single)
  type: Method
  source:
    id: Numbers
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\Laga\Rand.cs
    startLine: 22
  assemblies:
  - Laga
  namespace: Laga.Numbers
  summary: "\nGenerate random numbers\n"
  example: []
  syntax:
    content: public static float[] Numbers(int size, float min, float max)
    parameters:
    - id: size
      type: System.Int32
      description: The amount of random values in the list
    - id: min
      type: System.Single
      description: The minimum value
    - id: max
      type: System.Single
      description: The maximum value
    return:
      type: System.Single[]
      description: float[]
    content.vb: Public Shared Function Numbers(size As Integer, min As Single, max As Single) As Single()
  overload: Laga.Numbers.Rand.Numbers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Laga.Numbers.Rand.Numbers(System.Int32,System.Double,System.Double)
  commentId: M:Laga.Numbers.Rand.Numbers(System.Int32,System.Double,System.Double)
  id: Numbers(System.Int32,System.Double,System.Double)
  parent: Laga.Numbers.Rand
  langs:
  - csharp
  - vb
  name: Numbers(Int32, Double, Double)
  nameWithType: Rand.Numbers(Int32, Double, Double)
  fullName: Laga.Numbers.Rand.Numbers(System.Int32, System.Double, System.Double)
  type: Method
  source:
    id: Numbers
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\Laga\Rand.cs
    startLine: 40
  assemblies:
  - Laga
  namespace: Laga.Numbers
  summary: "\nGenerate random numbers\n"
  example: []
  syntax:
    content: public static double[] Numbers(int size, double min, double max)
    parameters:
    - id: size
      type: System.Int32
      description: The amount of random values in the list
    - id: min
      type: System.Double
      description: The minimum value
    - id: max
      type: System.Double
      description: The maximum value
    return:
      type: System.Double[]
      description: double[]
    content.vb: Public Shared Function Numbers(size As Integer, min As Double, max As Double) As Double()
  overload: Laga.Numbers.Rand.Numbers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Laga.Numbers.Rand.IntNumber(System.Int32,System.Int32)
  commentId: M:Laga.Numbers.Rand.IntNumber(System.Int32,System.Int32)
  id: IntNumber(System.Int32,System.Int32)
  parent: Laga.Numbers.Rand
  langs:
  - csharp
  - vb
  name: IntNumber(Int32, Int32)
  nameWithType: Rand.IntNumber(Int32, Int32)
  fullName: Laga.Numbers.Rand.IntNumber(System.Int32, System.Int32)
  type: Method
  source:
    id: IntNumber
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\Laga\Rand.cs
    startLine: 55
  assemblies:
  - Laga
  namespace: Laga.Numbers
  summary: "\nRandom Integer between a range\n"
  example: []
  syntax:
    content: public static int IntNumber(int min, int max)
    parameters:
    - id: min
      type: System.Int32
      description: The minimum value in the range
    - id: max
      type: System.Int32
      description: The maximum value in the range
    return:
      type: System.Int32
      description: integer
    content.vb: Public Shared Function IntNumber(min As Integer, max As Integer) As Integer
  overload: Laga.Numbers.Rand.IntNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Laga.Numbers.Rand.DblNumber
  commentId: M:Laga.Numbers.Rand.DblNumber
  id: DblNumber
  parent: Laga.Numbers.Rand
  langs:
  - csharp
  - vb
  name: DblNumber()
  nameWithType: Rand.DblNumber()
  fullName: Laga.Numbers.Rand.DblNumber()
  type: Method
  source:
    id: DblNumber
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\Laga\Rand.cs
    startLine: 63
  assemblies:
  - Laga
  namespace: Laga.Numbers
  summary: "\nRandom value between 0 and 1\n"
  example: []
  syntax:
    content: public static double DblNumber()
    return:
      type: System.Double
      description: double
    content.vb: Public Shared Function DblNumber As Double
  overload: Laga.Numbers.Rand.DblNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Laga.Numbers.Rand.FltNumber(System.Single,System.Single)
  commentId: M:Laga.Numbers.Rand.FltNumber(System.Single,System.Single)
  id: FltNumber(System.Single,System.Single)
  parent: Laga.Numbers.Rand
  langs:
  - csharp
  - vb
  name: FltNumber(Single, Single)
  nameWithType: Rand.FltNumber(Single, Single)
  fullName: Laga.Numbers.Rand.FltNumber(System.Single, System.Single)
  type: Method
  source:
    id: FltNumber
    path: C:\Users\delab\Documents\GitHub\Laga\LagaLibrary\Laga\Rand.cs
    startLine: 74
  assemblies:
  - Laga
  namespace: Laga.Numbers
  summary: "\nFloat Number between a range\n"
  example: []
  syntax:
    content: public static float FltNumber(float min, float max)
    parameters:
    - id: min
      type: System.Single
      description: The minimum value in the range
    - id: max
      type: System.Single
      description: The maximum value in the range
    return:
      type: System.Single
      description: float
    content.vb: Public Shared Function FltNumber(min As Single, max As Single) As Single
  overload: Laga.Numbers.Rand.FltNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Laga.Numbers
  commentId: N:Laga.Numbers
  name: Laga.Numbers
  nameWithType: Laga.Numbers
  fullName: Laga.Numbers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Laga.Numbers.Rand.Numbers*
  commentId: Overload:Laga.Numbers.Rand.Numbers
  name: Numbers
  nameWithType: Rand.Numbers
  fullName: Laga.Numbers.Rand.Numbers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Laga.Numbers.Rand.IntNumber*
  commentId: Overload:Laga.Numbers.Rand.IntNumber
  name: IntNumber
  nameWithType: Rand.IntNumber
  fullName: Laga.Numbers.Rand.IntNumber
- uid: Laga.Numbers.Rand.DblNumber*
  commentId: Overload:Laga.Numbers.Rand.DblNumber
  name: DblNumber
  nameWithType: Rand.DblNumber
  fullName: Laga.Numbers.Rand.DblNumber
- uid: Laga.Numbers.Rand.FltNumber*
  commentId: Overload:Laga.Numbers.Rand.FltNumber
  name: FltNumber
  nameWithType: Rand.FltNumber
  fullName: Laga.Numbers.Rand.FltNumber
