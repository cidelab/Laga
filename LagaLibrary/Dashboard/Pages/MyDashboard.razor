@page "/MyDashboard"

@using ChartJs.Blazor.LineChart;
@using ChartJs.Blazor.Common;
@using ChartJs.Blazor.Common.Axes;
@using ChartJs.Blazor.Common.Axes.Ticks;
@using ChartJs.Blazor.Util;

<h3>Genetic Algorithm Progress Dashboard</h3>

<LineChart Config="LineConfig" />

@code
{
    public LineConfig LineConfig { get; set; }

    protected override void OnInitialized()
    {
        LineConfig = new LineConfig
            {
                Options = new LineOptions
                {
                    Responsive = true,
                    Title = new OptionsTitle { Display = true, Text = "hello" },
                    Tooltips = new Tooltips { Intersect = true },
                    Hover = new Hover { Intersect = true },
                    Scales = new Scales
                    {
                        XAxes = new List<CartesianAxis>
                    {
                        new CategoryAxis
                        {
                            ScaleLabel = new ScaleLabel { LabelString = "Generations" }
                        }
                    },
                        YAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel { LabelString = "Fitness" }
                        }
                    }
                    }
                }
            };

        IDataset<double> dataset = new LineDataset<double>(Laga.Numbers.Rand.Doubles(50, 0, 100))
            {
                Label = "Testing Rand class",
                BackgroundColor = ColorUtil.FromDrawingColor(System.Drawing.Color.Red),
                BorderColor = ColorUtil.FromDrawingColor(System.Drawing.Color.Red),
                Fill = ChartJs.Blazor.Common.Enums.FillingMode.Disabled
            };

        LineConfig.Data.Datasets.Add(dataset);
        LineConfig.Data.Datasets.Add(dataset);
    }
}
