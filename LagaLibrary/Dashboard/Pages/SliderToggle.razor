@page "/SliderToggle"
@using ScottPlot;
@using ScottPlot.Blazor;

<h4>Sigmoid curve</h4>

<BlazorPlot @ref=Sigmoid Style="width: 1000px; height: 800px;" />

@code {

    BlazorPlot Sigmoid { get; set; } = new();

    protected override void OnAfterRender(bool firstRender)
    {
        double[] fltData = new double[100];
        float[] arrFltData = new float[100];

        for (int i = 0; i < 100; i++)
            fltData[i] = i;

        Sigmoid.Plot.Add.Signal(Tools.Convert2Doubles(fltData.ToList()));

        double s = 0.000;
        for(int j = 0; j < 50; j++)
        {

            s = Laga.Numbers.Tools.Remap(j, 0, 50, 0.000, 1.000);
            for (int k = 0; k < 100; k++)
                arrFltData[k] = (float)Function.Sigmoid(fltData[k], 1, 100, 1, 100, s);

            ScottPlot.Plottables.Signal sign = Sigmoid.Plot.Add.Signal(Tools.Convert2Doubles(arrFltData.ToList()));

            System.Drawing.Color clr = Laga.Numbers.ColorRange.LerpColor(System.Drawing.Color.Red, System.Drawing.Color.RoyalBlue, Laga.Numbers.Tools.Remap(j, 0, 50, 0, 1));
            sign.LineColor = ScottPlot.Color.FromColor(clr);

            ScottPlot.Plottables.Text txt = Sigmoid.Plot.Add.Text("decay: " + Math.Round(s, 4).ToString(), -15, j*2.1);
            txt.LabelFontSize = 11;

            sign.LineWidth = 2;
        }
        
        Sigmoid.Plot.Title("complex Sigmoid function");
    }

}
