@page "/SliderToggle"
@using ScottPlot;
@using ScottPlot.Blazor;
@using Microsoft.FluentUI.AspNetCore.Components;

<div style="margin-bottom: 60px;">
    <FluentButton style="width: 90px; margin: 10px;" @onclick="() => orientation = (orientation == Microsoft.FluentUI.AspNetCore.Components.Orientation.Vertical) ? Microsoft.FluentUI.AspNetCore.Components.Orientation.Horizontal : Microsoft.FluentUI.AspNetCore.Components.Orientation.Vertical">Toggle orientation</FluentButton>
    <FluentSlider Label="Select a temperature" Orientation="@orientation" Min="0" Max="100" Step="10" @bind-Value=value>
        <FluentSliderLabel Position="0">0&#8451;</FluentSliderLabel>
        <FluentSliderLabel Position="10">10&#8451;</FluentSliderLabel>
        <FluentSliderLabel Position="90">90&#8451;</FluentSliderLabel>
        <FluentSliderLabel Position="100">100&#8451;</FluentSliderLabel>
    </FluentSlider>
</div>
<p>Selected value: @value</p>


<BlazorPlot @ref=Sigmoid Style="width: 600px; height: 300px;" />

@code {

    Microsoft.FluentUI.AspNetCore.Components.Orientation orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation.Horizontal;
    int value = 70;

    BlazorPlot Sigmoid { get; set; } = new();

    protected override void OnAfterRender(bool firstRender)
    {
        double[] fltData = new double[100];
        float[] arrFltData = new float[100];

        for (int i = 0; i < 100; i++)
        {
            fltData[i] = i;
            arrFltData[i] = (float)Function.Sigmoid(fltData[i], 1, 100, 1, 100, 0.001);
        }
        Sigmoid.Plot.Add.Signal(Tools.Convert2Doubles(fltData.ToList()));
        ScottPlot.Plottables.Signal sign2 = Sigmoid.Plot.Add.Signal(Tools.Convert2Doubles(arrFltData.ToList()));
        sign2.LineColor = Colors.Red;
        Sigmoid.Plot.Title("complex Sigmoid function");
    }

}
