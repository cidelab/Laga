<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LagaUnity</name>
    </assembly>
    <members>
        <member name="T:LagaUnity.Lne">
            <summary>
            Draw a line in Unity
            </summary>
        </member>
        <member name="P:LagaUnity.Lne.PointA">
            <summary>
            First point in the Line
            </summary>
        </member>
        <member name="P:LagaUnity.Lne.PointB">
            <summary>
            Second Point in the Line
            </summary>
        </member>
        <member name="M:LagaUnity.Lne.#ctor(LagaUnity.Vec,LagaUnity.Vec)">
            <summary>
            Construct a laga line object by 2 points.
            </summary>
            <param name="pointA">First Point</param>
            <param name="pointB">Second Point</param>
        </member>
        <member name="M:LagaUnity.Lne.MidPoint">
            <summary>
            Returns the mid point.
            </summary>
            <returns>Laga Point</returns>
        </member>
        <member name="M:LagaUnity.Lne.Draw(System.Single,UnityEngine.Color)">
            <summary>
            Draw a Unity Line
            </summary>
            <param name="width">Line width</param>
            <param name="color">Color line</param>
        </member>
        <member name="M:LagaUnity.Lne.DrawLine(LagaUnity.Vec,LagaUnity.Vec,System.Single,UnityEngine.Color)">
            <summary>
            Draw a Unity line
            </summary>
            <param name="pointA">First point</param>
            <param name="pointB">Second Point</param>
            <param name="width">Line Width</param>
            <param name="color">Color Line</param>
        </member>
        <member name="T:LagaUnity.Vec">
            <summary>
            Unity Point
            </summary>
        </member>
        <member name="M:LagaUnity.Vec.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Build a UVector object by 3 coordinates.
            </summary>
            <param name="Xcoord">X coordinate</param>
            <param name="Ycoord">Y coordinate</param>
            <param name="Zcoord">z coordinate</param>
        </member>
        <member name="M:LagaUnity.Vec.#ctor(UnityEngine.Vector3)">
            <summary>
            Construct the Laga Point through Unity Vector3
            </summary>
            <param name="vector"></param>
        </member>
        <member name="M:LagaUnity.Vec.ToVector3">
            <summary>
            Cast Laga Vector to Unity Vector
            </summary>
            <returns></returns>
        </member>
        <member name="M:LagaUnity.Vec.Draw(System.Single,UnityEngine.Color)">
            <summary>
            Draw the point
            </summary>
            <param name="width">width for the point, 2.0</param>
            <param name="color">the color's point to draw</param>
        </member>
        <member name="M:LagaUnity.Vec.DrawPoint(LagaUnity.Vec,System.Single,UnityEngine.Color)">
            <summary>
            Draw a point
            </summary>
            <param name="point">The vector to display</param>
            <param name="width">The width of the point</param>
            <param name="color">The color to display</param>
        </member>
        <member name="T:LagaUnity.Polygon">
            <summary>
            Polygon class
            </summary>
        </member>
        <member name="P:LagaUnity.Polygon.Count">
            <summary>
            Polygon lenght
            </summary>
        </member>
        <member name="P:LagaUnity.Polygon.IsReadOnly">
            <summary>
            IsReadOnly boolean
            </summary>
        </member>
        <member name="M:LagaUnity.Polygon.Add(LagaUnity.Vec)">
            <summary>
            Add a Vector to the poylgon
            </summary>
            <param name="vec">The Vector to add in the list</param>
        </member>
        <member name="M:LagaUnity.Polygon.Clear">
            <summary>
            Clear all data in the polygon
            </summary>
        </member>
        <member name="M:LagaUnity.Polygon.Contains(LagaUnity.Vec)">
            <summary>
            Check if the vec is in the polygon
            </summary>
            <param name="vec"></param>
            <returns>True if the vector belongs to the polygon</returns>
        </member>
        <member name="M:LagaUnity.Polygon.CopyTo(LagaUnity.Vec[],System.Int32)">
            <summary>
            Not implemented yet
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LagaUnity.Polygon.GetEnumerator">
            <summary>
            Not implemented yet.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LagaUnity.Polygon.Remove(LagaUnity.Vec)">
            <summary>
            Remove a vec from the polygon
            </summary>
            <param name="vec">the Vector to remove</param>
            <returns>true if all went ok</returns>
        </member>
        <member name="M:LagaUnity.Polygon.#ctor(System.Collections.Generic.List{LagaUnity.Vec})">
            <summary>
            Polygon constructor by a list of vectors
            </summary>
            <param name="VectorList">the list of vectors</param>
        </member>
        <member name="M:LagaUnity.Polygon.DrawPolygon(System.Single,UnityEngine.Color,System.Boolean)">
            <summary>
            Draw all the segments in the polygon
            </summary>
            <param name="width">The width of the segment</param>
            <param name="color">The Color</param>
            <param name="loop">True if closed, false is not</param>
        </member>
        <member name="P:LagaUnity.Polygon.Length">
            <summary>
            The length of the polygon
            </summary>
        </member>
        <member name="M:LagaUnity.Polygon.SegmentAt(System.Int32)">
            <summary>
            Draw a specific segment in the polygon
            </summary>
            <param name="index">the segment index in the polygon, if out of range is null</param>
            <returns>The segment as Line</returns>
        </member>
        <member name="M:LagaUnity.Polygon.SortPolygonPoints">
            <summary>
            Sort the points in the polygon
            </summary>
            <returns>Sorted list of vectors in the polygon by X, then Y</returns>
        </member>
    </members>
</doc>
